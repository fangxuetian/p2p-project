#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Agp2p.Linq2SQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="agrh")]
	public partial class Agp2pDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertli_activity_transactions(li_activity_transactions instance);
    partial void Updateli_activity_transactions(li_activity_transactions instance);
    partial void Deleteli_activity_transactions(li_activity_transactions instance);
    partial void Insertli_bank_accounts(li_bank_accounts instance);
    partial void Updateli_bank_accounts(li_bank_accounts instance);
    partial void Deleteli_bank_accounts(li_bank_accounts instance);
    partial void Insertli_bank_transactions(li_bank_transactions instance);
    partial void Updateli_bank_transactions(li_bank_transactions instance);
    partial void Deleteli_bank_transactions(li_bank_transactions instance);
    partial void Insertli_invitations(li_invitations instance);
    partial void Updateli_invitations(li_invitations instance);
    partial void Deleteli_invitations(li_invitations instance);
    partial void Insertli_risk_mortgage(li_risk_mortgage instance);
    partial void Updateli_risk_mortgage(li_risk_mortgage instance);
    partial void Deleteli_risk_mortgage(li_risk_mortgage instance);
    partial void Insertli_user_group_access_keys(li_user_group_access_keys instance);
    partial void Updateli_user_group_access_keys(li_user_group_access_keys instance);
    partial void Deleteli_user_group_access_keys(li_user_group_access_keys instance);
    partial void Insertli_wallet_histories(li_wallet_histories instance);
    partial void Updateli_wallet_histories(li_wallet_histories instance);
    partial void Deleteli_wallet_histories(li_wallet_histories instance);
    partial void Insertdt_user_code(dt_user_code instance);
    partial void Updatedt_user_code(dt_user_code instance);
    partial void Deletedt_user_code(dt_user_code instance);
    partial void Insertdt_user_groups(dt_user_groups instance);
    partial void Updatedt_user_groups(dt_user_groups instance);
    partial void Deletedt_user_groups(dt_user_groups instance);
    partial void Insertdt_article_attribute_value(dt_article_attribute_value instance);
    partial void Updatedt_article_attribute_value(dt_article_attribute_value instance);
    partial void Deletedt_article_attribute_value(dt_article_attribute_value instance);
    partial void Insertli_user_group_servers(li_user_group_servers instance);
    partial void Updateli_user_group_servers(li_user_group_servers instance);
    partial void Deleteli_user_group_servers(li_user_group_servers instance);
    partial void Insertdt_manager(dt_manager instance);
    partial void Updatedt_manager(dt_manager instance);
    partial void Deletedt_manager(dt_manager instance);
    partial void Insertli_wallets(li_wallets instance);
    partial void Updateli_wallets(li_wallets instance);
    partial void Deleteli_wallets(li_wallets instance);
    partial void Insertdt_mail_template(dt_mail_template instance);
    partial void Updatedt_mail_template(dt_mail_template instance);
    partial void Deletedt_mail_template(dt_mail_template instance);
    partial void Insertdt_manager_log(dt_manager_log instance);
    partial void Updatedt_manager_log(dt_manager_log instance);
    partial void Deletedt_manager_log(dt_manager_log instance);
    partial void Insertdt_sms_template(dt_sms_template instance);
    partial void Updatedt_sms_template(dt_sms_template instance);
    partial void Deletedt_sms_template(dt_sms_template instance);
    partial void Insertdt_user_point_log(dt_user_point_log instance);
    partial void Updatedt_user_point_log(dt_user_point_log instance);
    partial void Deletedt_user_point_log(dt_user_point_log instance);
    partial void Insertli_departments(li_departments instance);
    partial void Updateli_departments(li_departments instance);
    partial void Deleteli_departments(li_departments instance);
    partial void Insertdt_user_login_log(dt_user_login_log instance);
    partial void Updatedt_user_login_log(dt_user_login_log instance);
    partial void Deletedt_user_login_log(dt_user_login_log instance);
    partial void Insertli_user_group_departments(li_user_group_departments instance);
    partial void Updateli_user_group_departments(li_user_group_departments instance);
    partial void Deleteli_user_group_departments(li_user_group_departments instance);
    partial void Insertdt_article(dt_article instance);
    partial void Updatedt_article(dt_article instance);
    partial void Deletedt_article(dt_article instance);
    partial void Insertli_mortgage_types(li_mortgage_types instance);
    partial void Updateli_mortgage_types(li_mortgage_types instance);
    partial void Deleteli_mortgage_types(li_mortgage_types instance);
    partial void Insertli_mortgages(li_mortgages instance);
    partial void Updateli_mortgages(li_mortgages instance);
    partial void Deleteli_mortgages(li_mortgages instance);
    partial void Insertdt_navigation(dt_navigation instance);
    partial void Updatedt_navigation(dt_navigation instance);
    partial void Deletedt_navigation(dt_navigation instance);
    partial void Insertli_albums(li_albums instance);
    partial void Updateli_albums(li_albums instance);
    partial void Deleteli_albums(li_albums instance);
    partial void Insertli_guarantors(li_guarantors instance);
    partial void Updateli_guarantors(li_guarantors instance);
    partial void Deleteli_guarantors(li_guarantors instance);
    partial void Insertli_creditors(li_creditors instance);
    partial void Updateli_creditors(li_creditors instance);
    partial void Deleteli_creditors(li_creditors instance);
    partial void Insertdt_article_category(dt_article_category instance);
    partial void Updatedt_article_category(dt_article_category instance);
    partial void Deletedt_article_category(dt_article_category instance);
    partial void Insertli_notification_settings(li_notification_settings instance);
    partial void Updateli_notification_settings(li_notification_settings instance);
    partial void Deleteli_notification_settings(li_notification_settings instance);
    partial void Insertdt_user_message(dt_user_message instance);
    partial void Updatedt_user_message(dt_user_message instance);
    partial void Deletedt_user_message(dt_user_message instance);
    partial void Insertdt_channel(dt_channel instance);
    partial void Updatedt_channel(dt_channel instance);
    partial void Deletedt_channel(dt_channel instance);
    partial void Insertli_company_inoutcome(li_company_inoutcome instance);
    partial void Updateli_company_inoutcome(li_company_inoutcome instance);
    partial void Deleteli_company_inoutcome(li_company_inoutcome instance);
    partial void Insertli_loaner_companies(li_loaner_companies instance);
    partial void Updateli_loaner_companies(li_loaner_companies instance);
    partial void Deleteli_loaner_companies(li_loaner_companies instance);
    partial void Insertli_repayment_tasks(li_repayment_tasks instance);
    partial void Updateli_repayment_tasks(li_repayment_tasks instance);
    partial void Deleteli_repayment_tasks(li_repayment_tasks instance);
    partial void Insertli_manager_messages(li_manager_messages instance);
    partial void Updateli_manager_messages(li_manager_messages instance);
    partial void Deleteli_manager_messages(li_manager_messages instance);
    partial void Insertli_manager_notification_settings(li_manager_notification_settings instance);
    partial void Updateli_manager_notification_settings(li_manager_notification_settings instance);
    partial void Deleteli_manager_notification_settings(li_manager_notification_settings instance);
    partial void Insertli_project_transactions(li_project_transactions instance);
    partial void Updateli_project_transactions(li_project_transactions instance);
    partial void Deleteli_project_transactions(li_project_transactions instance);
    partial void Insertli_loaners(li_loaners instance);
    partial void Updateli_loaners(li_loaners instance);
    partial void Deleteli_loaners(li_loaners instance);
    partial void Insertli_risks(li_risks instance);
    partial void Updateli_risks(li_risks instance);
    partial void Deleteli_risks(li_risks instance);
    partial void Insertdt_users(dt_users instance);
    partial void Updatedt_users(dt_users instance);
    partial void Deletedt_users(dt_users instance);
    partial void Insertli_projects(li_projects instance);
    partial void Updateli_projects(li_projects instance);
    partial void Deleteli_projects(li_projects instance);
    partial void Insertli_pay_request_log(li_pay_request_log instance);
    partial void Updateli_pay_request_log(li_pay_request_log instance);
    partial void Deleteli_pay_request_log(li_pay_request_log instance);
    partial void Insertli_pay_response_log(li_pay_response_log instance);
    partial void Updateli_pay_response_log(li_pay_response_log instance);
    partial void Deleteli_pay_response_log(li_pay_response_log instance);
    #endregion
		
		public Agp2pDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Agp2pDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Agp2pDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Agp2pDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<li_activity_transactions> li_activity_transactions
		{
			get
			{
				return this.GetTable<li_activity_transactions>();
			}
		}
		
		public System.Data.Linq.Table<li_bank_accounts> li_bank_accounts
		{
			get
			{
				return this.GetTable<li_bank_accounts>();
			}
		}
		
		public System.Data.Linq.Table<li_bank_transactions> li_bank_transactions
		{
			get
			{
				return this.GetTable<li_bank_transactions>();
			}
		}
		
		public System.Data.Linq.Table<li_invitations> li_invitations
		{
			get
			{
				return this.GetTable<li_invitations>();
			}
		}
		
		public System.Data.Linq.Table<li_risk_mortgage> li_risk_mortgage
		{
			get
			{
				return this.GetTable<li_risk_mortgage>();
			}
		}
		
		public System.Data.Linq.Table<li_user_group_access_keys> li_user_group_access_keys
		{
			get
			{
				return this.GetTable<li_user_group_access_keys>();
			}
		}
		
		public System.Data.Linq.Table<li_wallet_histories> li_wallet_histories
		{
			get
			{
				return this.GetTable<li_wallet_histories>();
			}
		}
		
		public System.Data.Linq.Table<dt_user_code> dt_user_code
		{
			get
			{
				return this.GetTable<dt_user_code>();
			}
		}
		
		public System.Data.Linq.Table<dt_user_groups> dt_user_groups
		{
			get
			{
				return this.GetTable<dt_user_groups>();
			}
		}
		
		public System.Data.Linq.Table<dt_article_attribute_value> dt_article_attribute_value
		{
			get
			{
				return this.GetTable<dt_article_attribute_value>();
			}
		}
		
		public System.Data.Linq.Table<li_user_group_servers> li_user_group_servers
		{
			get
			{
				return this.GetTable<li_user_group_servers>();
			}
		}
		
		public System.Data.Linq.Table<dt_manager> dt_manager
		{
			get
			{
				return this.GetTable<dt_manager>();
			}
		}
		
		public System.Data.Linq.Table<li_wallets> li_wallets
		{
			get
			{
				return this.GetTable<li_wallets>();
			}
		}
		
		public System.Data.Linq.Table<dt_mail_template> dt_mail_template
		{
			get
			{
				return this.GetTable<dt_mail_template>();
			}
		}
		
		public System.Data.Linq.Table<dt_manager_log> dt_manager_log
		{
			get
			{
				return this.GetTable<dt_manager_log>();
			}
		}
		
		public System.Data.Linq.Table<dt_sms_template> dt_sms_template
		{
			get
			{
				return this.GetTable<dt_sms_template>();
			}
		}
		
		public System.Data.Linq.Table<dt_user_point_log> dt_user_point_log
		{
			get
			{
				return this.GetTable<dt_user_point_log>();
			}
		}
		
		public System.Data.Linq.Table<li_departments> li_departments
		{
			get
			{
				return this.GetTable<li_departments>();
			}
		}
		
		public System.Data.Linq.Table<dt_user_login_log> dt_user_login_log
		{
			get
			{
				return this.GetTable<dt_user_login_log>();
			}
		}
		
		public System.Data.Linq.Table<dt_weixin_account> dt_weixin_account
		{
			get
			{
				return this.GetTable<dt_weixin_account>();
			}
		}
		
		public System.Data.Linq.Table<li_user_group_departments> li_user_group_departments
		{
			get
			{
				return this.GetTable<li_user_group_departments>();
			}
		}
		
		public System.Data.Linq.Table<dt_article> dt_article
		{
			get
			{
				return this.GetTable<dt_article>();
			}
		}
		
		public System.Data.Linq.Table<li_mortgage_types> li_mortgage_types
		{
			get
			{
				return this.GetTable<li_mortgage_types>();
			}
		}
		
		public System.Data.Linq.Table<li_mortgages> li_mortgages
		{
			get
			{
				return this.GetTable<li_mortgages>();
			}
		}
		
		public System.Data.Linq.Table<dt_navigation> dt_navigation
		{
			get
			{
				return this.GetTable<dt_navigation>();
			}
		}
		
		public System.Data.Linq.Table<li_albums> li_albums
		{
			get
			{
				return this.GetTable<li_albums>();
			}
		}
		
		public System.Data.Linq.Table<li_guarantors> li_guarantors
		{
			get
			{
				return this.GetTable<li_guarantors>();
			}
		}
		
		public System.Data.Linq.Table<li_creditors> li_creditors
		{
			get
			{
				return this.GetTable<li_creditors>();
			}
		}
		
		public System.Data.Linq.Table<dt_article_category> dt_article_category
		{
			get
			{
				return this.GetTable<dt_article_category>();
			}
		}
		
		public System.Data.Linq.Table<li_notification_settings> li_notification_settings
		{
			get
			{
				return this.GetTable<li_notification_settings>();
			}
		}
		
		public System.Data.Linq.Table<dt_user_message> dt_user_message
		{
			get
			{
				return this.GetTable<dt_user_message>();
			}
		}
		
		public System.Data.Linq.Table<dt_channel> dt_channel
		{
			get
			{
				return this.GetTable<dt_channel>();
			}
		}
		
		public System.Data.Linq.Table<li_company_inoutcome> li_company_inoutcome
		{
			get
			{
				return this.GetTable<li_company_inoutcome>();
			}
		}
		
		public System.Data.Linq.Table<li_loaner_companies> li_loaner_companies
		{
			get
			{
				return this.GetTable<li_loaner_companies>();
			}
		}
		
		public System.Data.Linq.Table<li_repayment_tasks> li_repayment_tasks
		{
			get
			{
				return this.GetTable<li_repayment_tasks>();
			}
		}
		
		public System.Data.Linq.Table<li_manager_messages> li_manager_messages
		{
			get
			{
				return this.GetTable<li_manager_messages>();
			}
		}
		
		public System.Data.Linq.Table<li_manager_notification_settings> li_manager_notification_settings
		{
			get
			{
				return this.GetTable<li_manager_notification_settings>();
			}
		}
		
		public System.Data.Linq.Table<li_project_transactions> li_project_transactions
		{
			get
			{
				return this.GetTable<li_project_transactions>();
			}
		}
		
		public System.Data.Linq.Table<li_loaners> li_loaners
		{
			get
			{
				return this.GetTable<li_loaners>();
			}
		}
		
		public System.Data.Linq.Table<li_risks> li_risks
		{
			get
			{
				return this.GetTable<li_risks>();
			}
		}
		
		public System.Data.Linq.Table<dt_users> dt_users
		{
			get
			{
				return this.GetTable<dt_users>();
			}
		}
		
		public System.Data.Linq.Table<li_projects> li_projects
		{
			get
			{
				return this.GetTable<li_projects>();
			}
		}
		
		public System.Data.Linq.Table<li_pay_request_log> li_pay_request_log
		{
			get
			{
				return this.GetTable<li_pay_request_log>();
			}
		}
		
		public System.Data.Linq.Table<li_pay_response_log> li_pay_response_log
		{
			get
			{
				return this.GetTable<li_pay_response_log>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_activity_transactions")]
	public partial class li_activity_transactions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private System.Nullable<System.DateTime> _transact_time;
		
		private decimal _value;
		
		private byte _type;
		
		private byte _status;
		
		private System.DateTime _create_time;
		
		private string _remarks;
		
		private System.Nullable<int> _approver;
		
		private byte _activity_type;
		
		private string _details;
		
		private EntitySet<li_wallet_histories> _li_wallet_histories;
		
		private EntityRef<dt_manager> _dt_manager;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Ontransact_timeChanging(System.Nullable<System.DateTime> value);
    partial void Ontransact_timeChanged();
    partial void OnvalueChanging(decimal value);
    partial void OnvalueChanged();
    partial void OntypeChanging(byte value);
    partial void OntypeChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void Oncreate_timeChanging(System.DateTime value);
    partial void Oncreate_timeChanged();
    partial void OnremarksChanging(string value);
    partial void OnremarksChanged();
    partial void OnapproverChanging(System.Nullable<int> value);
    partial void OnapproverChanged();
    partial void Onactivity_typeChanging(byte value);
    partial void Onactivity_typeChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    #endregion
		
		public li_activity_transactions()
		{
			this._li_wallet_histories = new EntitySet<li_wallet_histories>(new Action<li_wallet_histories>(this.attach_li_wallet_histories), new Action<li_wallet_histories>(this.detach_li_wallet_histories));
			this._dt_manager = default(EntityRef<dt_manager>);
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transact_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> transact_time
		{
			get
			{
				return this._transact_time;
			}
			set
			{
				if ((this._transact_time != value))
				{
					this.Ontransact_timeChanging(value);
					this.SendPropertyChanging();
					this._transact_time = value;
					this.SendPropertyChanged("transact_time");
					this.Ontransact_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Decimal(19,2) NOT NULL")]
		public decimal value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="TinyInt NOT NULL")]
		public byte type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_time", DbType="DateTime NOT NULL")]
		public System.DateTime create_time
		{
			get
			{
				return this._create_time;
			}
			set
			{
				if ((this._create_time != value))
				{
					this.Oncreate_timeChanging(value);
					this.SendPropertyChanging();
					this._create_time = value;
					this.SendPropertyChanged("create_time");
					this.Oncreate_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remarks", DbType="NVarChar(100)")]
		public string remarks
		{
			get
			{
				return this._remarks;
			}
			set
			{
				if ((this._remarks != value))
				{
					this.OnremarksChanging(value);
					this.SendPropertyChanging();
					this._remarks = value;
					this.SendPropertyChanged("remarks");
					this.OnremarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approver", DbType="Int")]
		public System.Nullable<int> approver
		{
			get
			{
				return this._approver;
			}
			set
			{
				if ((this._approver != value))
				{
					if (this._dt_manager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnapproverChanging(value);
					this.SendPropertyChanging();
					this._approver = value;
					this.SendPropertyChanged("approver");
					this.OnapproverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity_type", DbType="TinyInt NOT NULL")]
		public byte activity_type
		{
			get
			{
				return this._activity_type;
			}
			set
			{
				if ((this._activity_type != value))
				{
					this.Onactivity_typeChanging(value);
					this.SendPropertyChanging();
					this._activity_type = value;
					this.SendPropertyChanged("activity_type");
					this.Onactivity_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="NVarChar(500)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_activity_transactions_li_wallet_histories", Storage="_li_wallet_histories", ThisKey="id", OtherKey="activity_transaction")]
		public EntitySet<li_wallet_histories> li_wallet_histories
		{
			get
			{
				return this._li_wallet_histories;
			}
			set
			{
				this._li_wallet_histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_manager_li_activity_transactions", Storage="_dt_manager", ThisKey="approver", OtherKey="id", IsForeignKey=true)]
		public dt_manager dt_manager
		{
			get
			{
				return this._dt_manager.Entity;
			}
			set
			{
				dt_manager previousValue = this._dt_manager.Entity;
				if (((previousValue != value) 
							|| (this._dt_manager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_manager.Entity = null;
						previousValue.li_activity_transactions.Remove(this);
					}
					this._dt_manager.Entity = value;
					if ((value != null))
					{
						value.li_activity_transactions.Add(this);
						this._approver = value.id;
					}
					else
					{
						this._approver = default(Nullable<int>);
					}
					this.SendPropertyChanged("dt_manager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_activity_transactions", Storage="_dt_users", ThisKey="user_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_activity_transactions.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_activity_transactions.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_wallet_histories(li_wallet_histories entity)
		{
			this.SendPropertyChanging();
			entity.li_activity_transactions = this;
		}
		
		private void detach_li_wallet_histories(li_wallet_histories entity)
		{
			this.SendPropertyChanging();
			entity.li_activity_transactions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_bank_accounts")]
	public partial class li_bank_accounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _owner;
		
		private string _bank;
		
		private string _opening_bank;
		
		private string _account;
		
		private System.DateTime _last_access_time;
		
		private string _location;
		
		private EntitySet<li_bank_transactions> _li_bank_transactions;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnownerChanging(int value);
    partial void OnownerChanged();
    partial void OnbankChanging(string value);
    partial void OnbankChanged();
    partial void Onopening_bankChanging(string value);
    partial void Onopening_bankChanged();
    partial void OnaccountChanging(string value);
    partial void OnaccountChanged();
    partial void Onlast_access_timeChanging(System.DateTime value);
    partial void Onlast_access_timeChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    #endregion
		
		public li_bank_accounts()
		{
			this._li_bank_transactions = new EntitySet<li_bank_transactions>(new Action<li_bank_transactions>(this.attach_li_bank_transactions), new Action<li_bank_transactions>(this.detach_li_bank_transactions));
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="Int NOT NULL")]
		public int owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string bank
		{
			get
			{
				return this._bank;
			}
			set
			{
				if ((this._bank != value))
				{
					this.OnbankChanging(value);
					this.SendPropertyChanging();
					this._bank = value;
					this.SendPropertyChanged("bank");
					this.OnbankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opening_bank", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string opening_bank
		{
			get
			{
				return this._opening_bank;
			}
			set
			{
				if ((this._opening_bank != value))
				{
					this.Onopening_bankChanging(value);
					this.SendPropertyChanging();
					this._opening_bank = value;
					this.SendPropertyChanged("opening_bank");
					this.Onopening_bankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_access_time", DbType="DateTime NOT NULL")]
		public System.DateTime last_access_time
		{
			get
			{
				return this._last_access_time;
			}
			set
			{
				if ((this._last_access_time != value))
				{
					this.Onlast_access_timeChanging(value);
					this.SendPropertyChanging();
					this._last_access_time = value;
					this.SendPropertyChanged("last_access_time");
					this.Onlast_access_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="NVarChar(50)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_bank_accounts_li_bank_transactions", Storage="_li_bank_transactions", ThisKey="id", OtherKey="withdraw_account")]
		public EntitySet<li_bank_transactions> li_bank_transactions
		{
			get
			{
				return this._li_bank_transactions;
			}
			set
			{
				this._li_bank_transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_bank_accounts", Storage="_dt_users", ThisKey="owner", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_bank_accounts.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_bank_accounts.Add(this);
						this._owner = value.id;
					}
					else
					{
						this._owner = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_bank_transactions(li_bank_transactions entity)
		{
			this.SendPropertyChanging();
			entity.li_bank_accounts = this;
		}
		
		private void detach_li_bank_transactions(li_bank_transactions entity)
		{
			this.SendPropertyChanging();
			entity.li_bank_accounts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_bank_transactions")]
	public partial class li_bank_transactions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _charger;
		
		private System.Nullable<int> _withdraw_account;
		
		private System.Nullable<System.DateTime> _transact_time;
		
		private byte _status;
		
		private byte _type;
		
		private decimal _value;
		
		private decimal _handling_fee;
		
		private byte _handling_fee_type;
		
		private string _no_order;
		
		private System.DateTime _create_time;
		
		private System.Nullable<byte> _pay_api;
		
		private System.Nullable<int> _approver;
		
		private string _remarks;
		
		private string _ip;
		
		private EntitySet<li_wallet_histories> _li_wallet_histories;
		
		private EntityRef<li_bank_accounts> _li_bank_accounts;
		
		private EntityRef<dt_manager> _dt_manager;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnchargerChanging(System.Nullable<int> value);
    partial void OnchargerChanged();
    partial void Onwithdraw_accountChanging(System.Nullable<int> value);
    partial void Onwithdraw_accountChanged();
    partial void Ontransact_timeChanging(System.Nullable<System.DateTime> value);
    partial void Ontransact_timeChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OntypeChanging(byte value);
    partial void OntypeChanged();
    partial void OnvalueChanging(decimal value);
    partial void OnvalueChanged();
    partial void Onhandling_feeChanging(decimal value);
    partial void Onhandling_feeChanged();
    partial void Onhandling_fee_typeChanging(byte value);
    partial void Onhandling_fee_typeChanged();
    partial void Onno_orderChanging(string value);
    partial void Onno_orderChanged();
    partial void Oncreate_timeChanging(System.DateTime value);
    partial void Oncreate_timeChanged();
    partial void Onpay_apiChanging(System.Nullable<byte> value);
    partial void Onpay_apiChanged();
    partial void OnapproverChanging(System.Nullable<int> value);
    partial void OnapproverChanged();
    partial void OnremarksChanging(string value);
    partial void OnremarksChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    #endregion
		
		public li_bank_transactions()
		{
			this._li_wallet_histories = new EntitySet<li_wallet_histories>(new Action<li_wallet_histories>(this.attach_li_wallet_histories), new Action<li_wallet_histories>(this.detach_li_wallet_histories));
			this._li_bank_accounts = default(EntityRef<li_bank_accounts>);
			this._dt_manager = default(EntityRef<dt_manager>);
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_charger", DbType="Int")]
		public System.Nullable<int> charger
		{
			get
			{
				return this._charger;
			}
			set
			{
				if ((this._charger != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnchargerChanging(value);
					this.SendPropertyChanging();
					this._charger = value;
					this.SendPropertyChanged("charger");
					this.OnchargerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_withdraw_account", DbType="Int")]
		public System.Nullable<int> withdraw_account
		{
			get
			{
				return this._withdraw_account;
			}
			set
			{
				if ((this._withdraw_account != value))
				{
					if (this._li_bank_accounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwithdraw_accountChanging(value);
					this.SendPropertyChanging();
					this._withdraw_account = value;
					this.SendPropertyChanged("withdraw_account");
					this.Onwithdraw_accountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transact_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> transact_time
		{
			get
			{
				return this._transact_time;
			}
			set
			{
				if ((this._transact_time != value))
				{
					this.Ontransact_timeChanging(value);
					this.SendPropertyChanging();
					this._transact_time = value;
					this.SendPropertyChanged("transact_time");
					this.Ontransact_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="TinyInt NOT NULL")]
		public byte type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Decimal(19,2) NOT NULL")]
		public decimal value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_handling_fee", DbType="Decimal(9,2) NOT NULL")]
		public decimal handling_fee
		{
			get
			{
				return this._handling_fee;
			}
			set
			{
				if ((this._handling_fee != value))
				{
					this.Onhandling_feeChanging(value);
					this.SendPropertyChanging();
					this._handling_fee = value;
					this.SendPropertyChanged("handling_fee");
					this.Onhandling_feeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_handling_fee_type", DbType="TinyInt NOT NULL")]
		public byte handling_fee_type
		{
			get
			{
				return this._handling_fee_type;
			}
			set
			{
				if ((this._handling_fee_type != value))
				{
					this.Onhandling_fee_typeChanging(value);
					this.SendPropertyChanging();
					this._handling_fee_type = value;
					this.SendPropertyChanged("handling_fee_type");
					this.Onhandling_fee_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no_order", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string no_order
		{
			get
			{
				return this._no_order;
			}
			set
			{
				if ((this._no_order != value))
				{
					this.Onno_orderChanging(value);
					this.SendPropertyChanging();
					this._no_order = value;
					this.SendPropertyChanged("no_order");
					this.Onno_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_time", DbType="DateTime NOT NULL")]
		public System.DateTime create_time
		{
			get
			{
				return this._create_time;
			}
			set
			{
				if ((this._create_time != value))
				{
					this.Oncreate_timeChanging(value);
					this.SendPropertyChanging();
					this._create_time = value;
					this.SendPropertyChanged("create_time");
					this.Oncreate_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_api", DbType="TinyInt")]
		public System.Nullable<byte> pay_api
		{
			get
			{
				return this._pay_api;
			}
			set
			{
				if ((this._pay_api != value))
				{
					this.Onpay_apiChanging(value);
					this.SendPropertyChanging();
					this._pay_api = value;
					this.SendPropertyChanged("pay_api");
					this.Onpay_apiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approver", DbType="Int")]
		public System.Nullable<int> approver
		{
			get
			{
				return this._approver;
			}
			set
			{
				if ((this._approver != value))
				{
					if (this._dt_manager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnapproverChanging(value);
					this.SendPropertyChanging();
					this._approver = value;
					this.SendPropertyChanged("approver");
					this.OnapproverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remarks", DbType="NVarChar(50)")]
		public string remarks
		{
			get
			{
				return this._remarks;
			}
			set
			{
				if ((this._remarks != value))
				{
					this.OnremarksChanging(value);
					this.SendPropertyChanging();
					this._remarks = value;
					this.SendPropertyChanged("remarks");
					this.OnremarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="VarChar(40)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_bank_transactions_li_wallet_histories", Storage="_li_wallet_histories", ThisKey="id", OtherKey="bank_transaction")]
		public EntitySet<li_wallet_histories> li_wallet_histories
		{
			get
			{
				return this._li_wallet_histories;
			}
			set
			{
				this._li_wallet_histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_bank_accounts_li_bank_transactions", Storage="_li_bank_accounts", ThisKey="withdraw_account", OtherKey="id", IsForeignKey=true)]
		public li_bank_accounts li_bank_accounts
		{
			get
			{
				return this._li_bank_accounts.Entity;
			}
			set
			{
				li_bank_accounts previousValue = this._li_bank_accounts.Entity;
				if (((previousValue != value) 
							|| (this._li_bank_accounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_bank_accounts.Entity = null;
						previousValue.li_bank_transactions.Remove(this);
					}
					this._li_bank_accounts.Entity = value;
					if ((value != null))
					{
						value.li_bank_transactions.Add(this);
						this._withdraw_account = value.id;
					}
					else
					{
						this._withdraw_account = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_bank_accounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_manager_li_bank_transactions", Storage="_dt_manager", ThisKey="approver", OtherKey="id", IsForeignKey=true)]
		public dt_manager dt_manager
		{
			get
			{
				return this._dt_manager.Entity;
			}
			set
			{
				dt_manager previousValue = this._dt_manager.Entity;
				if (((previousValue != value) 
							|| (this._dt_manager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_manager.Entity = null;
						previousValue.li_bank_transactions.Remove(this);
					}
					this._dt_manager.Entity = value;
					if ((value != null))
					{
						value.li_bank_transactions.Add(this);
						this._approver = value.id;
					}
					else
					{
						this._approver = default(Nullable<int>);
					}
					this.SendPropertyChanged("dt_manager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_bank_transactions", Storage="_dt_users", ThisKey="charger", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_bank_transactions.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_bank_transactions.Add(this);
						this._charger = value.id;
					}
					else
					{
						this._charger = default(Nullable<int>);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_wallet_histories(li_wallet_histories entity)
		{
			this.SendPropertyChanging();
			entity.li_bank_transactions = this;
		}
		
		private void detach_li_wallet_histories(li_wallet_histories entity)
		{
			this.SendPropertyChanging();
			entity.li_bank_transactions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_invitations")]
	public partial class li_invitations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private int _inviter;
		
		private System.Nullable<int> _first_invest_transaction;
		
		private EntityRef<li_project_transactions> _li_project_transactions;
		
		private EntityRef<dt_users> _dt_users;
		
		private EntityRef<dt_users> _dt_users1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OninviterChanging(int value);
    partial void OninviterChanged();
    partial void Onfirst_invest_transactionChanging(System.Nullable<int> value);
    partial void Onfirst_invest_transactionChanged();
    #endregion
		
		public li_invitations()
		{
			this._li_project_transactions = default(EntityRef<li_project_transactions>);
			this._dt_users = default(EntityRef<dt_users>);
			this._dt_users1 = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inviter", DbType="Int NOT NULL")]
		public int inviter
		{
			get
			{
				return this._inviter;
			}
			set
			{
				if ((this._inviter != value))
				{
					if (this._dt_users1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OninviterChanging(value);
					this.SendPropertyChanging();
					this._inviter = value;
					this.SendPropertyChanged("inviter");
					this.OninviterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_invest_transaction", DbType="Int")]
		public System.Nullable<int> first_invest_transaction
		{
			get
			{
				return this._first_invest_transaction;
			}
			set
			{
				if ((this._first_invest_transaction != value))
				{
					if (this._li_project_transactions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfirst_invest_transactionChanging(value);
					this.SendPropertyChanging();
					this._first_invest_transaction = value;
					this.SendPropertyChanged("first_invest_transaction");
					this.Onfirst_invest_transactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_project_transactions_li_invitations", Storage="_li_project_transactions", ThisKey="first_invest_transaction", OtherKey="id", IsForeignKey=true)]
		public li_project_transactions li_project_transactions
		{
			get
			{
				return this._li_project_transactions.Entity;
			}
			set
			{
				li_project_transactions previousValue = this._li_project_transactions.Entity;
				if (((previousValue != value) 
							|| (this._li_project_transactions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_project_transactions.Entity = null;
						previousValue.li_invitations.Remove(this);
					}
					this._li_project_transactions.Entity = value;
					if ((value != null))
					{
						value.li_invitations.Add(this);
						this._first_invest_transaction = value.id;
					}
					else
					{
						this._first_invest_transaction = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_project_transactions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_invitations", Storage="_dt_users", ThisKey="user_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_invitations = null;
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_invitations = this;
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_invitations1", Storage="_dt_users1", ThisKey="inviter", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users1
		{
			get
			{
				return this._dt_users1.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users1.Entity;
				if (((previousValue != value) 
							|| (this._dt_users1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users1.Entity = null;
						previousValue.li_invitations1.Remove(this);
					}
					this._dt_users1.Entity = value;
					if ((value != null))
					{
						value.li_invitations1.Add(this);
						this._inviter = value.id;
					}
					else
					{
						this._inviter = default(int);
					}
					this.SendPropertyChanged("dt_users1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_risk_mortgage")]
	public partial class li_risk_mortgage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _risk;
		
		private int _mortgage;
		
		private System.DateTime _last_update_time;
		
		private EntityRef<li_mortgages> _li_mortgages;
		
		private EntityRef<li_risks> _li_risks;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnriskChanging(int value);
    partial void OnriskChanged();
    partial void OnmortgageChanging(int value);
    partial void OnmortgageChanged();
    partial void Onlast_update_timeChanging(System.DateTime value);
    partial void Onlast_update_timeChanged();
    #endregion
		
		public li_risk_mortgage()
		{
			this._li_mortgages = default(EntityRef<li_mortgages>);
			this._li_risks = default(EntityRef<li_risks>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_risk", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int risk
		{
			get
			{
				return this._risk;
			}
			set
			{
				if ((this._risk != value))
				{
					if (this._li_risks.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnriskChanging(value);
					this.SendPropertyChanging();
					this._risk = value;
					this.SendPropertyChanged("risk");
					this.OnriskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgage", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int mortgage
		{
			get
			{
				return this._mortgage;
			}
			set
			{
				if ((this._mortgage != value))
				{
					if (this._li_mortgages.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmortgageChanging(value);
					this.SendPropertyChanging();
					this._mortgage = value;
					this.SendPropertyChanged("mortgage");
					this.OnmortgageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update_time", DbType="SmallDateTime NOT NULL")]
		public System.DateTime last_update_time
		{
			get
			{
				return this._last_update_time;
			}
			set
			{
				if ((this._last_update_time != value))
				{
					this.Onlast_update_timeChanging(value);
					this.SendPropertyChanging();
					this._last_update_time = value;
					this.SendPropertyChanged("last_update_time");
					this.Onlast_update_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_mortgages_li_risk_mortgage", Storage="_li_mortgages", ThisKey="mortgage", OtherKey="id", IsForeignKey=true)]
		public li_mortgages li_mortgages
		{
			get
			{
				return this._li_mortgages.Entity;
			}
			set
			{
				li_mortgages previousValue = this._li_mortgages.Entity;
				if (((previousValue != value) 
							|| (this._li_mortgages.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_mortgages.Entity = null;
						previousValue.li_risk_mortgage.Remove(this);
					}
					this._li_mortgages.Entity = value;
					if ((value != null))
					{
						value.li_risk_mortgage.Add(this);
						this._mortgage = value.id;
					}
					else
					{
						this._mortgage = default(int);
					}
					this.SendPropertyChanged("li_mortgages");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_risks_li_risk_mortgage", Storage="_li_risks", ThisKey="risk", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public li_risks li_risks
		{
			get
			{
				return this._li_risks.Entity;
			}
			set
			{
				li_risks previousValue = this._li_risks.Entity;
				if (((previousValue != value) 
							|| (this._li_risks.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_risks.Entity = null;
						previousValue.li_risk_mortgage.Remove(this);
					}
					this._li_risks.Entity = value;
					if ((value != null))
					{
						value.li_risk_mortgage.Add(this);
						this._risk = value.id;
					}
					else
					{
						this._risk = default(int);
					}
					this.SendPropertyChanged("li_risks");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_user_group_access_keys")]
	public partial class li_user_group_access_keys : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_group;
		
		private int _owner_manager;
		
		private EntityRef<dt_user_groups> _dt_user_groups;
		
		private EntityRef<dt_manager> _dt_manager;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_groupChanging(int value);
    partial void Onuser_groupChanged();
    partial void Onowner_managerChanging(int value);
    partial void Onowner_managerChanged();
    #endregion
		
		public li_user_group_access_keys()
		{
			this._dt_user_groups = default(EntityRef<dt_user_groups>);
			this._dt_manager = default(EntityRef<dt_manager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_group", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_group
		{
			get
			{
				return this._user_group;
			}
			set
			{
				if ((this._user_group != value))
				{
					if (this._dt_user_groups.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_groupChanging(value);
					this.SendPropertyChanging();
					this._user_group = value;
					this.SendPropertyChanged("user_group");
					this.Onuser_groupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner_manager", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int owner_manager
		{
			get
			{
				return this._owner_manager;
			}
			set
			{
				if ((this._owner_manager != value))
				{
					if (this._dt_manager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onowner_managerChanging(value);
					this.SendPropertyChanging();
					this._owner_manager = value;
					this.SendPropertyChanged("owner_manager");
					this.Onowner_managerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_user_groups_li_user_group_access_keys", Storage="_dt_user_groups", ThisKey="user_group", OtherKey="id", IsForeignKey=true)]
		public dt_user_groups dt_user_groups
		{
			get
			{
				return this._dt_user_groups.Entity;
			}
			set
			{
				dt_user_groups previousValue = this._dt_user_groups.Entity;
				if (((previousValue != value) 
							|| (this._dt_user_groups.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_user_groups.Entity = null;
						previousValue.li_user_group_access_keys.Remove(this);
					}
					this._dt_user_groups.Entity = value;
					if ((value != null))
					{
						value.li_user_group_access_keys.Add(this);
						this._user_group = value.id;
					}
					else
					{
						this._user_group = default(int);
					}
					this.SendPropertyChanged("dt_user_groups");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_manager_li_user_group_access_keys", Storage="_dt_manager", ThisKey="owner_manager", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dt_manager dt_manager
		{
			get
			{
				return this._dt_manager.Entity;
			}
			set
			{
				dt_manager previousValue = this._dt_manager.Entity;
				if (((previousValue != value) 
							|| (this._dt_manager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_manager.Entity = null;
						previousValue.li_user_group_access_keys.Remove(this);
					}
					this._dt_manager.Entity = value;
					if ((value != null))
					{
						value.li_user_group_access_keys.Add(this);
						this._owner_manager = value.id;
					}
					else
					{
						this._owner_manager = default(int);
					}
					this.SendPropertyChanged("dt_manager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_wallet_histories")]
	public partial class li_wallet_histories : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private byte _action_type;
		
		private decimal _idle_money;
		
		private decimal _investing_money;
		
		private decimal _locked_money;
		
		private decimal _profiting_money;
		
		private decimal _total_profit;
		
		private decimal _total_investment;
		
		private System.Nullable<int> _project_transaction;
		
		private System.Nullable<int> _bank_transaction;
		
		private System.Nullable<int> _activity_transaction;
		
		private System.DateTime _create_time;
		
		private EntityRef<li_activity_transactions> _li_activity_transactions;
		
		private EntityRef<li_bank_transactions> _li_bank_transactions;
		
		private EntityRef<li_project_transactions> _li_project_transactions;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onaction_typeChanging(byte value);
    partial void Onaction_typeChanged();
    partial void Onidle_moneyChanging(decimal value);
    partial void Onidle_moneyChanged();
    partial void Oninvesting_moneyChanging(decimal value);
    partial void Oninvesting_moneyChanged();
    partial void Onlocked_moneyChanging(decimal value);
    partial void Onlocked_moneyChanged();
    partial void Onprofiting_moneyChanging(decimal value);
    partial void Onprofiting_moneyChanged();
    partial void Ontotal_profitChanging(decimal value);
    partial void Ontotal_profitChanged();
    partial void Ontotal_investmentChanging(decimal value);
    partial void Ontotal_investmentChanged();
    partial void Onproject_transactionChanging(System.Nullable<int> value);
    partial void Onproject_transactionChanged();
    partial void Onbank_transactionChanging(System.Nullable<int> value);
    partial void Onbank_transactionChanged();
    partial void Onactivity_transactionChanging(System.Nullable<int> value);
    partial void Onactivity_transactionChanged();
    partial void Oncreate_timeChanging(System.DateTime value);
    partial void Oncreate_timeChanged();
    #endregion
		
		public li_wallet_histories()
		{
			this._li_activity_transactions = default(EntityRef<li_activity_transactions>);
			this._li_bank_transactions = default(EntityRef<li_bank_transactions>);
			this._li_project_transactions = default(EntityRef<li_project_transactions>);
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_type", DbType="TinyInt NOT NULL")]
		public byte action_type
		{
			get
			{
				return this._action_type;
			}
			set
			{
				if ((this._action_type != value))
				{
					this.Onaction_typeChanging(value);
					this.SendPropertyChanging();
					this._action_type = value;
					this.SendPropertyChanged("action_type");
					this.Onaction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idle_money", DbType="Decimal(19,2) NOT NULL")]
		public decimal idle_money
		{
			get
			{
				return this._idle_money;
			}
			set
			{
				if ((this._idle_money != value))
				{
					this.Onidle_moneyChanging(value);
					this.SendPropertyChanging();
					this._idle_money = value;
					this.SendPropertyChanged("idle_money");
					this.Onidle_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investing_money", DbType="Decimal(19,2) NOT NULL")]
		public decimal investing_money
		{
			get
			{
				return this._investing_money;
			}
			set
			{
				if ((this._investing_money != value))
				{
					this.Oninvesting_moneyChanging(value);
					this.SendPropertyChanging();
					this._investing_money = value;
					this.SendPropertyChanged("investing_money");
					this.Oninvesting_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locked_money", DbType="Decimal(19,2) NOT NULL")]
		public decimal locked_money
		{
			get
			{
				return this._locked_money;
			}
			set
			{
				if ((this._locked_money != value))
				{
					this.Onlocked_moneyChanging(value);
					this.SendPropertyChanging();
					this._locked_money = value;
					this.SendPropertyChanged("locked_money");
					this.Onlocked_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profiting_money", DbType="Decimal(19,2) NOT NULL")]
		public decimal profiting_money
		{
			get
			{
				return this._profiting_money;
			}
			set
			{
				if ((this._profiting_money != value))
				{
					this.Onprofiting_moneyChanging(value);
					this.SendPropertyChanging();
					this._profiting_money = value;
					this.SendPropertyChanged("profiting_money");
					this.Onprofiting_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_profit", DbType="Decimal(19,2) NOT NULL")]
		public decimal total_profit
		{
			get
			{
				return this._total_profit;
			}
			set
			{
				if ((this._total_profit != value))
				{
					this.Ontotal_profitChanging(value);
					this.SendPropertyChanging();
					this._total_profit = value;
					this.SendPropertyChanged("total_profit");
					this.Ontotal_profitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_investment", DbType="Decimal(19,2) NOT NULL")]
		public decimal total_investment
		{
			get
			{
				return this._total_investment;
			}
			set
			{
				if ((this._total_investment != value))
				{
					this.Ontotal_investmentChanging(value);
					this.SendPropertyChanging();
					this._total_investment = value;
					this.SendPropertyChanged("total_investment");
					this.Ontotal_investmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_transaction", DbType="Int")]
		public System.Nullable<int> project_transaction
		{
			get
			{
				return this._project_transaction;
			}
			set
			{
				if ((this._project_transaction != value))
				{
					if (this._li_project_transactions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_transactionChanging(value);
					this.SendPropertyChanging();
					this._project_transaction = value;
					this.SendPropertyChanged("project_transaction");
					this.Onproject_transactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank_transaction", DbType="Int")]
		public System.Nullable<int> bank_transaction
		{
			get
			{
				return this._bank_transaction;
			}
			set
			{
				if ((this._bank_transaction != value))
				{
					if (this._li_bank_transactions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbank_transactionChanging(value);
					this.SendPropertyChanging();
					this._bank_transaction = value;
					this.SendPropertyChanged("bank_transaction");
					this.Onbank_transactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity_transaction", DbType="Int")]
		public System.Nullable<int> activity_transaction
		{
			get
			{
				return this._activity_transaction;
			}
			set
			{
				if ((this._activity_transaction != value))
				{
					if (this._li_activity_transactions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onactivity_transactionChanging(value);
					this.SendPropertyChanging();
					this._activity_transaction = value;
					this.SendPropertyChanged("activity_transaction");
					this.Onactivity_transactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_time", DbType="DateTime NOT NULL")]
		public System.DateTime create_time
		{
			get
			{
				return this._create_time;
			}
			set
			{
				if ((this._create_time != value))
				{
					this.Oncreate_timeChanging(value);
					this.SendPropertyChanging();
					this._create_time = value;
					this.SendPropertyChanged("create_time");
					this.Oncreate_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_activity_transactions_li_wallet_histories", Storage="_li_activity_transactions", ThisKey="activity_transaction", OtherKey="id", IsForeignKey=true)]
		public li_activity_transactions li_activity_transactions
		{
			get
			{
				return this._li_activity_transactions.Entity;
			}
			set
			{
				li_activity_transactions previousValue = this._li_activity_transactions.Entity;
				if (((previousValue != value) 
							|| (this._li_activity_transactions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_activity_transactions.Entity = null;
						previousValue.li_wallet_histories.Remove(this);
					}
					this._li_activity_transactions.Entity = value;
					if ((value != null))
					{
						value.li_wallet_histories.Add(this);
						this._activity_transaction = value.id;
					}
					else
					{
						this._activity_transaction = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_activity_transactions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_bank_transactions_li_wallet_histories", Storage="_li_bank_transactions", ThisKey="bank_transaction", OtherKey="id", IsForeignKey=true)]
		public li_bank_transactions li_bank_transactions
		{
			get
			{
				return this._li_bank_transactions.Entity;
			}
			set
			{
				li_bank_transactions previousValue = this._li_bank_transactions.Entity;
				if (((previousValue != value) 
							|| (this._li_bank_transactions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_bank_transactions.Entity = null;
						previousValue.li_wallet_histories.Remove(this);
					}
					this._li_bank_transactions.Entity = value;
					if ((value != null))
					{
						value.li_wallet_histories.Add(this);
						this._bank_transaction = value.id;
					}
					else
					{
						this._bank_transaction = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_bank_transactions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_project_transactions_li_wallet_histories", Storage="_li_project_transactions", ThisKey="project_transaction", OtherKey="id", IsForeignKey=true)]
		public li_project_transactions li_project_transactions
		{
			get
			{
				return this._li_project_transactions.Entity;
			}
			set
			{
				li_project_transactions previousValue = this._li_project_transactions.Entity;
				if (((previousValue != value) 
							|| (this._li_project_transactions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_project_transactions.Entity = null;
						previousValue.li_wallet_histories.Remove(this);
					}
					this._li_project_transactions.Entity = value;
					if ((value != null))
					{
						value.li_wallet_histories.Add(this);
						this._project_transaction = value.id;
					}
					else
					{
						this._project_transaction = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_project_transactions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_wallet_histories", Storage="_dt_users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_wallet_histories.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_wallet_histories.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_user_code")]
	public partial class dt_user_code : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private string _user_name;
		
		private string _type;
		
		private string _str_code;
		
		private System.Nullable<int> _count;
		
		private System.Nullable<byte> _status;
		
		private System.DateTime _eff_time;
		
		private System.DateTime _add_time;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Onstr_codeChanging(string value);
    partial void Onstr_codeChanged();
    partial void OncountChanging(System.Nullable<int> value);
    partial void OncountChanged();
    partial void OnstatusChanging(System.Nullable<byte> value);
    partial void OnstatusChanged();
    partial void Oneff_timeChanging(System.DateTime value);
    partial void Oneff_timeChanged();
    partial void Onadd_timeChanging(System.DateTime value);
    partial void Onadd_timeChanged();
    #endregion
		
		public dt_user_code()
		{
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(100)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(20)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_str_code", DbType="NVarChar(255)")]
		public string str_code
		{
			get
			{
				return this._str_code;
			}
			set
			{
				if ((this._str_code != value))
				{
					this.Onstr_codeChanging(value);
					this.SendPropertyChanging();
					this._str_code = value;
					this.SendPropertyChanged("str_code");
					this.Onstr_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt")]
		public System.Nullable<byte> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eff_time", DbType="DateTime NOT NULL")]
		public System.DateTime eff_time
		{
			get
			{
				return this._eff_time;
			}
			set
			{
				if ((this._eff_time != value))
				{
					this.Oneff_timeChanging(value);
					this.SendPropertyChanging();
					this._eff_time = value;
					this.SendPropertyChanged("eff_time");
					this.Oneff_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_time", DbType="DateTime NOT NULL")]
		public System.DateTime add_time
		{
			get
			{
				return this._add_time;
			}
			set
			{
				if ((this._add_time != value))
				{
					this.Onadd_timeChanging(value);
					this.SendPropertyChanging();
					this._add_time = value;
					this.SendPropertyChanged("add_time");
					this.Onadd_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_dt_user_code", Storage="_dt_users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.dt_user_code.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.dt_user_code.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_user_groups")]
	public partial class dt_user_groups : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private System.Nullable<int> _grade;
		
		private System.Nullable<int> _upgrade_exp;
		
		private System.Nullable<decimal> _amount;
		
		private System.Nullable<int> _point;
		
		private System.Nullable<int> _discount;
		
		private System.Nullable<byte> _is_default;
		
		private System.Nullable<byte> _is_upgrade;
		
		private System.Nullable<byte> _is_lock;
		
		private EntitySet<li_user_group_access_keys> _li_user_group_access_keys;
		
		private EntitySet<li_user_group_servers> _li_user_group_servers;
		
		private EntitySet<li_user_group_departments> _li_user_group_departments;
		
		private EntitySet<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OngradeChanging(System.Nullable<int> value);
    partial void OngradeChanged();
    partial void Onupgrade_expChanging(System.Nullable<int> value);
    partial void Onupgrade_expChanged();
    partial void OnamountChanging(System.Nullable<decimal> value);
    partial void OnamountChanged();
    partial void OnpointChanging(System.Nullable<int> value);
    partial void OnpointChanged();
    partial void OndiscountChanging(System.Nullable<int> value);
    partial void OndiscountChanged();
    partial void Onis_defaultChanging(System.Nullable<byte> value);
    partial void Onis_defaultChanged();
    partial void Onis_upgradeChanging(System.Nullable<byte> value);
    partial void Onis_upgradeChanged();
    partial void Onis_lockChanging(System.Nullable<byte> value);
    partial void Onis_lockChanged();
    #endregion
		
		public dt_user_groups()
		{
			this._li_user_group_access_keys = new EntitySet<li_user_group_access_keys>(new Action<li_user_group_access_keys>(this.attach_li_user_group_access_keys), new Action<li_user_group_access_keys>(this.detach_li_user_group_access_keys));
			this._li_user_group_servers = new EntitySet<li_user_group_servers>(new Action<li_user_group_servers>(this.attach_li_user_group_servers), new Action<li_user_group_servers>(this.detach_li_user_group_servers));
			this._li_user_group_departments = new EntitySet<li_user_group_departments>(new Action<li_user_group_departments>(this.attach_li_user_group_departments), new Action<li_user_group_departments>(this.detach_li_user_group_departments));
			this._dt_users = new EntitySet<dt_users>(new Action<dt_users>(this.attach_dt_users), new Action<dt_users>(this.detach_dt_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Int")]
		public System.Nullable<int> grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upgrade_exp", DbType="Int")]
		public System.Nullable<int> upgrade_exp
		{
			get
			{
				return this._upgrade_exp;
			}
			set
			{
				if ((this._upgrade_exp != value))
				{
					this.Onupgrade_expChanging(value);
					this.SendPropertyChanging();
					this._upgrade_exp = value;
					this.SendPropertyChanged("upgrade_exp");
					this.Onupgrade_expChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_point", DbType="Int")]
		public System.Nullable<int> point
		{
			get
			{
				return this._point;
			}
			set
			{
				if ((this._point != value))
				{
					this.OnpointChanging(value);
					this.SendPropertyChanging();
					this._point = value;
					this.SendPropertyChanged("point");
					this.OnpointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Int")]
		public System.Nullable<int> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_default", DbType="TinyInt")]
		public System.Nullable<byte> is_default
		{
			get
			{
				return this._is_default;
			}
			set
			{
				if ((this._is_default != value))
				{
					this.Onis_defaultChanging(value);
					this.SendPropertyChanging();
					this._is_default = value;
					this.SendPropertyChanged("is_default");
					this.Onis_defaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_upgrade", DbType="TinyInt")]
		public System.Nullable<byte> is_upgrade
		{
			get
			{
				return this._is_upgrade;
			}
			set
			{
				if ((this._is_upgrade != value))
				{
					this.Onis_upgradeChanging(value);
					this.SendPropertyChanging();
					this._is_upgrade = value;
					this.SendPropertyChanged("is_upgrade");
					this.Onis_upgradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_lock", DbType="TinyInt")]
		public System.Nullable<byte> is_lock
		{
			get
			{
				return this._is_lock;
			}
			set
			{
				if ((this._is_lock != value))
				{
					this.Onis_lockChanging(value);
					this.SendPropertyChanging();
					this._is_lock = value;
					this.SendPropertyChanged("is_lock");
					this.Onis_lockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_user_groups_li_user_group_access_keys", Storage="_li_user_group_access_keys", ThisKey="id", OtherKey="user_group")]
		public EntitySet<li_user_group_access_keys> li_user_group_access_keys
		{
			get
			{
				return this._li_user_group_access_keys;
			}
			set
			{
				this._li_user_group_access_keys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_user_groups_li_user_group_servers", Storage="_li_user_group_servers", ThisKey="id", OtherKey="group_id")]
		public EntitySet<li_user_group_servers> li_user_group_servers
		{
			get
			{
				return this._li_user_group_servers;
			}
			set
			{
				this._li_user_group_servers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_user_groups_li_user_group_departments", Storage="_li_user_group_departments", ThisKey="id", OtherKey="user_group_id")]
		public EntitySet<li_user_group_departments> li_user_group_departments
		{
			get
			{
				return this._li_user_group_departments;
			}
			set
			{
				this._li_user_group_departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_user_groups_dt_users", Storage="_dt_users", ThisKey="id", OtherKey="group_id")]
		public EntitySet<dt_users> dt_users
		{
			get
			{
				return this._dt_users;
			}
			set
			{
				this._dt_users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_user_group_access_keys(li_user_group_access_keys entity)
		{
			this.SendPropertyChanging();
			entity.dt_user_groups = this;
		}
		
		private void detach_li_user_group_access_keys(li_user_group_access_keys entity)
		{
			this.SendPropertyChanging();
			entity.dt_user_groups = null;
		}
		
		private void attach_li_user_group_servers(li_user_group_servers entity)
		{
			this.SendPropertyChanging();
			entity.dt_user_groups = this;
		}
		
		private void detach_li_user_group_servers(li_user_group_servers entity)
		{
			this.SendPropertyChanging();
			entity.dt_user_groups = null;
		}
		
		private void attach_li_user_group_departments(li_user_group_departments entity)
		{
			this.SendPropertyChanging();
			entity.dt_user_groups = this;
		}
		
		private void detach_li_user_group_departments(li_user_group_departments entity)
		{
			this.SendPropertyChanging();
			entity.dt_user_groups = null;
		}
		
		private void attach_dt_users(dt_users entity)
		{
			this.SendPropertyChanging();
			entity.dt_user_groups = this;
		}
		
		private void detach_dt_users(dt_users entity)
		{
			this.SendPropertyChanging();
			entity.dt_user_groups = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_article_attribute_value")]
	public partial class dt_article_attribute_value : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _article_id;
		
		private string _sub_title;
		
		private string _source;
		
		private string _author;
		
		private string _goods_no;
		
		private System.Nullable<int> _stock_quantity;
		
		private System.Nullable<decimal> _market_price;
		
		private System.Nullable<decimal> _sell_price;
		
		private System.Nullable<int> _point;
		
		private EntityRef<dt_article> _dt_article;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onarticle_idChanging(int value);
    partial void Onarticle_idChanged();
    partial void Onsub_titleChanging(string value);
    partial void Onsub_titleChanged();
    partial void OnsourceChanging(string value);
    partial void OnsourceChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void Ongoods_noChanging(string value);
    partial void Ongoods_noChanged();
    partial void Onstock_quantityChanging(System.Nullable<int> value);
    partial void Onstock_quantityChanged();
    partial void Onmarket_priceChanging(System.Nullable<decimal> value);
    partial void Onmarket_priceChanged();
    partial void Onsell_priceChanging(System.Nullable<decimal> value);
    partial void Onsell_priceChanged();
    partial void OnpointChanging(System.Nullable<int> value);
    partial void OnpointChanged();
    #endregion
		
		public dt_article_attribute_value()
		{
			this._dt_article = default(EntityRef<dt_article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_article_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int article_id
		{
			get
			{
				return this._article_id;
			}
			set
			{
				if ((this._article_id != value))
				{
					if (this._dt_article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onarticle_idChanging(value);
					this.SendPropertyChanging();
					this._article_id = value;
					this.SendPropertyChanged("article_id");
					this.Onarticle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_title", DbType="NVarChar(255)")]
		public string sub_title
		{
			get
			{
				return this._sub_title;
			}
			set
			{
				if ((this._sub_title != value))
				{
					this.Onsub_titleChanging(value);
					this.SendPropertyChanging();
					this._sub_title = value;
					this.SendPropertyChanged("sub_title");
					this.Onsub_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_source", DbType="NVarChar(100)")]
		public string source
		{
			get
			{
				return this._source;
			}
			set
			{
				if ((this._source != value))
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="NVarChar(50)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goods_no", DbType="NVarChar(100)")]
		public string goods_no
		{
			get
			{
				return this._goods_no;
			}
			set
			{
				if ((this._goods_no != value))
				{
					this.Ongoods_noChanging(value);
					this.SendPropertyChanging();
					this._goods_no = value;
					this.SendPropertyChanged("goods_no");
					this.Ongoods_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock_quantity", DbType="Int")]
		public System.Nullable<int> stock_quantity
		{
			get
			{
				return this._stock_quantity;
			}
			set
			{
				if ((this._stock_quantity != value))
				{
					this.Onstock_quantityChanging(value);
					this.SendPropertyChanging();
					this._stock_quantity = value;
					this.SendPropertyChanged("stock_quantity");
					this.Onstock_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_market_price", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> market_price
		{
			get
			{
				return this._market_price;
			}
			set
			{
				if ((this._market_price != value))
				{
					this.Onmarket_priceChanging(value);
					this.SendPropertyChanging();
					this._market_price = value;
					this.SendPropertyChanged("market_price");
					this.Onmarket_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sell_price", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> sell_price
		{
			get
			{
				return this._sell_price;
			}
			set
			{
				if ((this._sell_price != value))
				{
					this.Onsell_priceChanging(value);
					this.SendPropertyChanging();
					this._sell_price = value;
					this.SendPropertyChanged("sell_price");
					this.Onsell_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_point", DbType="Int")]
		public System.Nullable<int> point
		{
			get
			{
				return this._point;
			}
			set
			{
				if ((this._point != value))
				{
					this.OnpointChanging(value);
					this.SendPropertyChanging();
					this._point = value;
					this.SendPropertyChanged("point");
					this.OnpointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_article_dt_article_attribute_value", Storage="_dt_article", ThisKey="article_id", OtherKey="id", IsForeignKey=true)]
		public dt_article dt_article
		{
			get
			{
				return this._dt_article.Entity;
			}
			set
			{
				dt_article previousValue = this._dt_article.Entity;
				if (((previousValue != value) 
							|| (this._dt_article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_article.Entity = null;
						previousValue.dt_article_attribute_value = null;
					}
					this._dt_article.Entity = value;
					if ((value != null))
					{
						value.dt_article_attribute_value = this;
						this._article_id = value.id;
					}
					else
					{
						this._article_id = default(int);
					}
					this.SendPropertyChanged("dt_article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_user_group_servers")]
	public partial class li_user_group_servers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _serving_user;
		
		private int _group_id;
		
		private EntityRef<dt_user_groups> _dt_user_groups;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onserving_userChanging(int value);
    partial void Onserving_userChanged();
    partial void Ongroup_idChanging(int value);
    partial void Ongroup_idChanged();
    #endregion
		
		public li_user_group_servers()
		{
			this._dt_user_groups = default(EntityRef<dt_user_groups>);
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serving_user", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int serving_user
		{
			get
			{
				return this._serving_user;
			}
			set
			{
				if ((this._serving_user != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onserving_userChanging(value);
					this.SendPropertyChanging();
					this._serving_user = value;
					this.SendPropertyChanged("serving_user");
					this.Onserving_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", DbType="Int NOT NULL")]
		public int group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					if (this._dt_user_groups.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_user_groups_li_user_group_servers", Storage="_dt_user_groups", ThisKey="group_id", OtherKey="id", IsForeignKey=true)]
		public dt_user_groups dt_user_groups
		{
			get
			{
				return this._dt_user_groups.Entity;
			}
			set
			{
				dt_user_groups previousValue = this._dt_user_groups.Entity;
				if (((previousValue != value) 
							|| (this._dt_user_groups.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_user_groups.Entity = null;
						previousValue.li_user_group_servers.Remove(this);
					}
					this._dt_user_groups.Entity = value;
					if ((value != null))
					{
						value.li_user_group_servers.Add(this);
						this._group_id = value.id;
					}
					else
					{
						this._group_id = default(int);
					}
					this.SendPropertyChanged("dt_user_groups");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_user_group_servers", Storage="_dt_users", ThisKey="serving_user", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_user_group_servers = null;
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_user_group_servers = this;
						this._serving_user = value.id;
					}
					else
					{
						this._serving_user = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_manager")]
	public partial class dt_manager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _role_id;
		
		private System.Nullable<int> _role_type;
		
		private string _user_name;
		
		private string _password;
		
		private string _salt;
		
		private string _real_name;
		
		private string _telephone;
		
		private string _email;
		
		private System.Nullable<int> _is_lock;
		
		private System.Nullable<System.DateTime> _add_time;
		
		private System.Nullable<int> _parent_id;
		
		private System.Nullable<int> _department_id;
		
		private System.Nullable<byte> _is_default;
		
		private EntitySet<li_activity_transactions> _li_activity_transactions;
		
		private EntitySet<li_bank_transactions> _li_bank_transactions;
		
		private EntitySet<li_user_group_access_keys> _li_user_group_access_keys;
		
		private EntitySet<dt_manager> _dt_manager2;
		
		private EntitySet<li_manager_messages> _li_manager_messages;
		
		private EntitySet<li_manager_notification_settings> _li_manager_notification_settings;
		
		private EntityRef<dt_manager> _dt_manager1;
		
		private EntityRef<li_departments> _li_departments;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onrole_typeChanging(System.Nullable<int> value);
    partial void Onrole_typeChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnsaltChanging(string value);
    partial void OnsaltChanged();
    partial void Onreal_nameChanging(string value);
    partial void Onreal_nameChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onis_lockChanging(System.Nullable<int> value);
    partial void Onis_lockChanged();
    partial void Onadd_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onadd_timeChanged();
    partial void Onparent_idChanging(System.Nullable<int> value);
    partial void Onparent_idChanged();
    partial void Ondepartment_idChanging(System.Nullable<int> value);
    partial void Ondepartment_idChanged();
    partial void Onis_defaultChanging(System.Nullable<byte> value);
    partial void Onis_defaultChanged();
    #endregion
		
		public dt_manager()
		{
			this._li_activity_transactions = new EntitySet<li_activity_transactions>(new Action<li_activity_transactions>(this.attach_li_activity_transactions), new Action<li_activity_transactions>(this.detach_li_activity_transactions));
			this._li_bank_transactions = new EntitySet<li_bank_transactions>(new Action<li_bank_transactions>(this.attach_li_bank_transactions), new Action<li_bank_transactions>(this.detach_li_bank_transactions));
			this._li_user_group_access_keys = new EntitySet<li_user_group_access_keys>(new Action<li_user_group_access_keys>(this.attach_li_user_group_access_keys), new Action<li_user_group_access_keys>(this.detach_li_user_group_access_keys));
			this._dt_manager2 = new EntitySet<dt_manager>(new Action<dt_manager>(this.attach_dt_manager2), new Action<dt_manager>(this.detach_dt_manager2));
			this._li_manager_messages = new EntitySet<li_manager_messages>(new Action<li_manager_messages>(this.attach_li_manager_messages), new Action<li_manager_messages>(this.detach_li_manager_messages));
			this._li_manager_notification_settings = new EntitySet<li_manager_notification_settings>(new Action<li_manager_notification_settings>(this.attach_li_manager_notification_settings), new Action<li_manager_notification_settings>(this.detach_li_manager_notification_settings));
			this._dt_manager1 = default(EntityRef<dt_manager>);
			this._li_departments = default(EntityRef<li_departments>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL")]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_type", DbType="Int")]
		public System.Nullable<int> role_type
		{
			get
			{
				return this._role_type;
			}
			set
			{
				if ((this._role_type != value))
				{
					this.Onrole_typeChanging(value);
					this.SendPropertyChanging();
					this._role_type = value;
					this.SendPropertyChanged("role_type");
					this.Onrole_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(100)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(100)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salt", DbType="NVarChar(20)")]
		public string salt
		{
			get
			{
				return this._salt;
			}
			set
			{
				if ((this._salt != value))
				{
					this.OnsaltChanging(value);
					this.SendPropertyChanging();
					this._salt = value;
					this.SendPropertyChanged("salt");
					this.OnsaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_real_name", DbType="NVarChar(50)")]
		public string real_name
		{
			get
			{
				return this._real_name;
			}
			set
			{
				if ((this._real_name != value))
				{
					this.Onreal_nameChanging(value);
					this.SendPropertyChanging();
					this._real_name = value;
					this.SendPropertyChanged("real_name");
					this.Onreal_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="NVarChar(30)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(30)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_lock", DbType="Int")]
		public System.Nullable<int> is_lock
		{
			get
			{
				return this._is_lock;
			}
			set
			{
				if ((this._is_lock != value))
				{
					this.Onis_lockChanging(value);
					this.SendPropertyChanging();
					this._is_lock = value;
					this.SendPropertyChanged("is_lock");
					this.Onis_lockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> add_time
		{
			get
			{
				return this._add_time;
			}
			set
			{
				if ((this._add_time != value))
				{
					this.Onadd_timeChanging(value);
					this.SendPropertyChanging();
					this._add_time = value;
					this.SendPropertyChanged("add_time");
					this.Onadd_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					if (this._dt_manager1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="Int")]
		public System.Nullable<int> department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					if (this._li_departments.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_default", DbType="TinyInt")]
		public System.Nullable<byte> is_default
		{
			get
			{
				return this._is_default;
			}
			set
			{
				if ((this._is_default != value))
				{
					this.Onis_defaultChanging(value);
					this.SendPropertyChanging();
					this._is_default = value;
					this.SendPropertyChanged("is_default");
					this.Onis_defaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_manager_li_activity_transactions", Storage="_li_activity_transactions", ThisKey="id", OtherKey="approver")]
		public EntitySet<li_activity_transactions> li_activity_transactions
		{
			get
			{
				return this._li_activity_transactions;
			}
			set
			{
				this._li_activity_transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_manager_li_bank_transactions", Storage="_li_bank_transactions", ThisKey="id", OtherKey="approver")]
		public EntitySet<li_bank_transactions> li_bank_transactions
		{
			get
			{
				return this._li_bank_transactions;
			}
			set
			{
				this._li_bank_transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_manager_li_user_group_access_keys", Storage="_li_user_group_access_keys", ThisKey="id", OtherKey="owner_manager")]
		public EntitySet<li_user_group_access_keys> li_user_group_access_keys
		{
			get
			{
				return this._li_user_group_access_keys;
			}
			set
			{
				this._li_user_group_access_keys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_manager_dt_manager", Storage="_dt_manager2", ThisKey="id", OtherKey="parent_id")]
		public EntitySet<dt_manager> dt_manager2
		{
			get
			{
				return this._dt_manager2;
			}
			set
			{
				this._dt_manager2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_manager_li_manager_messages", Storage="_li_manager_messages", ThisKey="id", OtherKey="receiver")]
		public EntitySet<li_manager_messages> li_manager_messages
		{
			get
			{
				return this._li_manager_messages;
			}
			set
			{
				this._li_manager_messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_manager_li_manager_notification_settings", Storage="_li_manager_notification_settings", ThisKey="id", OtherKey="manager_id")]
		public EntitySet<li_manager_notification_settings> li_manager_notification_settings
		{
			get
			{
				return this._li_manager_notification_settings;
			}
			set
			{
				this._li_manager_notification_settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_manager_dt_manager", Storage="_dt_manager1", ThisKey="parent_id", OtherKey="id", IsForeignKey=true)]
		public dt_manager dt_manager1
		{
			get
			{
				return this._dt_manager1.Entity;
			}
			set
			{
				dt_manager previousValue = this._dt_manager1.Entity;
				if (((previousValue != value) 
							|| (this._dt_manager1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_manager1.Entity = null;
						previousValue.dt_manager2.Remove(this);
					}
					this._dt_manager1.Entity = value;
					if ((value != null))
					{
						value.dt_manager2.Add(this);
						this._parent_id = value.id;
					}
					else
					{
						this._parent_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("dt_manager1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_departments_dt_manager", Storage="_li_departments", ThisKey="department_id", OtherKey="id", IsForeignKey=true)]
		public li_departments li_departments
		{
			get
			{
				return this._li_departments.Entity;
			}
			set
			{
				li_departments previousValue = this._li_departments.Entity;
				if (((previousValue != value) 
							|| (this._li_departments.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_departments.Entity = null;
						previousValue.dt_manager.Remove(this);
					}
					this._li_departments.Entity = value;
					if ((value != null))
					{
						value.dt_manager.Add(this);
						this._department_id = value.id;
					}
					else
					{
						this._department_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_departments");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_activity_transactions(li_activity_transactions entity)
		{
			this.SendPropertyChanging();
			entity.dt_manager = this;
		}
		
		private void detach_li_activity_transactions(li_activity_transactions entity)
		{
			this.SendPropertyChanging();
			entity.dt_manager = null;
		}
		
		private void attach_li_bank_transactions(li_bank_transactions entity)
		{
			this.SendPropertyChanging();
			entity.dt_manager = this;
		}
		
		private void detach_li_bank_transactions(li_bank_transactions entity)
		{
			this.SendPropertyChanging();
			entity.dt_manager = null;
		}
		
		private void attach_li_user_group_access_keys(li_user_group_access_keys entity)
		{
			this.SendPropertyChanging();
			entity.dt_manager = this;
		}
		
		private void detach_li_user_group_access_keys(li_user_group_access_keys entity)
		{
			this.SendPropertyChanging();
			entity.dt_manager = null;
		}
		
		private void attach_dt_manager2(dt_manager entity)
		{
			this.SendPropertyChanging();
			entity.dt_manager1 = this;
		}
		
		private void detach_dt_manager2(dt_manager entity)
		{
			this.SendPropertyChanging();
			entity.dt_manager1 = null;
		}
		
		private void attach_li_manager_messages(li_manager_messages entity)
		{
			this.SendPropertyChanging();
			entity.dt_manager = this;
		}
		
		private void detach_li_manager_messages(li_manager_messages entity)
		{
			this.SendPropertyChanging();
			entity.dt_manager = null;
		}
		
		private void attach_li_manager_notification_settings(li_manager_notification_settings entity)
		{
			this.SendPropertyChanging();
			entity.dt_manager = this;
		}
		
		private void detach_li_manager_notification_settings(li_manager_notification_settings entity)
		{
			this.SendPropertyChanging();
			entity.dt_manager = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_wallets")]
	public partial class li_wallets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private decimal _idle_money;
		
		private decimal _investing_money;
		
		private decimal _locked_money;
		
		private decimal _profiting_money;
		
		private decimal _total_profit;
		
		private decimal _total_investment;
		
		private decimal _unused_money;
		
		private decimal _total_charge;
		
		private decimal _total_withdraw;
		
		private System.DateTime _last_update_time;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onidle_moneyChanging(decimal value);
    partial void Onidle_moneyChanged();
    partial void Oninvesting_moneyChanging(decimal value);
    partial void Oninvesting_moneyChanged();
    partial void Onlocked_moneyChanging(decimal value);
    partial void Onlocked_moneyChanged();
    partial void Onprofiting_moneyChanging(decimal value);
    partial void Onprofiting_moneyChanged();
    partial void Ontotal_profitChanging(decimal value);
    partial void Ontotal_profitChanged();
    partial void Ontotal_investmentChanging(decimal value);
    partial void Ontotal_investmentChanged();
    partial void Onunused_moneyChanging(decimal value);
    partial void Onunused_moneyChanged();
    partial void Ontotal_chargeChanging(decimal value);
    partial void Ontotal_chargeChanged();
    partial void Ontotal_withdrawChanging(decimal value);
    partial void Ontotal_withdrawChanged();
    partial void Onlast_update_timeChanging(System.DateTime value);
    partial void Onlast_update_timeChanged();
    #endregion
		
		public li_wallets()
		{
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idle_money", DbType="Decimal(19,2) NOT NULL")]
		public decimal idle_money
		{
			get
			{
				return this._idle_money;
			}
			set
			{
				if ((this._idle_money != value))
				{
					this.Onidle_moneyChanging(value);
					this.SendPropertyChanging();
					this._idle_money = value;
					this.SendPropertyChanged("idle_money");
					this.Onidle_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investing_money", DbType="Decimal(19,2) NOT NULL")]
		public decimal investing_money
		{
			get
			{
				return this._investing_money;
			}
			set
			{
				if ((this._investing_money != value))
				{
					this.Oninvesting_moneyChanging(value);
					this.SendPropertyChanging();
					this._investing_money = value;
					this.SendPropertyChanged("investing_money");
					this.Oninvesting_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locked_money", DbType="Decimal(19,2) NOT NULL")]
		public decimal locked_money
		{
			get
			{
				return this._locked_money;
			}
			set
			{
				if ((this._locked_money != value))
				{
					this.Onlocked_moneyChanging(value);
					this.SendPropertyChanging();
					this._locked_money = value;
					this.SendPropertyChanged("locked_money");
					this.Onlocked_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profiting_money", DbType="Decimal(19,2) NOT NULL")]
		public decimal profiting_money
		{
			get
			{
				return this._profiting_money;
			}
			set
			{
				if ((this._profiting_money != value))
				{
					this.Onprofiting_moneyChanging(value);
					this.SendPropertyChanging();
					this._profiting_money = value;
					this.SendPropertyChanged("profiting_money");
					this.Onprofiting_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_profit", DbType="Decimal(19,2) NOT NULL")]
		public decimal total_profit
		{
			get
			{
				return this._total_profit;
			}
			set
			{
				if ((this._total_profit != value))
				{
					this.Ontotal_profitChanging(value);
					this.SendPropertyChanging();
					this._total_profit = value;
					this.SendPropertyChanged("total_profit");
					this.Ontotal_profitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_investment", DbType="Decimal(19,2) NOT NULL")]
		public decimal total_investment
		{
			get
			{
				return this._total_investment;
			}
			set
			{
				if ((this._total_investment != value))
				{
					this.Ontotal_investmentChanging(value);
					this.SendPropertyChanging();
					this._total_investment = value;
					this.SendPropertyChanged("total_investment");
					this.Ontotal_investmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unused_money", DbType="Decimal(19,2) NOT NULL")]
		public decimal unused_money
		{
			get
			{
				return this._unused_money;
			}
			set
			{
				if ((this._unused_money != value))
				{
					this.Onunused_moneyChanging(value);
					this.SendPropertyChanging();
					this._unused_money = value;
					this.SendPropertyChanged("unused_money");
					this.Onunused_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_charge", DbType="Decimal(19,2) NOT NULL")]
		public decimal total_charge
		{
			get
			{
				return this._total_charge;
			}
			set
			{
				if ((this._total_charge != value))
				{
					this.Ontotal_chargeChanging(value);
					this.SendPropertyChanging();
					this._total_charge = value;
					this.SendPropertyChanged("total_charge");
					this.Ontotal_chargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_withdraw", DbType="Decimal(19,2) NOT NULL")]
		public decimal total_withdraw
		{
			get
			{
				return this._total_withdraw;
			}
			set
			{
				if ((this._total_withdraw != value))
				{
					this.Ontotal_withdrawChanging(value);
					this.SendPropertyChanging();
					this._total_withdraw = value;
					this.SendPropertyChanged("total_withdraw");
					this.Ontotal_withdrawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update_time", DbType="DateTime NOT NULL")]
		public System.DateTime last_update_time
		{
			get
			{
				return this._last_update_time;
			}
			set
			{
				if ((this._last_update_time != value))
				{
					this.Onlast_update_timeChanging(value);
					this.SendPropertyChanging();
					this._last_update_time = value;
					this.SendPropertyChanged("last_update_time");
					this.Onlast_update_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_wallets", Storage="_dt_users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_wallets = null;
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_wallets = this;
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_mail_template")]
	public partial class dt_mail_template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _call_index;
		
		private string _maill_title;
		
		private string _content;
		
		private System.Nullable<byte> _is_sys;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Oncall_indexChanging(string value);
    partial void Oncall_indexChanged();
    partial void Onmaill_titleChanging(string value);
    partial void Onmaill_titleChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void Onis_sysChanging(System.Nullable<byte> value);
    partial void Onis_sysChanged();
    #endregion
		
		public dt_mail_template()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_call_index", DbType="NVarChar(50)")]
		public string call_index
		{
			get
			{
				return this._call_index;
			}
			set
			{
				if ((this._call_index != value))
				{
					this.Oncall_indexChanging(value);
					this.SendPropertyChanging();
					this._call_index = value;
					this.SendPropertyChanged("call_index");
					this.Oncall_indexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maill_title", DbType="NVarChar(100)")]
		public string maill_title
		{
			get
			{
				return this._maill_title;
			}
			set
			{
				if ((this._maill_title != value))
				{
					this.Onmaill_titleChanging(value);
					this.SendPropertyChanging();
					this._maill_title = value;
					this.SendPropertyChanged("maill_title");
					this.Onmaill_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_sys", DbType="TinyInt")]
		public System.Nullable<byte> is_sys
		{
			get
			{
				return this._is_sys;
			}
			set
			{
				if ((this._is_sys != value))
				{
					this.Onis_sysChanging(value);
					this.SendPropertyChanging();
					this._is_sys = value;
					this.SendPropertyChanged("is_sys");
					this.Onis_sysChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_manager_log")]
	public partial class dt_manager_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _user_id;
		
		private string _user_name;
		
		private string _action_type;
		
		private string _remark;
		
		private string _user_ip;
		
		private System.Nullable<System.DateTime> _add_time;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onaction_typeChanging(string value);
    partial void Onaction_typeChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void Onuser_ipChanging(string value);
    partial void Onuser_ipChanged();
    partial void Onadd_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onadd_timeChanged();
    #endregion
		
		public dt_manager_log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(100)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_type", DbType="NVarChar(100)")]
		public string action_type
		{
			get
			{
				return this._action_type;
			}
			set
			{
				if ((this._action_type != value))
				{
					this.Onaction_typeChanging(value);
					this.SendPropertyChanging();
					this._action_type = value;
					this.SendPropertyChanged("action_type");
					this.Onaction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_ip", DbType="NVarChar(30)")]
		public string user_ip
		{
			get
			{
				return this._user_ip;
			}
			set
			{
				if ((this._user_ip != value))
				{
					this.Onuser_ipChanging(value);
					this.SendPropertyChanging();
					this._user_ip = value;
					this.SendPropertyChanged("user_ip");
					this.Onuser_ipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> add_time
		{
			get
			{
				return this._add_time;
			}
			set
			{
				if ((this._add_time != value))
				{
					this.Onadd_timeChanging(value);
					this.SendPropertyChanging();
					this._add_time = value;
					this.SendPropertyChanged("add_time");
					this.Onadd_timeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_sms_template")]
	public partial class dt_sms_template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _call_index;
		
		private string _content;
		
		private System.Nullable<byte> _is_sys;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Oncall_indexChanging(string value);
    partial void Oncall_indexChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void Onis_sysChanging(System.Nullable<byte> value);
    partial void Onis_sysChanged();
    #endregion
		
		public dt_sms_template()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_call_index", DbType="NVarChar(50)")]
		public string call_index
		{
			get
			{
				return this._call_index;
			}
			set
			{
				if ((this._call_index != value))
				{
					this.Oncall_indexChanging(value);
					this.SendPropertyChanging();
					this._call_index = value;
					this.SendPropertyChanged("call_index");
					this.Oncall_indexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_sys", DbType="TinyInt")]
		public System.Nullable<byte> is_sys
		{
			get
			{
				return this._is_sys;
			}
			set
			{
				if ((this._is_sys != value))
				{
					this.Onis_sysChanging(value);
					this.SendPropertyChanging();
					this._is_sys = value;
					this.SendPropertyChanged("is_sys");
					this.Onis_sysChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_user_point_log")]
	public partial class dt_user_point_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _user_id;
		
		private string _user_name;
		
		private System.Nullable<int> _value;
		
		private string _remark;
		
		private System.Nullable<System.DateTime> _add_time;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OnvalueChanging(System.Nullable<int> value);
    partial void OnvalueChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void Onadd_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onadd_timeChanged();
    #endregion
		
		public dt_user_point_log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(100)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Int")]
		public System.Nullable<int> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(500)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> add_time
		{
			get
			{
				return this._add_time;
			}
			set
			{
				if ((this._add_time != value))
				{
					this.Onadd_timeChanging(value);
					this.SendPropertyChanging();
					this._add_time = value;
					this.SendPropertyChanged("add_time");
					this.Onadd_timeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_departments")]
	public partial class li_departments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _department_name;
		
		private System.Nullable<int> _sort_id;
		
		private System.Nullable<byte> _is_lock;
		
		private string _remark;
		
		private System.Nullable<int> _parent_id;
		
		private string _class_list;
		
		private System.Nullable<int> _class_layer;
		
		private System.Nullable<byte> _is_sys;
		
		private System.Nullable<int> _is_default;
		
		private EntitySet<dt_manager> _dt_manager;
		
		private EntitySet<li_user_group_departments> _li_user_group_departments;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondepartment_nameChanging(string value);
    partial void Ondepartment_nameChanged();
    partial void Onsort_idChanging(System.Nullable<int> value);
    partial void Onsort_idChanged();
    partial void Onis_lockChanging(System.Nullable<byte> value);
    partial void Onis_lockChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void Onparent_idChanging(System.Nullable<int> value);
    partial void Onparent_idChanged();
    partial void Onclass_listChanging(string value);
    partial void Onclass_listChanged();
    partial void Onclass_layerChanging(System.Nullable<int> value);
    partial void Onclass_layerChanged();
    partial void Onis_sysChanging(System.Nullable<byte> value);
    partial void Onis_sysChanged();
    partial void Onis_defaultChanging(System.Nullable<int> value);
    partial void Onis_defaultChanged();
    #endregion
		
		public li_departments()
		{
			this._dt_manager = new EntitySet<dt_manager>(new Action<dt_manager>(this.attach_dt_manager), new Action<dt_manager>(this.detach_dt_manager));
			this._li_user_group_departments = new EntitySet<li_user_group_departments>(new Action<li_user_group_departments>(this.attach_li_user_group_departments), new Action<li_user_group_departments>(this.detach_li_user_group_departments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_name", DbType="NVarChar(100)")]
		public string department_name
		{
			get
			{
				return this._department_name;
			}
			set
			{
				if ((this._department_name != value))
				{
					this.Ondepartment_nameChanging(value);
					this.SendPropertyChanging();
					this._department_name = value;
					this.SendPropertyChanged("department_name");
					this.Ondepartment_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_id", DbType="Int")]
		public System.Nullable<int> sort_id
		{
			get
			{
				return this._sort_id;
			}
			set
			{
				if ((this._sort_id != value))
				{
					this.Onsort_idChanging(value);
					this.SendPropertyChanging();
					this._sort_id = value;
					this.SendPropertyChanged("sort_id");
					this.Onsort_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_lock", DbType="TinyInt")]
		public System.Nullable<byte> is_lock
		{
			get
			{
				return this._is_lock;
			}
			set
			{
				if ((this._is_lock != value))
				{
					this.Onis_lockChanging(value);
					this.SendPropertyChanging();
					this._is_lock = value;
					this.SendPropertyChanged("is_lock");
					this.Onis_lockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(500)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_list", DbType="NVarChar(500)")]
		public string class_list
		{
			get
			{
				return this._class_list;
			}
			set
			{
				if ((this._class_list != value))
				{
					this.Onclass_listChanging(value);
					this.SendPropertyChanging();
					this._class_list = value;
					this.SendPropertyChanged("class_list");
					this.Onclass_listChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_layer", DbType="Int")]
		public System.Nullable<int> class_layer
		{
			get
			{
				return this._class_layer;
			}
			set
			{
				if ((this._class_layer != value))
				{
					this.Onclass_layerChanging(value);
					this.SendPropertyChanging();
					this._class_layer = value;
					this.SendPropertyChanged("class_layer");
					this.Onclass_layerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_sys", DbType="TinyInt")]
		public System.Nullable<byte> is_sys
		{
			get
			{
				return this._is_sys;
			}
			set
			{
				if ((this._is_sys != value))
				{
					this.Onis_sysChanging(value);
					this.SendPropertyChanging();
					this._is_sys = value;
					this.SendPropertyChanged("is_sys");
					this.Onis_sysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_default", DbType="Int")]
		public System.Nullable<int> is_default
		{
			get
			{
				return this._is_default;
			}
			set
			{
				if ((this._is_default != value))
				{
					this.Onis_defaultChanging(value);
					this.SendPropertyChanging();
					this._is_default = value;
					this.SendPropertyChanged("is_default");
					this.Onis_defaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_departments_dt_manager", Storage="_dt_manager", ThisKey="id", OtherKey="department_id")]
		public EntitySet<dt_manager> dt_manager
		{
			get
			{
				return this._dt_manager;
			}
			set
			{
				this._dt_manager.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_departments_li_user_group_departments", Storage="_li_user_group_departments", ThisKey="id", OtherKey="department_id")]
		public EntitySet<li_user_group_departments> li_user_group_departments
		{
			get
			{
				return this._li_user_group_departments;
			}
			set
			{
				this._li_user_group_departments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dt_manager(dt_manager entity)
		{
			this.SendPropertyChanging();
			entity.li_departments = this;
		}
		
		private void detach_dt_manager(dt_manager entity)
		{
			this.SendPropertyChanging();
			entity.li_departments = null;
		}
		
		private void attach_li_user_group_departments(li_user_group_departments entity)
		{
			this.SendPropertyChanging();
			entity.li_departments = this;
		}
		
		private void detach_li_user_group_departments(li_user_group_departments entity)
		{
			this.SendPropertyChanging();
			entity.li_departments = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_user_login_log")]
	public partial class dt_user_login_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private string _user_name;
		
		private string _remark;
		
		private System.Nullable<System.DateTime> _login_time;
		
		private string _login_ip;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void Onlogin_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onlogin_timeChanged();
    partial void Onlogin_ipChanging(string value);
    partial void Onlogin_ipChanged();
    #endregion
		
		public dt_user_login_log()
		{
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(100)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> login_time
		{
			get
			{
				return this._login_time;
			}
			set
			{
				if ((this._login_time != value))
				{
					this.Onlogin_timeChanging(value);
					this.SendPropertyChanging();
					this._login_time = value;
					this.SendPropertyChanged("login_time");
					this.Onlogin_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_ip", DbType="NVarChar(50)")]
		public string login_ip
		{
			get
			{
				return this._login_ip;
			}
			set
			{
				if ((this._login_ip != value))
				{
					this.Onlogin_ipChanging(value);
					this.SendPropertyChanging();
					this._login_ip = value;
					this.SendPropertyChanged("login_ip");
					this.Onlogin_ipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_dt_user_login_log", Storage="_dt_users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.dt_user_login_log.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.dt_user_login_log.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_weixin_account")]
	public partial class dt_weixin_account
	{
		
		private int _id;
		
		private string _name;
		
		private string _originalid;
		
		private string _wxcode;
		
		private string _token;
		
		private string _appid;
		
		private string _appsecret;
		
		private System.Nullable<byte> _is_push;
		
		private System.Nullable<int> _sort_id;
		
		private System.Nullable<System.DateTime> _add_time;
		
		public dt_weixin_account()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_originalid", DbType="NVarChar(50)")]
		public string originalid
		{
			get
			{
				return this._originalid;
			}
			set
			{
				if ((this._originalid != value))
				{
					this._originalid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wxcode", DbType="NVarChar(50)")]
		public string wxcode
		{
			get
			{
				return this._wxcode;
			}
			set
			{
				if ((this._wxcode != value))
				{
					this._wxcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token", DbType="NVarChar(300)")]
		public string token
		{
			get
			{
				return this._token;
			}
			set
			{
				if ((this._token != value))
				{
					this._token = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appid", DbType="NVarChar(100)")]
		public string appid
		{
			get
			{
				return this._appid;
			}
			set
			{
				if ((this._appid != value))
				{
					this._appid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appsecret", DbType="NVarChar(150)")]
		public string appsecret
		{
			get
			{
				return this._appsecret;
			}
			set
			{
				if ((this._appsecret != value))
				{
					this._appsecret = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_push", DbType="TinyInt")]
		public System.Nullable<byte> is_push
		{
			get
			{
				return this._is_push;
			}
			set
			{
				if ((this._is_push != value))
				{
					this._is_push = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_id", DbType="Int")]
		public System.Nullable<int> sort_id
		{
			get
			{
				return this._sort_id;
			}
			set
			{
				if ((this._sort_id != value))
				{
					this._sort_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> add_time
		{
			get
			{
				return this._add_time;
			}
			set
			{
				if ((this._add_time != value))
				{
					this._add_time = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_user_group_departments")]
	public partial class li_user_group_departments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_group_id;
		
		private int _department_id;
		
		private EntityRef<li_departments> _li_departments;
		
		private EntityRef<dt_user_groups> _dt_user_groups;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_group_idChanging(int value);
    partial void Onuser_group_idChanged();
    partial void Ondepartment_idChanging(int value);
    partial void Ondepartment_idChanged();
    #endregion
		
		public li_user_group_departments()
		{
			this._li_departments = default(EntityRef<li_departments>);
			this._dt_user_groups = default(EntityRef<dt_user_groups>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_group_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_group_id
		{
			get
			{
				return this._user_group_id;
			}
			set
			{
				if ((this._user_group_id != value))
				{
					if (this._dt_user_groups.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_group_idChanging(value);
					this.SendPropertyChanging();
					this._user_group_id = value;
					this.SendPropertyChanged("user_group_id");
					this.Onuser_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					if (this._li_departments.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_departments_li_user_group_departments", Storage="_li_departments", ThisKey="department_id", OtherKey="id", IsForeignKey=true)]
		public li_departments li_departments
		{
			get
			{
				return this._li_departments.Entity;
			}
			set
			{
				li_departments previousValue = this._li_departments.Entity;
				if (((previousValue != value) 
							|| (this._li_departments.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_departments.Entity = null;
						previousValue.li_user_group_departments.Remove(this);
					}
					this._li_departments.Entity = value;
					if ((value != null))
					{
						value.li_user_group_departments.Add(this);
						this._department_id = value.id;
					}
					else
					{
						this._department_id = default(int);
					}
					this.SendPropertyChanged("li_departments");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_user_groups_li_user_group_departments", Storage="_dt_user_groups", ThisKey="user_group_id", OtherKey="id", IsForeignKey=true)]
		public dt_user_groups dt_user_groups
		{
			get
			{
				return this._dt_user_groups.Entity;
			}
			set
			{
				dt_user_groups previousValue = this._dt_user_groups.Entity;
				if (((previousValue != value) 
							|| (this._dt_user_groups.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_user_groups.Entity = null;
						previousValue.li_user_group_departments.Remove(this);
					}
					this._dt_user_groups.Entity = value;
					if ((value != null))
					{
						value.li_user_group_departments.Add(this);
						this._user_group_id = value.id;
					}
					else
					{
						this._user_group_id = default(int);
					}
					this.SendPropertyChanged("dt_user_groups");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_article")]
	public partial class dt_article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _channel_id;
		
		private int _category_id;
		
		private string _call_index;
		
		private string _title;
		
		private string _link_url;
		
		private string _img_url;
		
		private string _seo_title;
		
		private string _seo_keywords;
		
		private string _seo_description;
		
		private string _zhaiyao;
		
		private string _content;
		
		private System.Nullable<int> _sort_id;
		
		private System.Nullable<int> _click;
		
		private System.Nullable<byte> _status;
		
		private string _groupids_view;
		
		private System.Nullable<int> _vote_id;
		
		private System.Nullable<byte> _is_msg;
		
		private System.Nullable<byte> _is_top;
		
		private System.Nullable<byte> _is_red;
		
		private System.Nullable<byte> _is_hot;
		
		private System.Nullable<byte> _is_slide;
		
		private System.Nullable<byte> _is_sys;
		
		private string _user_name;
		
		private System.Nullable<System.DateTime> _add_time;
		
		private System.Nullable<System.DateTime> _update_time;
		
		private EntityRef<dt_article_attribute_value> _dt_article_attribute_value;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onchannel_idChanging(int value);
    partial void Onchannel_idChanged();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void Oncall_indexChanging(string value);
    partial void Oncall_indexChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onlink_urlChanging(string value);
    partial void Onlink_urlChanged();
    partial void Onimg_urlChanging(string value);
    partial void Onimg_urlChanged();
    partial void Onseo_titleChanging(string value);
    partial void Onseo_titleChanged();
    partial void Onseo_keywordsChanging(string value);
    partial void Onseo_keywordsChanged();
    partial void Onseo_descriptionChanging(string value);
    partial void Onseo_descriptionChanged();
    partial void OnzhaiyaoChanging(string value);
    partial void OnzhaiyaoChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void Onsort_idChanging(System.Nullable<int> value);
    partial void Onsort_idChanged();
    partial void OnclickChanging(System.Nullable<int> value);
    partial void OnclickChanged();
    partial void OnstatusChanging(System.Nullable<byte> value);
    partial void OnstatusChanged();
    partial void Ongroupids_viewChanging(string value);
    partial void Ongroupids_viewChanged();
    partial void Onvote_idChanging(System.Nullable<int> value);
    partial void Onvote_idChanged();
    partial void Onis_msgChanging(System.Nullable<byte> value);
    partial void Onis_msgChanged();
    partial void Onis_topChanging(System.Nullable<byte> value);
    partial void Onis_topChanged();
    partial void Onis_redChanging(System.Nullable<byte> value);
    partial void Onis_redChanged();
    partial void Onis_hotChanging(System.Nullable<byte> value);
    partial void Onis_hotChanged();
    partial void Onis_slideChanging(System.Nullable<byte> value);
    partial void Onis_slideChanged();
    partial void Onis_sysChanging(System.Nullable<byte> value);
    partial void Onis_sysChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onadd_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onadd_timeChanged();
    partial void Onupdate_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_timeChanged();
    #endregion
		
		public dt_article()
		{
			this._dt_article_attribute_value = default(EntityRef<dt_article_attribute_value>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_channel_id", DbType="Int NOT NULL")]
		public int channel_id
		{
			get
			{
				return this._channel_id;
			}
			set
			{
				if ((this._channel_id != value))
				{
					this.Onchannel_idChanging(value);
					this.SendPropertyChanging();
					this._channel_id = value;
					this.SendPropertyChanged("channel_id");
					this.Onchannel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int NOT NULL")]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_call_index", DbType="NVarChar(50)")]
		public string call_index
		{
			get
			{
				return this._call_index;
			}
			set
			{
				if ((this._call_index != value))
				{
					this.Oncall_indexChanging(value);
					this.SendPropertyChanging();
					this._call_index = value;
					this.SendPropertyChanged("call_index");
					this.Oncall_indexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link_url", DbType="NVarChar(255)")]
		public string link_url
		{
			get
			{
				return this._link_url;
			}
			set
			{
				if ((this._link_url != value))
				{
					this.Onlink_urlChanging(value);
					this.SendPropertyChanging();
					this._link_url = value;
					this.SendPropertyChanged("link_url");
					this.Onlink_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_url", DbType="NVarChar(255)")]
		public string img_url
		{
			get
			{
				return this._img_url;
			}
			set
			{
				if ((this._img_url != value))
				{
					this.Onimg_urlChanging(value);
					this.SendPropertyChanging();
					this._img_url = value;
					this.SendPropertyChanged("img_url");
					this.Onimg_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seo_title", DbType="NVarChar(255)")]
		public string seo_title
		{
			get
			{
				return this._seo_title;
			}
			set
			{
				if ((this._seo_title != value))
				{
					this.Onseo_titleChanging(value);
					this.SendPropertyChanging();
					this._seo_title = value;
					this.SendPropertyChanged("seo_title");
					this.Onseo_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seo_keywords", DbType="NVarChar(255)")]
		public string seo_keywords
		{
			get
			{
				return this._seo_keywords;
			}
			set
			{
				if ((this._seo_keywords != value))
				{
					this.Onseo_keywordsChanging(value);
					this.SendPropertyChanging();
					this._seo_keywords = value;
					this.SendPropertyChanged("seo_keywords");
					this.Onseo_keywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seo_description", DbType="NVarChar(255)")]
		public string seo_description
		{
			get
			{
				return this._seo_description;
			}
			set
			{
				if ((this._seo_description != value))
				{
					this.Onseo_descriptionChanging(value);
					this.SendPropertyChanging();
					this._seo_description = value;
					this.SendPropertyChanged("seo_description");
					this.Onseo_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zhaiyao", DbType="NVarChar(255)")]
		public string zhaiyao
		{
			get
			{
				return this._zhaiyao;
			}
			set
			{
				if ((this._zhaiyao != value))
				{
					this.OnzhaiyaoChanging(value);
					this.SendPropertyChanging();
					this._zhaiyao = value;
					this.SendPropertyChanged("zhaiyao");
					this.OnzhaiyaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_id", DbType="Int")]
		public System.Nullable<int> sort_id
		{
			get
			{
				return this._sort_id;
			}
			set
			{
				if ((this._sort_id != value))
				{
					this.Onsort_idChanging(value);
					this.SendPropertyChanging();
					this._sort_id = value;
					this.SendPropertyChanged("sort_id");
					this.Onsort_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_click", DbType="Int")]
		public System.Nullable<int> click
		{
			get
			{
				return this._click;
			}
			set
			{
				if ((this._click != value))
				{
					this.OnclickChanging(value);
					this.SendPropertyChanging();
					this._click = value;
					this.SendPropertyChanged("click");
					this.OnclickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt")]
		public System.Nullable<byte> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupids_view", DbType="NVarChar(255)")]
		public string groupids_view
		{
			get
			{
				return this._groupids_view;
			}
			set
			{
				if ((this._groupids_view != value))
				{
					this.Ongroupids_viewChanging(value);
					this.SendPropertyChanging();
					this._groupids_view = value;
					this.SendPropertyChanged("groupids_view");
					this.Ongroupids_viewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vote_id", DbType="Int")]
		public System.Nullable<int> vote_id
		{
			get
			{
				return this._vote_id;
			}
			set
			{
				if ((this._vote_id != value))
				{
					this.Onvote_idChanging(value);
					this.SendPropertyChanging();
					this._vote_id = value;
					this.SendPropertyChanged("vote_id");
					this.Onvote_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_msg", DbType="TinyInt")]
		public System.Nullable<byte> is_msg
		{
			get
			{
				return this._is_msg;
			}
			set
			{
				if ((this._is_msg != value))
				{
					this.Onis_msgChanging(value);
					this.SendPropertyChanging();
					this._is_msg = value;
					this.SendPropertyChanged("is_msg");
					this.Onis_msgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_top", DbType="TinyInt")]
		public System.Nullable<byte> is_top
		{
			get
			{
				return this._is_top;
			}
			set
			{
				if ((this._is_top != value))
				{
					this.Onis_topChanging(value);
					this.SendPropertyChanging();
					this._is_top = value;
					this.SendPropertyChanged("is_top");
					this.Onis_topChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_red", DbType="TinyInt")]
		public System.Nullable<byte> is_red
		{
			get
			{
				return this._is_red;
			}
			set
			{
				if ((this._is_red != value))
				{
					this.Onis_redChanging(value);
					this.SendPropertyChanging();
					this._is_red = value;
					this.SendPropertyChanged("is_red");
					this.Onis_redChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_hot", DbType="TinyInt")]
		public System.Nullable<byte> is_hot
		{
			get
			{
				return this._is_hot;
			}
			set
			{
				if ((this._is_hot != value))
				{
					this.Onis_hotChanging(value);
					this.SendPropertyChanging();
					this._is_hot = value;
					this.SendPropertyChanged("is_hot");
					this.Onis_hotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_slide", DbType="TinyInt")]
		public System.Nullable<byte> is_slide
		{
			get
			{
				return this._is_slide;
			}
			set
			{
				if ((this._is_slide != value))
				{
					this.Onis_slideChanging(value);
					this.SendPropertyChanging();
					this._is_slide = value;
					this.SendPropertyChanged("is_slide");
					this.Onis_slideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_sys", DbType="TinyInt")]
		public System.Nullable<byte> is_sys
		{
			get
			{
				return this._is_sys;
			}
			set
			{
				if ((this._is_sys != value))
				{
					this.Onis_sysChanging(value);
					this.SendPropertyChanging();
					this._is_sys = value;
					this.SendPropertyChanged("is_sys");
					this.Onis_sysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(100)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> add_time
		{
			get
			{
				return this._add_time;
			}
			set
			{
				if ((this._add_time != value))
				{
					this.Onadd_timeChanging(value);
					this.SendPropertyChanging();
					this._add_time = value;
					this.SendPropertyChanged("add_time");
					this.Onadd_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_time
		{
			get
			{
				return this._update_time;
			}
			set
			{
				if ((this._update_time != value))
				{
					this.Onupdate_timeChanging(value);
					this.SendPropertyChanging();
					this._update_time = value;
					this.SendPropertyChanged("update_time");
					this.Onupdate_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_article_dt_article_attribute_value", Storage="_dt_article_attribute_value", ThisKey="id", OtherKey="article_id", IsUnique=true, IsForeignKey=false)]
		public dt_article_attribute_value dt_article_attribute_value
		{
			get
			{
				return this._dt_article_attribute_value.Entity;
			}
			set
			{
				dt_article_attribute_value previousValue = this._dt_article_attribute_value.Entity;
				if (((previousValue != value) 
							|| (this._dt_article_attribute_value.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_article_attribute_value.Entity = null;
						previousValue.dt_article = null;
					}
					this._dt_article_attribute_value.Entity = value;
					if ((value != null))
					{
						value.dt_article = this;
					}
					this.SendPropertyChanged("dt_article_attribute_value");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_mortgage_types")]
	public partial class li_mortgage_types : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _scheme;
		
		private System.DateTime _last_update_time;
		
		private EntitySet<li_mortgages> _li_mortgages;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnschemeChanging(string value);
    partial void OnschemeChanged();
    partial void Onlast_update_timeChanging(System.DateTime value);
    partial void Onlast_update_timeChanged();
    #endregion
		
		public li_mortgage_types()
		{
			this._li_mortgages = new EntitySet<li_mortgages>(new Action<li_mortgages>(this.attach_li_mortgages), new Action<li_mortgages>(this.detach_li_mortgages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scheme", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string scheme
		{
			get
			{
				return this._scheme;
			}
			set
			{
				if ((this._scheme != value))
				{
					this.OnschemeChanging(value);
					this.SendPropertyChanging();
					this._scheme = value;
					this.SendPropertyChanged("scheme");
					this.OnschemeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update_time", DbType="DateTime NOT NULL")]
		public System.DateTime last_update_time
		{
			get
			{
				return this._last_update_time;
			}
			set
			{
				if ((this._last_update_time != value))
				{
					this.Onlast_update_timeChanging(value);
					this.SendPropertyChanging();
					this._last_update_time = value;
					this.SendPropertyChanged("last_update_time");
					this.Onlast_update_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_mortgage_types_li_mortgages", Storage="_li_mortgages", ThisKey="id", OtherKey="type")]
		public EntitySet<li_mortgages> li_mortgages
		{
			get
			{
				return this._li_mortgages;
			}
			set
			{
				this._li_mortgages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_mortgages(li_mortgages entity)
		{
			this.SendPropertyChanging();
			entity.li_mortgage_types = this;
		}
		
		private void detach_li_mortgages(li_mortgages entity)
		{
			this.SendPropertyChanging();
			entity.li_mortgage_types = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_mortgages")]
	public partial class li_mortgages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _type;
		
		private int _owner;
		
		private decimal _valuation;
		
		private string _remark;
		
		private string _properties;
		
		private System.DateTime _last_update_time;
		
		private EntitySet<li_risk_mortgage> _li_risk_mortgage;
		
		private EntitySet<li_albums> _li_albums;
		
		private EntityRef<li_mortgage_types> _li_mortgage_types;
		
		private EntityRef<li_loaners> _li_loaners;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    partial void OnownerChanging(int value);
    partial void OnownerChanged();
    partial void OnvaluationChanging(decimal value);
    partial void OnvaluationChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OnpropertiesChanging(string value);
    partial void OnpropertiesChanged();
    partial void Onlast_update_timeChanging(System.DateTime value);
    partial void Onlast_update_timeChanged();
    #endregion
		
		public li_mortgages()
		{
			this._li_risk_mortgage = new EntitySet<li_risk_mortgage>(new Action<li_risk_mortgage>(this.attach_li_risk_mortgage), new Action<li_risk_mortgage>(this.detach_li_risk_mortgage));
			this._li_albums = new EntitySet<li_albums>(new Action<li_albums>(this.attach_li_albums), new Action<li_albums>(this.detach_li_albums));
			this._li_mortgage_types = default(EntityRef<li_mortgage_types>);
			this._li_loaners = default(EntityRef<li_loaners>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					if (this._li_mortgage_types.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="Int NOT NULL")]
		public int owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					if (this._li_loaners.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valuation", DbType="Decimal(19,2) NOT NULL")]
		public decimal valuation
		{
			get
			{
				return this._valuation;
			}
			set
			{
				if ((this._valuation != value))
				{
					this.OnvaluationChanging(value);
					this.SendPropertyChanging();
					this._valuation = value;
					this.SendPropertyChanged("valuation");
					this.OnvaluationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(100)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_properties", DbType="NVarChar(500)")]
		public string properties
		{
			get
			{
				return this._properties;
			}
			set
			{
				if ((this._properties != value))
				{
					this.OnpropertiesChanging(value);
					this.SendPropertyChanging();
					this._properties = value;
					this.SendPropertyChanged("properties");
					this.OnpropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update_time", DbType="DateTime NOT NULL")]
		public System.DateTime last_update_time
		{
			get
			{
				return this._last_update_time;
			}
			set
			{
				if ((this._last_update_time != value))
				{
					this.Onlast_update_timeChanging(value);
					this.SendPropertyChanging();
					this._last_update_time = value;
					this.SendPropertyChanged("last_update_time");
					this.Onlast_update_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_mortgages_li_risk_mortgage", Storage="_li_risk_mortgage", ThisKey="id", OtherKey="mortgage")]
		public EntitySet<li_risk_mortgage> li_risk_mortgage
		{
			get
			{
				return this._li_risk_mortgage;
			}
			set
			{
				this._li_risk_mortgage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_mortgages_li_albums", Storage="_li_albums", ThisKey="id", OtherKey="mortgage")]
		public EntitySet<li_albums> li_albums
		{
			get
			{
				return this._li_albums;
			}
			set
			{
				this._li_albums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_mortgage_types_li_mortgages", Storage="_li_mortgage_types", ThisKey="type", OtherKey="id", IsForeignKey=true)]
		public li_mortgage_types li_mortgage_types
		{
			get
			{
				return this._li_mortgage_types.Entity;
			}
			set
			{
				li_mortgage_types previousValue = this._li_mortgage_types.Entity;
				if (((previousValue != value) 
							|| (this._li_mortgage_types.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_mortgage_types.Entity = null;
						previousValue.li_mortgages.Remove(this);
					}
					this._li_mortgage_types.Entity = value;
					if ((value != null))
					{
						value.li_mortgages.Add(this);
						this._type = value.id;
					}
					else
					{
						this._type = default(int);
					}
					this.SendPropertyChanged("li_mortgage_types");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_loaners_li_mortgages", Storage="_li_loaners", ThisKey="owner", OtherKey="id", IsForeignKey=true)]
		public li_loaners li_loaners
		{
			get
			{
				return this._li_loaners.Entity;
			}
			set
			{
				li_loaners previousValue = this._li_loaners.Entity;
				if (((previousValue != value) 
							|| (this._li_loaners.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_loaners.Entity = null;
						previousValue.li_mortgages.Remove(this);
					}
					this._li_loaners.Entity = value;
					if ((value != null))
					{
						value.li_mortgages.Add(this);
						this._owner = value.id;
					}
					else
					{
						this._owner = default(int);
					}
					this.SendPropertyChanged("li_loaners");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_risk_mortgage(li_risk_mortgage entity)
		{
			this.SendPropertyChanging();
			entity.li_mortgages = this;
		}
		
		private void detach_li_risk_mortgage(li_risk_mortgage entity)
		{
			this.SendPropertyChanging();
			entity.li_mortgages = null;
		}
		
		private void attach_li_albums(li_albums entity)
		{
			this.SendPropertyChanging();
			entity.li_mortgages = this;
		}
		
		private void detach_li_albums(li_albums entity)
		{
			this.SendPropertyChanging();
			entity.li_mortgages = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_navigation")]
	public partial class dt_navigation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nav_type;
		
		private string _name;
		
		private string _title;
		
		private string _sub_title;
		
		private string _link_url;
		
		private System.Nullable<int> _sort_id;
		
		private System.Nullable<byte> _is_lock;
		
		private string _remark;
		
		private System.Nullable<int> _parent_id;
		
		private string _class_list;
		
		private System.Nullable<int> _class_layer;
		
		private System.Nullable<int> _channel_id;
		
		private string _action_type;
		
		private System.Nullable<byte> _is_sys;
		
		private string _icon_url;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onnav_typeChanging(string value);
    partial void Onnav_typeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onsub_titleChanging(string value);
    partial void Onsub_titleChanged();
    partial void Onlink_urlChanging(string value);
    partial void Onlink_urlChanged();
    partial void Onsort_idChanging(System.Nullable<int> value);
    partial void Onsort_idChanged();
    partial void Onis_lockChanging(System.Nullable<byte> value);
    partial void Onis_lockChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void Onparent_idChanging(System.Nullable<int> value);
    partial void Onparent_idChanged();
    partial void Onclass_listChanging(string value);
    partial void Onclass_listChanged();
    partial void Onclass_layerChanging(System.Nullable<int> value);
    partial void Onclass_layerChanged();
    partial void Onchannel_idChanging(System.Nullable<int> value);
    partial void Onchannel_idChanged();
    partial void Onaction_typeChanging(string value);
    partial void Onaction_typeChanged();
    partial void Onis_sysChanging(System.Nullable<byte> value);
    partial void Onis_sysChanged();
    partial void Onicon_urlChanging(string value);
    partial void Onicon_urlChanged();
    #endregion
		
		public dt_navigation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nav_type", DbType="NVarChar(50)")]
		public string nav_type
		{
			get
			{
				return this._nav_type;
			}
			set
			{
				if ((this._nav_type != value))
				{
					this.Onnav_typeChanging(value);
					this.SendPropertyChanging();
					this._nav_type = value;
					this.SendPropertyChanged("nav_type");
					this.Onnav_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_title", DbType="NVarChar(100)")]
		public string sub_title
		{
			get
			{
				return this._sub_title;
			}
			set
			{
				if ((this._sub_title != value))
				{
					this.Onsub_titleChanging(value);
					this.SendPropertyChanging();
					this._sub_title = value;
					this.SendPropertyChanged("sub_title");
					this.Onsub_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link_url", DbType="NVarChar(255)")]
		public string link_url
		{
			get
			{
				return this._link_url;
			}
			set
			{
				if ((this._link_url != value))
				{
					this.Onlink_urlChanging(value);
					this.SendPropertyChanging();
					this._link_url = value;
					this.SendPropertyChanged("link_url");
					this.Onlink_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_id", DbType="Int")]
		public System.Nullable<int> sort_id
		{
			get
			{
				return this._sort_id;
			}
			set
			{
				if ((this._sort_id != value))
				{
					this.Onsort_idChanging(value);
					this.SendPropertyChanging();
					this._sort_id = value;
					this.SendPropertyChanged("sort_id");
					this.Onsort_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_lock", DbType="TinyInt")]
		public System.Nullable<byte> is_lock
		{
			get
			{
				return this._is_lock;
			}
			set
			{
				if ((this._is_lock != value))
				{
					this.Onis_lockChanging(value);
					this.SendPropertyChanging();
					this._is_lock = value;
					this.SendPropertyChanged("is_lock");
					this.Onis_lockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(500)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_list", DbType="NVarChar(500)")]
		public string class_list
		{
			get
			{
				return this._class_list;
			}
			set
			{
				if ((this._class_list != value))
				{
					this.Onclass_listChanging(value);
					this.SendPropertyChanging();
					this._class_list = value;
					this.SendPropertyChanged("class_list");
					this.Onclass_listChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_layer", DbType="Int")]
		public System.Nullable<int> class_layer
		{
			get
			{
				return this._class_layer;
			}
			set
			{
				if ((this._class_layer != value))
				{
					this.Onclass_layerChanging(value);
					this.SendPropertyChanging();
					this._class_layer = value;
					this.SendPropertyChanged("class_layer");
					this.Onclass_layerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_channel_id", DbType="Int")]
		public System.Nullable<int> channel_id
		{
			get
			{
				return this._channel_id;
			}
			set
			{
				if ((this._channel_id != value))
				{
					this.Onchannel_idChanging(value);
					this.SendPropertyChanging();
					this._channel_id = value;
					this.SendPropertyChanged("channel_id");
					this.Onchannel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_type", DbType="NVarChar(500)")]
		public string action_type
		{
			get
			{
				return this._action_type;
			}
			set
			{
				if ((this._action_type != value))
				{
					this.Onaction_typeChanging(value);
					this.SendPropertyChanging();
					this._action_type = value;
					this.SendPropertyChanged("action_type");
					this.Onaction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_sys", DbType="TinyInt")]
		public System.Nullable<byte> is_sys
		{
			get
			{
				return this._is_sys;
			}
			set
			{
				if ((this._is_sys != value))
				{
					this.Onis_sysChanging(value);
					this.SendPropertyChanging();
					this._is_sys = value;
					this.SendPropertyChanged("is_sys");
					this.Onis_sysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_icon_url", DbType="NVarChar(255)")]
		public string icon_url
		{
			get
			{
				return this._icon_url;
			}
			set
			{
				if ((this._icon_url != value))
				{
					this.Onicon_urlChanging(value);
					this.SendPropertyChanging();
					this._icon_url = value;
					this.SendPropertyChanged("icon_url");
					this.Onicon_urlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_albums")]
	public partial class li_albums : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _thumb_path;
		
		private string _original_path;
		
		private string _remark;
		
		private System.DateTime _add_time;
		
		private byte _type;
		
		private System.Nullable<int> _loaner;
		
		private System.Nullable<int> _mortgage;
		
		private System.Nullable<int> _the_user;
		
		private System.Nullable<int> _risk;
		
		private System.Nullable<int> _company;
		
		private System.Nullable<int> _guarantor;
		
		private EntityRef<li_mortgages> _li_mortgages;
		
		private EntityRef<li_guarantors> _li_guarantors;
		
		private EntityRef<li_loaner_companies> _li_loaner_companies;
		
		private EntityRef<li_loaners> _li_loaners;
		
		private EntityRef<li_risks> _li_risks;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onthumb_pathChanging(string value);
    partial void Onthumb_pathChanged();
    partial void Onoriginal_pathChanging(string value);
    partial void Onoriginal_pathChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void Onadd_timeChanging(System.DateTime value);
    partial void Onadd_timeChanged();
    partial void OntypeChanging(byte value);
    partial void OntypeChanged();
    partial void OnloanerChanging(System.Nullable<int> value);
    partial void OnloanerChanged();
    partial void OnmortgageChanging(System.Nullable<int> value);
    partial void OnmortgageChanged();
    partial void Onthe_userChanging(System.Nullable<int> value);
    partial void Onthe_userChanged();
    partial void OnriskChanging(System.Nullable<int> value);
    partial void OnriskChanged();
    partial void OncompanyChanging(System.Nullable<int> value);
    partial void OncompanyChanged();
    partial void OnguarantorChanging(System.Nullable<int> value);
    partial void OnguarantorChanged();
    #endregion
		
		public li_albums()
		{
			this._li_mortgages = default(EntityRef<li_mortgages>);
			this._li_guarantors = default(EntityRef<li_guarantors>);
			this._li_loaner_companies = default(EntityRef<li_loaner_companies>);
			this._li_loaners = default(EntityRef<li_loaners>);
			this._li_risks = default(EntityRef<li_risks>);
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumb_path", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string thumb_path
		{
			get
			{
				return this._thumb_path;
			}
			set
			{
				if ((this._thumb_path != value))
				{
					this.Onthumb_pathChanging(value);
					this.SendPropertyChanging();
					this._thumb_path = value;
					this.SendPropertyChanged("thumb_path");
					this.Onthumb_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_original_path", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string original_path
		{
			get
			{
				return this._original_path;
			}
			set
			{
				if ((this._original_path != value))
				{
					this.Onoriginal_pathChanging(value);
					this.SendPropertyChanging();
					this._original_path = value;
					this.SendPropertyChanged("original_path");
					this.Onoriginal_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(50)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_time", DbType="DateTime NOT NULL")]
		public System.DateTime add_time
		{
			get
			{
				return this._add_time;
			}
			set
			{
				if ((this._add_time != value))
				{
					this.Onadd_timeChanging(value);
					this.SendPropertyChanging();
					this._add_time = value;
					this.SendPropertyChanged("add_time");
					this.Onadd_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="TinyInt NOT NULL")]
		public byte type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaner", DbType="Int")]
		public System.Nullable<int> loaner
		{
			get
			{
				return this._loaner;
			}
			set
			{
				if ((this._loaner != value))
				{
					if (this._li_loaners.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnloanerChanging(value);
					this.SendPropertyChanging();
					this._loaner = value;
					this.SendPropertyChanged("loaner");
					this.OnloanerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgage", DbType="Int")]
		public System.Nullable<int> mortgage
		{
			get
			{
				return this._mortgage;
			}
			set
			{
				if ((this._mortgage != value))
				{
					if (this._li_mortgages.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmortgageChanging(value);
					this.SendPropertyChanging();
					this._mortgage = value;
					this.SendPropertyChanged("mortgage");
					this.OnmortgageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_the_user", DbType="Int")]
		public System.Nullable<int> the_user
		{
			get
			{
				return this._the_user;
			}
			set
			{
				if ((this._the_user != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onthe_userChanging(value);
					this.SendPropertyChanging();
					this._the_user = value;
					this.SendPropertyChanged("the_user");
					this.Onthe_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_risk", DbType="Int")]
		public System.Nullable<int> risk
		{
			get
			{
				return this._risk;
			}
			set
			{
				if ((this._risk != value))
				{
					if (this._li_risks.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnriskChanging(value);
					this.SendPropertyChanging();
					this._risk = value;
					this.SendPropertyChanged("risk");
					this.OnriskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company", DbType="Int")]
		public System.Nullable<int> company
		{
			get
			{
				return this._company;
			}
			set
			{
				if ((this._company != value))
				{
					if (this._li_loaner_companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyChanging(value);
					this.SendPropertyChanging();
					this._company = value;
					this.SendPropertyChanged("company");
					this.OncompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guarantor", DbType="Int")]
		public System.Nullable<int> guarantor
		{
			get
			{
				return this._guarantor;
			}
			set
			{
				if ((this._guarantor != value))
				{
					if (this._li_guarantors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnguarantorChanging(value);
					this.SendPropertyChanging();
					this._guarantor = value;
					this.SendPropertyChanged("guarantor");
					this.OnguarantorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_mortgages_li_albums", Storage="_li_mortgages", ThisKey="mortgage", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public li_mortgages li_mortgages
		{
			get
			{
				return this._li_mortgages.Entity;
			}
			set
			{
				li_mortgages previousValue = this._li_mortgages.Entity;
				if (((previousValue != value) 
							|| (this._li_mortgages.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_mortgages.Entity = null;
						previousValue.li_albums.Remove(this);
					}
					this._li_mortgages.Entity = value;
					if ((value != null))
					{
						value.li_albums.Add(this);
						this._mortgage = value.id;
					}
					else
					{
						this._mortgage = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_mortgages");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_guarantors_li_albums", Storage="_li_guarantors", ThisKey="guarantor", OtherKey="id", IsForeignKey=true)]
		public li_guarantors li_guarantors
		{
			get
			{
				return this._li_guarantors.Entity;
			}
			set
			{
				li_guarantors previousValue = this._li_guarantors.Entity;
				if (((previousValue != value) 
							|| (this._li_guarantors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_guarantors.Entity = null;
						previousValue.li_albums.Remove(this);
					}
					this._li_guarantors.Entity = value;
					if ((value != null))
					{
						value.li_albums.Add(this);
						this._guarantor = value.id;
					}
					else
					{
						this._guarantor = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_guarantors");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_loaner_companies_li_albums", Storage="_li_loaner_companies", ThisKey="company", OtherKey="id", IsForeignKey=true)]
		public li_loaner_companies li_loaner_companies
		{
			get
			{
				return this._li_loaner_companies.Entity;
			}
			set
			{
				li_loaner_companies previousValue = this._li_loaner_companies.Entity;
				if (((previousValue != value) 
							|| (this._li_loaner_companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_loaner_companies.Entity = null;
						previousValue.li_albums.Remove(this);
					}
					this._li_loaner_companies.Entity = value;
					if ((value != null))
					{
						value.li_albums.Add(this);
						this._company = value.id;
					}
					else
					{
						this._company = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_loaner_companies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_loaners_li_albums", Storage="_li_loaners", ThisKey="loaner", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public li_loaners li_loaners
		{
			get
			{
				return this._li_loaners.Entity;
			}
			set
			{
				li_loaners previousValue = this._li_loaners.Entity;
				if (((previousValue != value) 
							|| (this._li_loaners.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_loaners.Entity = null;
						previousValue.li_albums.Remove(this);
					}
					this._li_loaners.Entity = value;
					if ((value != null))
					{
						value.li_albums.Add(this);
						this._loaner = value.id;
					}
					else
					{
						this._loaner = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_loaners");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_risks_li_albums", Storage="_li_risks", ThisKey="risk", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public li_risks li_risks
		{
			get
			{
				return this._li_risks.Entity;
			}
			set
			{
				li_risks previousValue = this._li_risks.Entity;
				if (((previousValue != value) 
							|| (this._li_risks.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_risks.Entity = null;
						previousValue.li_albums.Remove(this);
					}
					this._li_risks.Entity = value;
					if ((value != null))
					{
						value.li_albums.Add(this);
						this._risk = value.id;
					}
					else
					{
						this._risk = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_risks");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_albums", Storage="_dt_users", ThisKey="the_user", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_albums.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_albums.Add(this);
						this._the_user = value.id;
					}
					else
					{
						this._the_user = default(Nullable<int>);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_guarantors")]
	public partial class li_guarantors : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _regist_number;
		
		private byte _type;
		
		private string _legal_person;
		
		private string _registered_capital;
		
		private System.DateTime _setup_time;
		
		private string _address;
		
		private string _business_scope;
		
		private string _shareholders_info;
		
		private string _credit_situation_info;
		
		private string _cm_business_types;
		
		private string _cm_cooperation_time;
		
		private string _cm_total_degree;
		
		private string _cm_used_degree;
		
		private string _cm_remain_degree;
		
		private string _description;
		
		private EntitySet<li_albums> _li_albums;
		
		private EntitySet<li_risks> _li_risks;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onregist_numberChanging(string value);
    partial void Onregist_numberChanged();
    partial void OntypeChanging(byte value);
    partial void OntypeChanged();
    partial void Onlegal_personChanging(string value);
    partial void Onlegal_personChanged();
    partial void Onregistered_capitalChanging(string value);
    partial void Onregistered_capitalChanged();
    partial void Onsetup_timeChanging(System.DateTime value);
    partial void Onsetup_timeChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onbusiness_scopeChanging(string value);
    partial void Onbusiness_scopeChanged();
    partial void Onshareholders_infoChanging(string value);
    partial void Onshareholders_infoChanged();
    partial void Oncredit_situation_infoChanging(string value);
    partial void Oncredit_situation_infoChanged();
    partial void Oncm_business_typesChanging(string value);
    partial void Oncm_business_typesChanged();
    partial void Oncm_cooperation_timeChanging(string value);
    partial void Oncm_cooperation_timeChanged();
    partial void Oncm_total_degreeChanging(string value);
    partial void Oncm_total_degreeChanged();
    partial void Oncm_used_degreeChanging(string value);
    partial void Oncm_used_degreeChanged();
    partial void Oncm_remain_degreeChanging(string value);
    partial void Oncm_remain_degreeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public li_guarantors()
		{
			this._li_albums = new EntitySet<li_albums>(new Action<li_albums>(this.attach_li_albums), new Action<li_albums>(this.detach_li_albums));
			this._li_risks = new EntitySet<li_risks>(new Action<li_risks>(this.attach_li_risks), new Action<li_risks>(this.detach_li_risks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regist_number", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string regist_number
		{
			get
			{
				return this._regist_number;
			}
			set
			{
				if ((this._regist_number != value))
				{
					this.Onregist_numberChanging(value);
					this.SendPropertyChanging();
					this._regist_number = value;
					this.SendPropertyChanged("regist_number");
					this.Onregist_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="TinyInt NOT NULL")]
		public byte type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_legal_person", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string legal_person
		{
			get
			{
				return this._legal_person;
			}
			set
			{
				if ((this._legal_person != value))
				{
					this.Onlegal_personChanging(value);
					this.SendPropertyChanging();
					this._legal_person = value;
					this.SendPropertyChanged("legal_person");
					this.Onlegal_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registered_capital", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string registered_capital
		{
			get
			{
				return this._registered_capital;
			}
			set
			{
				if ((this._registered_capital != value))
				{
					this.Onregistered_capitalChanging(value);
					this.SendPropertyChanging();
					this._registered_capital = value;
					this.SendPropertyChanged("registered_capital");
					this.Onregistered_capitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_setup_time", DbType="Date NOT NULL")]
		public System.DateTime setup_time
		{
			get
			{
				return this._setup_time;
			}
			set
			{
				if ((this._setup_time != value))
				{
					this.Onsetup_timeChanging(value);
					this.SendPropertyChanging();
					this._setup_time = value;
					this.SendPropertyChanged("setup_time");
					this.Onsetup_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_business_scope", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string business_scope
		{
			get
			{
				return this._business_scope;
			}
			set
			{
				if ((this._business_scope != value))
				{
					this.Onbusiness_scopeChanging(value);
					this.SendPropertyChanging();
					this._business_scope = value;
					this.SendPropertyChanged("business_scope");
					this.Onbusiness_scopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shareholders_info", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string shareholders_info
		{
			get
			{
				return this._shareholders_info;
			}
			set
			{
				if ((this._shareholders_info != value))
				{
					this.Onshareholders_infoChanging(value);
					this.SendPropertyChanging();
					this._shareholders_info = value;
					this.SendPropertyChanged("shareholders_info");
					this.Onshareholders_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit_situation_info", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string credit_situation_info
		{
			get
			{
				return this._credit_situation_info;
			}
			set
			{
				if ((this._credit_situation_info != value))
				{
					this.Oncredit_situation_infoChanging(value);
					this.SendPropertyChanging();
					this._credit_situation_info = value;
					this.SendPropertyChanged("credit_situation_info");
					this.Oncredit_situation_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cm_business_types", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string cm_business_types
		{
			get
			{
				return this._cm_business_types;
			}
			set
			{
				if ((this._cm_business_types != value))
				{
					this.Oncm_business_typesChanging(value);
					this.SendPropertyChanging();
					this._cm_business_types = value;
					this.SendPropertyChanged("cm_business_types");
					this.Oncm_business_typesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cm_cooperation_time", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string cm_cooperation_time
		{
			get
			{
				return this._cm_cooperation_time;
			}
			set
			{
				if ((this._cm_cooperation_time != value))
				{
					this.Oncm_cooperation_timeChanging(value);
					this.SendPropertyChanging();
					this._cm_cooperation_time = value;
					this.SendPropertyChanged("cm_cooperation_time");
					this.Oncm_cooperation_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cm_total_degree", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string cm_total_degree
		{
			get
			{
				return this._cm_total_degree;
			}
			set
			{
				if ((this._cm_total_degree != value))
				{
					this.Oncm_total_degreeChanging(value);
					this.SendPropertyChanging();
					this._cm_total_degree = value;
					this.SendPropertyChanged("cm_total_degree");
					this.Oncm_total_degreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cm_used_degree", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string cm_used_degree
		{
			get
			{
				return this._cm_used_degree;
			}
			set
			{
				if ((this._cm_used_degree != value))
				{
					this.Oncm_used_degreeChanging(value);
					this.SendPropertyChanging();
					this._cm_used_degree = value;
					this.SendPropertyChanged("cm_used_degree");
					this.Oncm_used_degreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cm_remain_degree", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string cm_remain_degree
		{
			get
			{
				return this._cm_remain_degree;
			}
			set
			{
				if ((this._cm_remain_degree != value))
				{
					this.Oncm_remain_degreeChanging(value);
					this.SendPropertyChanging();
					this._cm_remain_degree = value;
					this.SendPropertyChanged("cm_remain_degree");
					this.Oncm_remain_degreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_guarantors_li_albums", Storage="_li_albums", ThisKey="id", OtherKey="guarantor")]
		public EntitySet<li_albums> li_albums
		{
			get
			{
				return this._li_albums;
			}
			set
			{
				this._li_albums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_guarantors_li_risks", Storage="_li_risks", ThisKey="id", OtherKey="guarantor_id")]
		public EntitySet<li_risks> li_risks
		{
			get
			{
				return this._li_risks;
			}
			set
			{
				this._li_risks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_albums(li_albums entity)
		{
			this.SendPropertyChanging();
			entity.li_guarantors = this;
		}
		
		private void detach_li_albums(li_albums entity)
		{
			this.SendPropertyChanging();
			entity.li_guarantors = null;
		}
		
		private void attach_li_risks(li_risks entity)
		{
			this.SendPropertyChanging();
			entity.li_guarantors = this;
		}
		
		private void detach_li_risks(li_risks entity)
		{
			this.SendPropertyChanging();
			entity.li_guarantors = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_creditors")]
	public partial class li_creditors : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private System.DateTime _last_update_time;
		
		private string _working_company;
		
		private short _age;
		
		private string _job;
		
		private string _remark;
		
		private EntitySet<li_risks> _li_risks;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onlast_update_timeChanging(System.DateTime value);
    partial void Onlast_update_timeChanged();
    partial void Onworking_companyChanging(string value);
    partial void Onworking_companyChanged();
    partial void OnageChanging(short value);
    partial void OnageChanged();
    partial void OnjobChanging(string value);
    partial void OnjobChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public li_creditors()
		{
			this._li_risks = new EntitySet<li_risks>(new Action<li_risks>(this.attach_li_risks), new Action<li_risks>(this.detach_li_risks));
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update_time", DbType="DateTime NOT NULL")]
		public System.DateTime last_update_time
		{
			get
			{
				return this._last_update_time;
			}
			set
			{
				if ((this._last_update_time != value))
				{
					this.Onlast_update_timeChanging(value);
					this.SendPropertyChanging();
					this._last_update_time = value;
					this.SendPropertyChanged("last_update_time");
					this.Onlast_update_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_working_company", DbType="NVarChar(30)")]
		public string working_company
		{
			get
			{
				return this._working_company;
			}
			set
			{
				if ((this._working_company != value))
				{
					this.Onworking_companyChanging(value);
					this.SendPropertyChanging();
					this._working_company = value;
					this.SendPropertyChanged("working_company");
					this.Onworking_companyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="SmallInt NOT NULL")]
		public short age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="NVarChar(10)")]
		public string job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(50)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_creditors_li_risks", Storage="_li_risks", ThisKey="user_id", OtherKey="creditor")]
		public EntitySet<li_risks> li_risks
		{
			get
			{
				return this._li_risks;
			}
			set
			{
				this._li_risks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_creditors", Storage="_dt_users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_creditors = null;
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_creditors = this;
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_risks(li_risks entity)
		{
			this.SendPropertyChanging();
			entity.li_creditors = this;
		}
		
		private void detach_li_risks(li_risks entity)
		{
			this.SendPropertyChanging();
			entity.li_creditors = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_article_category")]
	public partial class dt_article_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _channel_id;
		
		private string _title;
		
		private string _call_index;
		
		private System.Nullable<int> _parent_id;
		
		private string _class_list;
		
		private System.Nullable<int> _class_layer;
		
		private System.Nullable<int> _sort_id;
		
		private string _link_url;
		
		private string _img_url;
		
		private string _content;
		
		private string _seo_title;
		
		private string _seo_keywords;
		
		private string _seo_description;
		
		private EntitySet<li_projects> _li_projects;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onchannel_idChanging(int value);
    partial void Onchannel_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Oncall_indexChanging(string value);
    partial void Oncall_indexChanged();
    partial void Onparent_idChanging(System.Nullable<int> value);
    partial void Onparent_idChanged();
    partial void Onclass_listChanging(string value);
    partial void Onclass_listChanged();
    partial void Onclass_layerChanging(System.Nullable<int> value);
    partial void Onclass_layerChanged();
    partial void Onsort_idChanging(System.Nullable<int> value);
    partial void Onsort_idChanged();
    partial void Onlink_urlChanging(string value);
    partial void Onlink_urlChanged();
    partial void Onimg_urlChanging(string value);
    partial void Onimg_urlChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void Onseo_titleChanging(string value);
    partial void Onseo_titleChanged();
    partial void Onseo_keywordsChanging(string value);
    partial void Onseo_keywordsChanged();
    partial void Onseo_descriptionChanging(string value);
    partial void Onseo_descriptionChanged();
    #endregion
		
		public dt_article_category()
		{
			this._li_projects = new EntitySet<li_projects>(new Action<li_projects>(this.attach_li_projects), new Action<li_projects>(this.detach_li_projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_channel_id", DbType="Int NOT NULL")]
		public int channel_id
		{
			get
			{
				return this._channel_id;
			}
			set
			{
				if ((this._channel_id != value))
				{
					this.Onchannel_idChanging(value);
					this.SendPropertyChanging();
					this._channel_id = value;
					this.SendPropertyChanged("channel_id");
					this.Onchannel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_call_index", DbType="NVarChar(50)")]
		public string call_index
		{
			get
			{
				return this._call_index;
			}
			set
			{
				if ((this._call_index != value))
				{
					this.Oncall_indexChanging(value);
					this.SendPropertyChanging();
					this._call_index = value;
					this.SendPropertyChanged("call_index");
					this.Oncall_indexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_list", DbType="NVarChar(500)")]
		public string class_list
		{
			get
			{
				return this._class_list;
			}
			set
			{
				if ((this._class_list != value))
				{
					this.Onclass_listChanging(value);
					this.SendPropertyChanging();
					this._class_list = value;
					this.SendPropertyChanged("class_list");
					this.Onclass_listChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_layer", DbType="Int")]
		public System.Nullable<int> class_layer
		{
			get
			{
				return this._class_layer;
			}
			set
			{
				if ((this._class_layer != value))
				{
					this.Onclass_layerChanging(value);
					this.SendPropertyChanging();
					this._class_layer = value;
					this.SendPropertyChanged("class_layer");
					this.Onclass_layerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_id", DbType="Int")]
		public System.Nullable<int> sort_id
		{
			get
			{
				return this._sort_id;
			}
			set
			{
				if ((this._sort_id != value))
				{
					this.Onsort_idChanging(value);
					this.SendPropertyChanging();
					this._sort_id = value;
					this.SendPropertyChanged("sort_id");
					this.Onsort_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link_url", DbType="NVarChar(255)")]
		public string link_url
		{
			get
			{
				return this._link_url;
			}
			set
			{
				if ((this._link_url != value))
				{
					this.Onlink_urlChanging(value);
					this.SendPropertyChanging();
					this._link_url = value;
					this.SendPropertyChanged("link_url");
					this.Onlink_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_url", DbType="NVarChar(255)")]
		public string img_url
		{
			get
			{
				return this._img_url;
			}
			set
			{
				if ((this._img_url != value))
				{
					this.Onimg_urlChanging(value);
					this.SendPropertyChanging();
					this._img_url = value;
					this.SendPropertyChanged("img_url");
					this.Onimg_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seo_title", DbType="NVarChar(255)")]
		public string seo_title
		{
			get
			{
				return this._seo_title;
			}
			set
			{
				if ((this._seo_title != value))
				{
					this.Onseo_titleChanging(value);
					this.SendPropertyChanging();
					this._seo_title = value;
					this.SendPropertyChanged("seo_title");
					this.Onseo_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seo_keywords", DbType="NVarChar(255)")]
		public string seo_keywords
		{
			get
			{
				return this._seo_keywords;
			}
			set
			{
				if ((this._seo_keywords != value))
				{
					this.Onseo_keywordsChanging(value);
					this.SendPropertyChanging();
					this._seo_keywords = value;
					this.SendPropertyChanged("seo_keywords");
					this.Onseo_keywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seo_description", DbType="NVarChar(255)")]
		public string seo_description
		{
			get
			{
				return this._seo_description;
			}
			set
			{
				if ((this._seo_description != value))
				{
					this.Onseo_descriptionChanging(value);
					this.SendPropertyChanging();
					this._seo_description = value;
					this.SendPropertyChanged("seo_description");
					this.Onseo_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_article_category_li_projects", Storage="_li_projects", ThisKey="id", OtherKey="category_id")]
		public EntitySet<li_projects> li_projects
		{
			get
			{
				return this._li_projects;
			}
			set
			{
				this._li_projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_projects(li_projects entity)
		{
			this.SendPropertyChanging();
			entity.dt_article_category = this;
		}
		
		private void detach_li_projects(li_projects entity)
		{
			this.SendPropertyChanging();
			entity.dt_article_category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_notification_settings")]
	public partial class li_notification_settings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private int _type;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    #endregion
		
		public li_notification_settings()
		{
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_notification_settings", Storage="_dt_users", ThisKey="user_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_notification_settings.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_notification_settings.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_user_message")]
	public partial class dt_user_message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<byte> _type;
		
		private string _post_user_name;
		
		private string _accept_user_name;
		
		private System.Nullable<byte> _is_read;
		
		private string _title;
		
		private string _content;
		
		private System.DateTime _post_time;
		
		private System.Nullable<System.DateTime> _read_time;
		
		private System.Nullable<int> _receiver;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntypeChanging(System.Nullable<byte> value);
    partial void OntypeChanged();
    partial void Onpost_user_nameChanging(string value);
    partial void Onpost_user_nameChanged();
    partial void Onaccept_user_nameChanging(string value);
    partial void Onaccept_user_nameChanged();
    partial void Onis_readChanging(System.Nullable<byte> value);
    partial void Onis_readChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void Onpost_timeChanging(System.DateTime value);
    partial void Onpost_timeChanged();
    partial void Onread_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onread_timeChanged();
    partial void OnreceiverChanging(System.Nullable<int> value);
    partial void OnreceiverChanged();
    #endregion
		
		public dt_user_message()
		{
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="TinyInt")]
		public System.Nullable<byte> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_user_name", DbType="NVarChar(100)")]
		public string post_user_name
		{
			get
			{
				return this._post_user_name;
			}
			set
			{
				if ((this._post_user_name != value))
				{
					this.Onpost_user_nameChanging(value);
					this.SendPropertyChanging();
					this._post_user_name = value;
					this.SendPropertyChanged("post_user_name");
					this.Onpost_user_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accept_user_name", DbType="NVarChar(100)")]
		public string accept_user_name
		{
			get
			{
				return this._accept_user_name;
			}
			set
			{
				if ((this._accept_user_name != value))
				{
					this.Onaccept_user_nameChanging(value);
					this.SendPropertyChanging();
					this._accept_user_name = value;
					this.SendPropertyChanged("accept_user_name");
					this.Onaccept_user_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_read", DbType="TinyInt")]
		public System.Nullable<byte> is_read
		{
			get
			{
				return this._is_read;
			}
			set
			{
				if ((this._is_read != value))
				{
					this.Onis_readChanging(value);
					this.SendPropertyChanging();
					this._is_read = value;
					this.SendPropertyChanged("is_read");
					this.Onis_readChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_time", DbType="DateTime NOT NULL")]
		public System.DateTime post_time
		{
			get
			{
				return this._post_time;
			}
			set
			{
				if ((this._post_time != value))
				{
					this.Onpost_timeChanging(value);
					this.SendPropertyChanging();
					this._post_time = value;
					this.SendPropertyChanged("post_time");
					this.Onpost_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_read_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> read_time
		{
			get
			{
				return this._read_time;
			}
			set
			{
				if ((this._read_time != value))
				{
					this.Onread_timeChanging(value);
					this.SendPropertyChanging();
					this._read_time = value;
					this.SendPropertyChanged("read_time");
					this.Onread_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiver", DbType="Int")]
		public System.Nullable<int> receiver
		{
			get
			{
				return this._receiver;
			}
			set
			{
				if ((this._receiver != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreceiverChanging(value);
					this.SendPropertyChanging();
					this._receiver = value;
					this.SendPropertyChanged("receiver");
					this.OnreceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_dt_user_message", Storage="_dt_users", ThisKey="receiver", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.dt_user_message.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.dt_user_message.Add(this);
						this._receiver = value.id;
					}
					else
					{
						this._receiver = default(Nullable<int>);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_channel")]
	public partial class dt_channel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _category_id;
		
		private string _name;
		
		private string _title;
		
		private System.Nullable<byte> _is_albums;
		
		private System.Nullable<byte> _is_attach;
		
		private System.Nullable<byte> _is_group_price;
		
		private System.Nullable<int> _page_size;
		
		private System.Nullable<int> _sort_id;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncategory_idChanging(System.Nullable<int> value);
    partial void Oncategory_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onis_albumsChanging(System.Nullable<byte> value);
    partial void Onis_albumsChanged();
    partial void Onis_attachChanging(System.Nullable<byte> value);
    partial void Onis_attachChanged();
    partial void Onis_group_priceChanging(System.Nullable<byte> value);
    partial void Onis_group_priceChanged();
    partial void Onpage_sizeChanging(System.Nullable<int> value);
    partial void Onpage_sizeChanged();
    partial void Onsort_idChanging(System.Nullable<int> value);
    partial void Onsort_idChanged();
    #endregion
		
		public dt_channel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int")]
		public System.Nullable<int> category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(100)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_albums", DbType="TinyInt")]
		public System.Nullable<byte> is_albums
		{
			get
			{
				return this._is_albums;
			}
			set
			{
				if ((this._is_albums != value))
				{
					this.Onis_albumsChanging(value);
					this.SendPropertyChanging();
					this._is_albums = value;
					this.SendPropertyChanged("is_albums");
					this.Onis_albumsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_attach", DbType="TinyInt")]
		public System.Nullable<byte> is_attach
		{
			get
			{
				return this._is_attach;
			}
			set
			{
				if ((this._is_attach != value))
				{
					this.Onis_attachChanging(value);
					this.SendPropertyChanging();
					this._is_attach = value;
					this.SendPropertyChanged("is_attach");
					this.Onis_attachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_group_price", DbType="TinyInt")]
		public System.Nullable<byte> is_group_price
		{
			get
			{
				return this._is_group_price;
			}
			set
			{
				if ((this._is_group_price != value))
				{
					this.Onis_group_priceChanging(value);
					this.SendPropertyChanging();
					this._is_group_price = value;
					this.SendPropertyChanged("is_group_price");
					this.Onis_group_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_size", DbType="Int")]
		public System.Nullable<int> page_size
		{
			get
			{
				return this._page_size;
			}
			set
			{
				if ((this._page_size != value))
				{
					this.Onpage_sizeChanging(value);
					this.SendPropertyChanging();
					this._page_size = value;
					this.SendPropertyChanged("page_size");
					this.Onpage_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_id", DbType="Int")]
		public System.Nullable<int> sort_id
		{
			get
			{
				return this._sort_id;
			}
			set
			{
				if ((this._sort_id != value))
				{
					this.Onsort_idChanging(value);
					this.SendPropertyChanging();
					this._sort_id = value;
					this.SendPropertyChanged("sort_id");
					this.Onsort_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_company_inoutcome")]
	public partial class li_company_inoutcome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _income;
		
		private System.Nullable<decimal> _outcome;
		
		private System.DateTime _create_time;
		
		private byte _type;
		
		private int _user_id;
		
		private System.Nullable<int> _project_id;
		
		private string _remark;
		
		private EntityRef<dt_users> _dt_users;
		
		private EntityRef<li_projects> _li_projects;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnincomeChanging(System.Nullable<decimal> value);
    partial void OnincomeChanged();
    partial void OnoutcomeChanging(System.Nullable<decimal> value);
    partial void OnoutcomeChanged();
    partial void Oncreate_timeChanging(System.DateTime value);
    partial void Oncreate_timeChanged();
    partial void OntypeChanging(byte value);
    partial void OntypeChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onproject_idChanging(System.Nullable<int> value);
    partial void Onproject_idChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public li_company_inoutcome()
		{
			this._dt_users = default(EntityRef<dt_users>);
			this._li_projects = default(EntityRef<li_projects>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_income", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> income
		{
			get
			{
				return this._income;
			}
			set
			{
				if ((this._income != value))
				{
					this.OnincomeChanging(value);
					this.SendPropertyChanging();
					this._income = value;
					this.SendPropertyChanged("income");
					this.OnincomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outcome", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> outcome
		{
			get
			{
				return this._outcome;
			}
			set
			{
				if ((this._outcome != value))
				{
					this.OnoutcomeChanging(value);
					this.SendPropertyChanging();
					this._outcome = value;
					this.SendPropertyChanged("outcome");
					this.OnoutcomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_time", DbType="DateTime NOT NULL")]
		public System.DateTime create_time
		{
			get
			{
				return this._create_time;
			}
			set
			{
				if ((this._create_time != value))
				{
					this.Oncreate_timeChanging(value);
					this.SendPropertyChanging();
					this._create_time = value;
					this.SendPropertyChanged("create_time");
					this.Oncreate_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="TinyInt NOT NULL")]
		public byte type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int")]
		public System.Nullable<int> project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					if (this._li_projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_company_inoutcome", Storage="_dt_users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_company_inoutcome.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_company_inoutcome.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_projects_li_company_inoutcome", Storage="_li_projects", ThisKey="project_id", OtherKey="id", IsForeignKey=true)]
		public li_projects li_projects
		{
			get
			{
				return this._li_projects.Entity;
			}
			set
			{
				li_projects previousValue = this._li_projects.Entity;
				if (((previousValue != value) 
							|| (this._li_projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_projects.Entity = null;
						previousValue.li_company_inoutcome.Remove(this);
					}
					this._li_projects.Entity = value;
					if ((value != null))
					{
						value.li_company_inoutcome.Add(this);
						this._project_id = value.id;
					}
					else
					{
						this._project_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_projects");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_loaner_companies")]
	public partial class li_loaner_companies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.DateTime _setup_time;
		
		private string _registered_capital;
		
		private string _business_scope;
		
		private string _business_belong;
		
		private string _business_status;
		
		private string _business_lawsuit;
		
		private string _remark;
		
		private string _address;
		
		private string _manager;
		
		private string _business_license_no;
		
		private string _organization_no;
		
		private string _shareholder;
		
		private EntitySet<li_albums> _li_albums;
		
		private EntitySet<li_loaners> _li_loaners;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onsetup_timeChanging(System.DateTime value);
    partial void Onsetup_timeChanged();
    partial void Onregistered_capitalChanging(string value);
    partial void Onregistered_capitalChanged();
    partial void Onbusiness_scopeChanging(string value);
    partial void Onbusiness_scopeChanged();
    partial void Onbusiness_belongChanging(string value);
    partial void Onbusiness_belongChanged();
    partial void Onbusiness_statusChanging(string value);
    partial void Onbusiness_statusChanged();
    partial void Onbusiness_lawsuitChanging(string value);
    partial void Onbusiness_lawsuitChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnmanagerChanging(string value);
    partial void OnmanagerChanged();
    partial void Onbusiness_license_noChanging(string value);
    partial void Onbusiness_license_noChanged();
    partial void Onorganization_noChanging(string value);
    partial void Onorganization_noChanged();
    partial void OnshareholderChanging(string value);
    partial void OnshareholderChanged();
    #endregion
		
		public li_loaner_companies()
		{
			this._li_albums = new EntitySet<li_albums>(new Action<li_albums>(this.attach_li_albums), new Action<li_albums>(this.detach_li_albums));
			this._li_loaners = new EntitySet<li_loaners>(new Action<li_loaners>(this.attach_li_loaners), new Action<li_loaners>(this.detach_li_loaners));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_setup_time", DbType="Date NOT NULL")]
		public System.DateTime setup_time
		{
			get
			{
				return this._setup_time;
			}
			set
			{
				if ((this._setup_time != value))
				{
					this.Onsetup_timeChanging(value);
					this.SendPropertyChanging();
					this._setup_time = value;
					this.SendPropertyChanged("setup_time");
					this.Onsetup_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registered_capital", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string registered_capital
		{
			get
			{
				return this._registered_capital;
			}
			set
			{
				if ((this._registered_capital != value))
				{
					this.Onregistered_capitalChanging(value);
					this.SendPropertyChanging();
					this._registered_capital = value;
					this.SendPropertyChanged("registered_capital");
					this.Onregistered_capitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_business_scope", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string business_scope
		{
			get
			{
				return this._business_scope;
			}
			set
			{
				if ((this._business_scope != value))
				{
					this.Onbusiness_scopeChanging(value);
					this.SendPropertyChanging();
					this._business_scope = value;
					this.SendPropertyChanged("business_scope");
					this.Onbusiness_scopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_business_belong", DbType="NVarChar(10)")]
		public string business_belong
		{
			get
			{
				return this._business_belong;
			}
			set
			{
				if ((this._business_belong != value))
				{
					this.Onbusiness_belongChanging(value);
					this.SendPropertyChanging();
					this._business_belong = value;
					this.SendPropertyChanged("business_belong");
					this.Onbusiness_belongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_business_status", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string business_status
		{
			get
			{
				return this._business_status;
			}
			set
			{
				if ((this._business_status != value))
				{
					this.Onbusiness_statusChanging(value);
					this.SendPropertyChanging();
					this._business_status = value;
					this.SendPropertyChanged("business_status");
					this.Onbusiness_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_business_lawsuit", DbType="NVarChar(20)")]
		public string business_lawsuit
		{
			get
			{
				return this._business_lawsuit;
			}
			set
			{
				if ((this._business_lawsuit != value))
				{
					this.Onbusiness_lawsuitChanging(value);
					this.SendPropertyChanging();
					this._business_lawsuit = value;
					this.SendPropertyChanged("business_lawsuit");
					this.Onbusiness_lawsuitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(50)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(30)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manager", DbType="NVarChar(10)")]
		public string manager
		{
			get
			{
				return this._manager;
			}
			set
			{
				if ((this._manager != value))
				{
					this.OnmanagerChanging(value);
					this.SendPropertyChanging();
					this._manager = value;
					this.SendPropertyChanged("manager");
					this.OnmanagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_business_license_no", DbType="VarChar(20)")]
		public string business_license_no
		{
			get
			{
				return this._business_license_no;
			}
			set
			{
				if ((this._business_license_no != value))
				{
					this.Onbusiness_license_noChanging(value);
					this.SendPropertyChanging();
					this._business_license_no = value;
					this.SendPropertyChanged("business_license_no");
					this.Onbusiness_license_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organization_no", DbType="VarChar(20)")]
		public string organization_no
		{
			get
			{
				return this._organization_no;
			}
			set
			{
				if ((this._organization_no != value))
				{
					this.Onorganization_noChanging(value);
					this.SendPropertyChanging();
					this._organization_no = value;
					this.SendPropertyChanged("organization_no");
					this.Onorganization_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shareholder", DbType="NVarChar(200)")]
		public string shareholder
		{
			get
			{
				return this._shareholder;
			}
			set
			{
				if ((this._shareholder != value))
				{
					this.OnshareholderChanging(value);
					this.SendPropertyChanging();
					this._shareholder = value;
					this.SendPropertyChanged("shareholder");
					this.OnshareholderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_loaner_companies_li_albums", Storage="_li_albums", ThisKey="id", OtherKey="company")]
		public EntitySet<li_albums> li_albums
		{
			get
			{
				return this._li_albums;
			}
			set
			{
				this._li_albums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_loaner_companies_li_loaners", Storage="_li_loaners", ThisKey="id", OtherKey="company_id")]
		public EntitySet<li_loaners> li_loaners
		{
			get
			{
				return this._li_loaners;
			}
			set
			{
				this._li_loaners.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_albums(li_albums entity)
		{
			this.SendPropertyChanging();
			entity.li_loaner_companies = this;
		}
		
		private void detach_li_albums(li_albums entity)
		{
			this.SendPropertyChanging();
			entity.li_loaner_companies = null;
		}
		
		private void attach_li_loaners(li_loaners entity)
		{
			this.SendPropertyChanging();
			entity.li_loaner_companies = this;
		}
		
		private void detach_li_loaners(li_loaners entity)
		{
			this.SendPropertyChanging();
			entity.li_loaner_companies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_repayment_tasks")]
	public partial class li_repayment_tasks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _project;
		
		private short _term;
		
		private decimal _repay_interest;
		
		private decimal _repay_principal;
		
		private System.DateTime _should_repay_time;
		
		private System.Nullable<System.DateTime> _repay_at;
		
		private byte _status;
		
		private System.Nullable<decimal> _prepay;
		
		private System.Nullable<decimal> _cost;
		
		private System.Nullable<int> _only_repay_to;
		
		private EntityRef<dt_users> _dt_users;
		
		private EntityRef<li_projects> _li_projects;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnprojectChanging(int value);
    partial void OnprojectChanged();
    partial void OntermChanging(short value);
    partial void OntermChanged();
    partial void Onrepay_interestChanging(decimal value);
    partial void Onrepay_interestChanged();
    partial void Onrepay_principalChanging(decimal value);
    partial void Onrepay_principalChanged();
    partial void Onshould_repay_timeChanging(System.DateTime value);
    partial void Onshould_repay_timeChanged();
    partial void Onrepay_atChanging(System.Nullable<System.DateTime> value);
    partial void Onrepay_atChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnprepayChanging(System.Nullable<decimal> value);
    partial void OnprepayChanged();
    partial void OncostChanging(System.Nullable<decimal> value);
    partial void OncostChanged();
    partial void Ononly_repay_toChanging(System.Nullable<int> value);
    partial void Ononly_repay_toChanged();
    #endregion
		
		public li_repayment_tasks()
		{
			this._dt_users = default(EntityRef<dt_users>);
			this._li_projects = default(EntityRef<li_projects>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project", DbType="Int NOT NULL")]
		public int project
		{
			get
			{
				return this._project;
			}
			set
			{
				if ((this._project != value))
				{
					if (this._li_projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectChanging(value);
					this.SendPropertyChanging();
					this._project = value;
					this.SendPropertyChanged("project");
					this.OnprojectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_term", DbType="SmallInt NOT NULL")]
		public short term
		{
			get
			{
				return this._term;
			}
			set
			{
				if ((this._term != value))
				{
					this.OntermChanging(value);
					this.SendPropertyChanging();
					this._term = value;
					this.SendPropertyChanged("term");
					this.OntermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repay_interest", DbType="Decimal(9,2) NOT NULL")]
		public decimal repay_interest
		{
			get
			{
				return this._repay_interest;
			}
			set
			{
				if ((this._repay_interest != value))
				{
					this.Onrepay_interestChanging(value);
					this.SendPropertyChanging();
					this._repay_interest = value;
					this.SendPropertyChanged("repay_interest");
					this.Onrepay_interestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repay_principal", DbType="Decimal(19,2) NOT NULL")]
		public decimal repay_principal
		{
			get
			{
				return this._repay_principal;
			}
			set
			{
				if ((this._repay_principal != value))
				{
					this.Onrepay_principalChanging(value);
					this.SendPropertyChanging();
					this._repay_principal = value;
					this.SendPropertyChanged("repay_principal");
					this.Onrepay_principalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_should_repay_time", DbType="DateTime NOT NULL")]
		public System.DateTime should_repay_time
		{
			get
			{
				return this._should_repay_time;
			}
			set
			{
				if ((this._should_repay_time != value))
				{
					this.Onshould_repay_timeChanging(value);
					this.SendPropertyChanging();
					this._should_repay_time = value;
					this.SendPropertyChanged("should_repay_time");
					this.Onshould_repay_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repay_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> repay_at
		{
			get
			{
				return this._repay_at;
			}
			set
			{
				if ((this._repay_at != value))
				{
					this.Onrepay_atChanging(value);
					this.SendPropertyChanging();
					this._repay_at = value;
					this.SendPropertyChanged("repay_at");
					this.Onrepay_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prepay", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> prepay
		{
			get
			{
				return this._prepay;
			}
			set
			{
				if ((this._prepay != value))
				{
					this.OnprepayChanging(value);
					this.SendPropertyChanging();
					this._prepay = value;
					this.SendPropertyChanged("prepay");
					this.OnprepayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_only_repay_to", DbType="Int")]
		public System.Nullable<int> only_repay_to
		{
			get
			{
				return this._only_repay_to;
			}
			set
			{
				if ((this._only_repay_to != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ononly_repay_toChanging(value);
					this.SendPropertyChanging();
					this._only_repay_to = value;
					this.SendPropertyChanged("only_repay_to");
					this.Ononly_repay_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_repayment_tasks", Storage="_dt_users", ThisKey="only_repay_to", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_repayment_tasks.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_repayment_tasks.Add(this);
						this._only_repay_to = value.id;
					}
					else
					{
						this._only_repay_to = default(Nullable<int>);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_projects_li_repayment_tasks", Storage="_li_projects", ThisKey="project", OtherKey="id", IsForeignKey=true)]
		public li_projects li_projects
		{
			get
			{
				return this._li_projects.Entity;
			}
			set
			{
				li_projects previousValue = this._li_projects.Entity;
				if (((previousValue != value) 
							|| (this._li_projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_projects.Entity = null;
						previousValue.li_repayment_tasks.Remove(this);
					}
					this._li_projects.Entity = value;
					if ((value != null))
					{
						value.li_repayment_tasks.Add(this);
						this._project = value.id;
					}
					else
					{
						this._project = default(int);
					}
					this.SendPropertyChanged("li_projects");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_manager_messages")]
	public partial class li_manager_messages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _source;
		
		private int _receiver;
		
		private string _title;
		
		private string _body;
		
		private System.DateTime _creationTime;
		
		private bool _isRead;
		
		private EntityRef<dt_manager> _dt_manager;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsourceChanging(int value);
    partial void OnsourceChanged();
    partial void OnreceiverChanging(int value);
    partial void OnreceiverChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OncreationTimeChanging(System.DateTime value);
    partial void OncreationTimeChanged();
    partial void OnisReadChanging(bool value);
    partial void OnisReadChanged();
    #endregion
		
		public li_manager_messages()
		{
			this._dt_manager = default(EntityRef<dt_manager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_source", DbType="Int NOT NULL")]
		public int source
		{
			get
			{
				return this._source;
			}
			set
			{
				if ((this._source != value))
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiver", DbType="Int NOT NULL")]
		public int receiver
		{
			get
			{
				return this._receiver;
			}
			set
			{
				if ((this._receiver != value))
				{
					if (this._dt_manager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreceiverChanging(value);
					this.SendPropertyChanging();
					this._receiver = value;
					this.SendPropertyChanged("receiver");
					this.OnreceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creationTime", DbType="DateTime NOT NULL")]
		public System.DateTime creationTime
		{
			get
			{
				return this._creationTime;
			}
			set
			{
				if ((this._creationTime != value))
				{
					this.OncreationTimeChanging(value);
					this.SendPropertyChanging();
					this._creationTime = value;
					this.SendPropertyChanged("creationTime");
					this.OncreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRead", DbType="Bit NOT NULL")]
		public bool isRead
		{
			get
			{
				return this._isRead;
			}
			set
			{
				if ((this._isRead != value))
				{
					this.OnisReadChanging(value);
					this.SendPropertyChanging();
					this._isRead = value;
					this.SendPropertyChanged("isRead");
					this.OnisReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_manager_li_manager_messages", Storage="_dt_manager", ThisKey="receiver", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dt_manager dt_manager
		{
			get
			{
				return this._dt_manager.Entity;
			}
			set
			{
				dt_manager previousValue = this._dt_manager.Entity;
				if (((previousValue != value) 
							|| (this._dt_manager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_manager.Entity = null;
						previousValue.li_manager_messages.Remove(this);
					}
					this._dt_manager.Entity = value;
					if ((value != null))
					{
						value.li_manager_messages.Add(this);
						this._receiver = value.id;
					}
					else
					{
						this._receiver = default(int);
					}
					this.SendPropertyChanged("dt_manager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_manager_notification_settings")]
	public partial class li_manager_notification_settings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _manager_id;
		
		private int _source;
		
		private EntityRef<dt_manager> _dt_manager;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmanager_idChanging(int value);
    partial void Onmanager_idChanged();
    partial void OnsourceChanging(int value);
    partial void OnsourceChanged();
    #endregion
		
		public li_manager_notification_settings()
		{
			this._dt_manager = default(EntityRef<dt_manager>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manager_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int manager_id
		{
			get
			{
				return this._manager_id;
			}
			set
			{
				if ((this._manager_id != value))
				{
					if (this._dt_manager.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmanager_idChanging(value);
					this.SendPropertyChanging();
					this._manager_id = value;
					this.SendPropertyChanged("manager_id");
					this.Onmanager_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_source", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int source
		{
			get
			{
				return this._source;
			}
			set
			{
				if ((this._source != value))
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_manager_li_manager_notification_settings", Storage="_dt_manager", ThisKey="manager_id", OtherKey="id", IsForeignKey=true)]
		public dt_manager dt_manager
		{
			get
			{
				return this._dt_manager.Entity;
			}
			set
			{
				dt_manager previousValue = this._dt_manager.Entity;
				if (((previousValue != value) 
							|| (this._dt_manager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_manager.Entity = null;
						previousValue.li_manager_notification_settings.Remove(this);
					}
					this._dt_manager.Entity = value;
					if ((value != null))
					{
						value.li_manager_notification_settings.Add(this);
						this._manager_id = value.id;
					}
					else
					{
						this._manager_id = default(int);
					}
					this.SendPropertyChanged("dt_manager");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_project_transactions")]
	public partial class li_project_transactions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _investor;
		
		private int _project;
		
		private byte _type;
		
		private decimal _principal;
		
		private System.Nullable<decimal> _interest;
		
		private byte _status;
		
		private System.DateTime _create_time;
		
		private string _agree_no;
		
		private string _remark;
		
		private EntitySet<li_invitations> _li_invitations;
		
		private EntitySet<li_wallet_histories> _li_wallet_histories;
		
		private EntityRef<dt_users> _dt_users;
		
		private EntityRef<li_projects> _li_projects;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OninvestorChanging(int value);
    partial void OninvestorChanged();
    partial void OnprojectChanging(int value);
    partial void OnprojectChanged();
    partial void OntypeChanging(byte value);
    partial void OntypeChanged();
    partial void OnprincipalChanging(decimal value);
    partial void OnprincipalChanged();
    partial void OninterestChanging(System.Nullable<decimal> value);
    partial void OninterestChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void Oncreate_timeChanging(System.DateTime value);
    partial void Oncreate_timeChanged();
    partial void Onagree_noChanging(string value);
    partial void Onagree_noChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public li_project_transactions()
		{
			this._li_invitations = new EntitySet<li_invitations>(new Action<li_invitations>(this.attach_li_invitations), new Action<li_invitations>(this.detach_li_invitations));
			this._li_wallet_histories = new EntitySet<li_wallet_histories>(new Action<li_wallet_histories>(this.attach_li_wallet_histories), new Action<li_wallet_histories>(this.detach_li_wallet_histories));
			this._dt_users = default(EntityRef<dt_users>);
			this._li_projects = default(EntityRef<li_projects>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investor", DbType="Int NOT NULL")]
		public int investor
		{
			get
			{
				return this._investor;
			}
			set
			{
				if ((this._investor != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OninvestorChanging(value);
					this.SendPropertyChanging();
					this._investor = value;
					this.SendPropertyChanged("investor");
					this.OninvestorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project", DbType="Int NOT NULL")]
		public int project
		{
			get
			{
				return this._project;
			}
			set
			{
				if ((this._project != value))
				{
					if (this._li_projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectChanging(value);
					this.SendPropertyChanging();
					this._project = value;
					this.SendPropertyChanged("project");
					this.OnprojectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="TinyInt NOT NULL")]
		public byte type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_principal", DbType="Decimal(19,2) NOT NULL")]
		public decimal principal
		{
			get
			{
				return this._principal;
			}
			set
			{
				if ((this._principal != value))
				{
					this.OnprincipalChanging(value);
					this.SendPropertyChanging();
					this._principal = value;
					this.SendPropertyChanged("principal");
					this.OnprincipalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interest", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> interest
		{
			get
			{
				return this._interest;
			}
			set
			{
				if ((this._interest != value))
				{
					this.OninterestChanging(value);
					this.SendPropertyChanging();
					this._interest = value;
					this.SendPropertyChanged("interest");
					this.OninterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_time", DbType="DateTime NOT NULL")]
		public System.DateTime create_time
		{
			get
			{
				return this._create_time;
			}
			set
			{
				if ((this._create_time != value))
				{
					this.Oncreate_timeChanging(value);
					this.SendPropertyChanging();
					this._create_time = value;
					this.SendPropertyChanged("create_time");
					this.Oncreate_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agree_no", DbType="VarChar(50)")]
		public string agree_no
		{
			get
			{
				return this._agree_no;
			}
			set
			{
				if ((this._agree_no != value))
				{
					this.Onagree_noChanging(value);
					this.SendPropertyChanging();
					this._agree_no = value;
					this.SendPropertyChanged("agree_no");
					this.Onagree_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(50)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_project_transactions_li_invitations", Storage="_li_invitations", ThisKey="id", OtherKey="first_invest_transaction")]
		public EntitySet<li_invitations> li_invitations
		{
			get
			{
				return this._li_invitations;
			}
			set
			{
				this._li_invitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_project_transactions_li_wallet_histories", Storage="_li_wallet_histories", ThisKey="id", OtherKey="project_transaction")]
		public EntitySet<li_wallet_histories> li_wallet_histories
		{
			get
			{
				return this._li_wallet_histories;
			}
			set
			{
				this._li_wallet_histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_project_transactions", Storage="_dt_users", ThisKey="investor", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_project_transactions.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_project_transactions.Add(this);
						this._investor = value.id;
					}
					else
					{
						this._investor = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_projects_li_project_transactions", Storage="_li_projects", ThisKey="project", OtherKey="id", IsForeignKey=true)]
		public li_projects li_projects
		{
			get
			{
				return this._li_projects.Entity;
			}
			set
			{
				li_projects previousValue = this._li_projects.Entity;
				if (((previousValue != value) 
							|| (this._li_projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_projects.Entity = null;
						previousValue.li_project_transactions.Remove(this);
					}
					this._li_projects.Entity = value;
					if ((value != null))
					{
						value.li_project_transactions.Add(this);
						this._project = value.id;
					}
					else
					{
						this._project = default(int);
					}
					this.SendPropertyChanged("li_projects");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_invitations(li_invitations entity)
		{
			this.SendPropertyChanging();
			entity.li_project_transactions = this;
		}
		
		private void detach_li_invitations(li_invitations entity)
		{
			this.SendPropertyChanging();
			entity.li_project_transactions = null;
		}
		
		private void attach_li_wallet_histories(li_wallet_histories entity)
		{
			this.SendPropertyChanging();
			entity.li_project_transactions = this;
		}
		
		private void detach_li_wallet_histories(li_wallet_histories entity)
		{
			this.SendPropertyChanging();
			entity.li_project_transactions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_loaners")]
	public partial class li_loaners : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private string _job;
		
		private string _working_at;
		
		private System.Nullable<int> _company_id;
		
		private string _educational_background;
		
		private byte _marital_status;
		
		private string _income;
		
		private short _age;
		
		private System.DateTime _last_update_time;
		
		private string _native_place;
		
		private string _working_company;
		
		private string _lawsuit;
		
		private int _quota;
		
		private int _status;
		
		private EntitySet<li_mortgages> _li_mortgages;
		
		private EntitySet<li_albums> _li_albums;
		
		private EntitySet<li_risks> _li_risks;
		
		private EntityRef<li_loaner_companies> _li_loaner_companies;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnjobChanging(string value);
    partial void OnjobChanged();
    partial void Onworking_atChanging(string value);
    partial void Onworking_atChanged();
    partial void Oncompany_idChanging(System.Nullable<int> value);
    partial void Oncompany_idChanged();
    partial void Oneducational_backgroundChanging(string value);
    partial void Oneducational_backgroundChanged();
    partial void Onmarital_statusChanging(byte value);
    partial void Onmarital_statusChanged();
    partial void OnincomeChanging(string value);
    partial void OnincomeChanged();
    partial void OnageChanging(short value);
    partial void OnageChanged();
    partial void Onlast_update_timeChanging(System.DateTime value);
    partial void Onlast_update_timeChanged();
    partial void Onnative_placeChanging(string value);
    partial void Onnative_placeChanged();
    partial void Onworking_companyChanging(string value);
    partial void Onworking_companyChanged();
    partial void OnlawsuitChanging(string value);
    partial void OnlawsuitChanged();
    partial void OnquotaChanging(int value);
    partial void OnquotaChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    #endregion
		
		public li_loaners()
		{
			this._li_mortgages = new EntitySet<li_mortgages>(new Action<li_mortgages>(this.attach_li_mortgages), new Action<li_mortgages>(this.detach_li_mortgages));
			this._li_albums = new EntitySet<li_albums>(new Action<li_albums>(this.attach_li_albums), new Action<li_albums>(this.detach_li_albums));
			this._li_risks = new EntitySet<li_risks>(new Action<li_risks>(this.attach_li_risks), new Action<li_risks>(this.detach_li_risks));
			this._li_loaner_companies = default(EntityRef<li_loaner_companies>);
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="NVarChar(10)")]
		public string job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_working_at", DbType="NVarChar(30)")]
		public string working_at
		{
			get
			{
				return this._working_at;
			}
			set
			{
				if ((this._working_at != value))
				{
					this.Onworking_atChanging(value);
					this.SendPropertyChanging();
					this._working_at = value;
					this.SendPropertyChanged("working_at");
					this.Onworking_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company_id", DbType="Int")]
		public System.Nullable<int> company_id
		{
			get
			{
				return this._company_id;
			}
			set
			{
				if ((this._company_id != value))
				{
					if (this._li_loaner_companies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncompany_idChanging(value);
					this.SendPropertyChanging();
					this._company_id = value;
					this.SendPropertyChanged("company_id");
					this.Oncompany_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_educational_background", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string educational_background
		{
			get
			{
				return this._educational_background;
			}
			set
			{
				if ((this._educational_background != value))
				{
					this.Oneducational_backgroundChanging(value);
					this.SendPropertyChanging();
					this._educational_background = value;
					this.SendPropertyChanged("educational_background");
					this.Oneducational_backgroundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marital_status", DbType="TinyInt NOT NULL")]
		public byte marital_status
		{
			get
			{
				return this._marital_status;
			}
			set
			{
				if ((this._marital_status != value))
				{
					this.Onmarital_statusChanging(value);
					this.SendPropertyChanging();
					this._marital_status = value;
					this.SendPropertyChanged("marital_status");
					this.Onmarital_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_income", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string income
		{
			get
			{
				return this._income;
			}
			set
			{
				if ((this._income != value))
				{
					this.OnincomeChanging(value);
					this.SendPropertyChanging();
					this._income = value;
					this.SendPropertyChanged("income");
					this.OnincomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="SmallInt NOT NULL")]
		public short age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update_time", DbType="DateTime NOT NULL")]
		public System.DateTime last_update_time
		{
			get
			{
				return this._last_update_time;
			}
			set
			{
				if ((this._last_update_time != value))
				{
					this.Onlast_update_timeChanging(value);
					this.SendPropertyChanging();
					this._last_update_time = value;
					this.SendPropertyChanged("last_update_time");
					this.Onlast_update_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_native_place", DbType="NVarChar(10)")]
		public string native_place
		{
			get
			{
				return this._native_place;
			}
			set
			{
				if ((this._native_place != value))
				{
					this.Onnative_placeChanging(value);
					this.SendPropertyChanging();
					this._native_place = value;
					this.SendPropertyChanged("native_place");
					this.Onnative_placeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_working_company", DbType="NVarChar(30)")]
		public string working_company
		{
			get
			{
				return this._working_company;
			}
			set
			{
				if ((this._working_company != value))
				{
					this.Onworking_companyChanging(value);
					this.SendPropertyChanging();
					this._working_company = value;
					this.SendPropertyChanged("working_company");
					this.Onworking_companyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lawsuit", DbType="NVarChar(20)")]
		public string lawsuit
		{
			get
			{
				return this._lawsuit;
			}
			set
			{
				if ((this._lawsuit != value))
				{
					this.OnlawsuitChanging(value);
					this.SendPropertyChanging();
					this._lawsuit = value;
					this.SendPropertyChanged("lawsuit");
					this.OnlawsuitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quota", DbType="Int NOT NULL")]
		public int quota
		{
			get
			{
				return this._quota;
			}
			set
			{
				if ((this._quota != value))
				{
					this.OnquotaChanging(value);
					this.SendPropertyChanging();
					this._quota = value;
					this.SendPropertyChanged("quota");
					this.OnquotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_loaners_li_mortgages", Storage="_li_mortgages", ThisKey="id", OtherKey="owner")]
		public EntitySet<li_mortgages> li_mortgages
		{
			get
			{
				return this._li_mortgages;
			}
			set
			{
				this._li_mortgages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_loaners_li_albums", Storage="_li_albums", ThisKey="id", OtherKey="loaner")]
		public EntitySet<li_albums> li_albums
		{
			get
			{
				return this._li_albums;
			}
			set
			{
				this._li_albums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_loaners_li_risks", Storage="_li_risks", ThisKey="id", OtherKey="loaner")]
		public EntitySet<li_risks> li_risks
		{
			get
			{
				return this._li_risks;
			}
			set
			{
				this._li_risks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_loaner_companies_li_loaners", Storage="_li_loaner_companies", ThisKey="company_id", OtherKey="id", IsForeignKey=true)]
		public li_loaner_companies li_loaner_companies
		{
			get
			{
				return this._li_loaner_companies.Entity;
			}
			set
			{
				li_loaner_companies previousValue = this._li_loaner_companies.Entity;
				if (((previousValue != value) 
							|| (this._li_loaner_companies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_loaner_companies.Entity = null;
						previousValue.li_loaners.Remove(this);
					}
					this._li_loaner_companies.Entity = value;
					if ((value != null))
					{
						value.li_loaners.Add(this);
						this._company_id = value.id;
					}
					else
					{
						this._company_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_loaner_companies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_loaners", Storage="_dt_users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_loaners.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_loaners.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_mortgages(li_mortgages entity)
		{
			this.SendPropertyChanging();
			entity.li_loaners = this;
		}
		
		private void detach_li_mortgages(li_mortgages entity)
		{
			this.SendPropertyChanging();
			entity.li_loaners = null;
		}
		
		private void attach_li_albums(li_albums entity)
		{
			this.SendPropertyChanging();
			entity.li_loaners = this;
		}
		
		private void detach_li_albums(li_albums entity)
		{
			this.SendPropertyChanging();
			entity.li_loaners = null;
		}
		
		private void attach_li_risks(li_risks entity)
		{
			this.SendPropertyChanging();
			entity.li_loaners = this;
		}
		
		private void detach_li_risks(li_risks entity)
		{
			this.SendPropertyChanging();
			entity.li_loaners = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_risks")]
	public partial class li_risks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _loaner;
		
		private System.Nullable<byte> _credit_rating;
		
		private string _loan_usage;
		
		private string _source_of_repayment;
		
		private System.DateTime _last_update_time;
		
		private System.Nullable<int> _creditor;
		
		private string _creditor_content;
		
		private string _loaner_content;
		
		private string _risk_content;
		
		private string _description;
		
		private System.Nullable<int> _guarantor_id;
		
		private EntitySet<li_risk_mortgage> _li_risk_mortgage;
		
		private EntitySet<li_albums> _li_albums;
		
		private EntitySet<li_projects> _li_projects;
		
		private EntityRef<li_guarantors> _li_guarantors;
		
		private EntityRef<li_creditors> _li_creditors;
		
		private EntityRef<li_loaners> _li_loaners;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnloanerChanging(System.Nullable<int> value);
    partial void OnloanerChanged();
    partial void Oncredit_ratingChanging(System.Nullable<byte> value);
    partial void Oncredit_ratingChanged();
    partial void Onloan_usageChanging(string value);
    partial void Onloan_usageChanged();
    partial void Onsource_of_repaymentChanging(string value);
    partial void Onsource_of_repaymentChanged();
    partial void Onlast_update_timeChanging(System.DateTime value);
    partial void Onlast_update_timeChanged();
    partial void OncreditorChanging(System.Nullable<int> value);
    partial void OncreditorChanged();
    partial void Oncreditor_contentChanging(string value);
    partial void Oncreditor_contentChanged();
    partial void Onloaner_contentChanging(string value);
    partial void Onloaner_contentChanged();
    partial void Onrisk_contentChanging(string value);
    partial void Onrisk_contentChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onguarantor_idChanging(System.Nullable<int> value);
    partial void Onguarantor_idChanged();
    #endregion
		
		public li_risks()
		{
			this._li_risk_mortgage = new EntitySet<li_risk_mortgage>(new Action<li_risk_mortgage>(this.attach_li_risk_mortgage), new Action<li_risk_mortgage>(this.detach_li_risk_mortgage));
			this._li_albums = new EntitySet<li_albums>(new Action<li_albums>(this.attach_li_albums), new Action<li_albums>(this.detach_li_albums));
			this._li_projects = new EntitySet<li_projects>(new Action<li_projects>(this.attach_li_projects), new Action<li_projects>(this.detach_li_projects));
			this._li_guarantors = default(EntityRef<li_guarantors>);
			this._li_creditors = default(EntityRef<li_creditors>);
			this._li_loaners = default(EntityRef<li_loaners>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaner", DbType="Int")]
		public System.Nullable<int> loaner
		{
			get
			{
				return this._loaner;
			}
			set
			{
				if ((this._loaner != value))
				{
					if (this._li_loaners.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnloanerChanging(value);
					this.SendPropertyChanging();
					this._loaner = value;
					this.SendPropertyChanged("loaner");
					this.OnloanerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit_rating", DbType="TinyInt")]
		public System.Nullable<byte> credit_rating
		{
			get
			{
				return this._credit_rating;
			}
			set
			{
				if ((this._credit_rating != value))
				{
					this.Oncredit_ratingChanging(value);
					this.SendPropertyChanging();
					this._credit_rating = value;
					this.SendPropertyChanged("credit_rating");
					this.Oncredit_ratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loan_usage", DbType="NVarChar(50)")]
		public string loan_usage
		{
			get
			{
				return this._loan_usage;
			}
			set
			{
				if ((this._loan_usage != value))
				{
					this.Onloan_usageChanging(value);
					this.SendPropertyChanging();
					this._loan_usage = value;
					this.SendPropertyChanged("loan_usage");
					this.Onloan_usageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_source_of_repayment", DbType="NVarChar(50)")]
		public string source_of_repayment
		{
			get
			{
				return this._source_of_repayment;
			}
			set
			{
				if ((this._source_of_repayment != value))
				{
					this.Onsource_of_repaymentChanging(value);
					this.SendPropertyChanging();
					this._source_of_repayment = value;
					this.SendPropertyChanged("source_of_repayment");
					this.Onsource_of_repaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update_time", DbType="DateTime NOT NULL")]
		public System.DateTime last_update_time
		{
			get
			{
				return this._last_update_time;
			}
			set
			{
				if ((this._last_update_time != value))
				{
					this.Onlast_update_timeChanging(value);
					this.SendPropertyChanging();
					this._last_update_time = value;
					this.SendPropertyChanged("last_update_time");
					this.Onlast_update_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creditor", DbType="Int")]
		public System.Nullable<int> creditor
		{
			get
			{
				return this._creditor;
			}
			set
			{
				if ((this._creditor != value))
				{
					if (this._li_creditors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncreditorChanging(value);
					this.SendPropertyChanging();
					this._creditor = value;
					this.SendPropertyChanged("creditor");
					this.OncreditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creditor_content", DbType="NVarChar(300)")]
		public string creditor_content
		{
			get
			{
				return this._creditor_content;
			}
			set
			{
				if ((this._creditor_content != value))
				{
					this.Oncreditor_contentChanging(value);
					this.SendPropertyChanging();
					this._creditor_content = value;
					this.SendPropertyChanged("creditor_content");
					this.Oncreditor_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaner_content", DbType="NVarChar(500)")]
		public string loaner_content
		{
			get
			{
				return this._loaner_content;
			}
			set
			{
				if ((this._loaner_content != value))
				{
					this.Onloaner_contentChanging(value);
					this.SendPropertyChanging();
					this._loaner_content = value;
					this.SendPropertyChanged("loaner_content");
					this.Onloaner_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_risk_content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string risk_content
		{
			get
			{
				return this._risk_content;
			}
			set
			{
				if ((this._risk_content != value))
				{
					this.Onrisk_contentChanging(value);
					this.SendPropertyChanging();
					this._risk_content = value;
					this.SendPropertyChanged("risk_content");
					this.Onrisk_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guarantor_id", DbType="Int")]
		public System.Nullable<int> guarantor_id
		{
			get
			{
				return this._guarantor_id;
			}
			set
			{
				if ((this._guarantor_id != value))
				{
					if (this._li_guarantors.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onguarantor_idChanging(value);
					this.SendPropertyChanging();
					this._guarantor_id = value;
					this.SendPropertyChanged("guarantor_id");
					this.Onguarantor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_risks_li_risk_mortgage", Storage="_li_risk_mortgage", ThisKey="id", OtherKey="risk")]
		public EntitySet<li_risk_mortgage> li_risk_mortgage
		{
			get
			{
				return this._li_risk_mortgage;
			}
			set
			{
				this._li_risk_mortgage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_risks_li_albums", Storage="_li_albums", ThisKey="id", OtherKey="risk")]
		public EntitySet<li_albums> li_albums
		{
			get
			{
				return this._li_albums;
			}
			set
			{
				this._li_albums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_risks_li_projects", Storage="_li_projects", ThisKey="id", OtherKey="risk_id")]
		public EntitySet<li_projects> li_projects
		{
			get
			{
				return this._li_projects;
			}
			set
			{
				this._li_projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_guarantors_li_risks", Storage="_li_guarantors", ThisKey="guarantor_id", OtherKey="id", IsForeignKey=true)]
		public li_guarantors li_guarantors
		{
			get
			{
				return this._li_guarantors.Entity;
			}
			set
			{
				li_guarantors previousValue = this._li_guarantors.Entity;
				if (((previousValue != value) 
							|| (this._li_guarantors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_guarantors.Entity = null;
						previousValue.li_risks.Remove(this);
					}
					this._li_guarantors.Entity = value;
					if ((value != null))
					{
						value.li_risks.Add(this);
						this._guarantor_id = value.id;
					}
					else
					{
						this._guarantor_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_guarantors");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_creditors_li_risks", Storage="_li_creditors", ThisKey="creditor", OtherKey="user_id", IsForeignKey=true)]
		public li_creditors li_creditors
		{
			get
			{
				return this._li_creditors.Entity;
			}
			set
			{
				li_creditors previousValue = this._li_creditors.Entity;
				if (((previousValue != value) 
							|| (this._li_creditors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_creditors.Entity = null;
						previousValue.li_risks.Remove(this);
					}
					this._li_creditors.Entity = value;
					if ((value != null))
					{
						value.li_risks.Add(this);
						this._creditor = value.user_id;
					}
					else
					{
						this._creditor = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_creditors");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_loaners_li_risks", Storage="_li_loaners", ThisKey="loaner", OtherKey="id", IsForeignKey=true)]
		public li_loaners li_loaners
		{
			get
			{
				return this._li_loaners.Entity;
			}
			set
			{
				li_loaners previousValue = this._li_loaners.Entity;
				if (((previousValue != value) 
							|| (this._li_loaners.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_loaners.Entity = null;
						previousValue.li_risks.Remove(this);
					}
					this._li_loaners.Entity = value;
					if ((value != null))
					{
						value.li_risks.Add(this);
						this._loaner = value.id;
					}
					else
					{
						this._loaner = default(Nullable<int>);
					}
					this.SendPropertyChanged("li_loaners");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_risk_mortgage(li_risk_mortgage entity)
		{
			this.SendPropertyChanging();
			entity.li_risks = this;
		}
		
		private void detach_li_risk_mortgage(li_risk_mortgage entity)
		{
			this.SendPropertyChanging();
			entity.li_risks = null;
		}
		
		private void attach_li_albums(li_albums entity)
		{
			this.SendPropertyChanging();
			entity.li_risks = this;
		}
		
		private void detach_li_albums(li_albums entity)
		{
			this.SendPropertyChanging();
			entity.li_risks = null;
		}
		
		private void attach_li_projects(li_projects entity)
		{
			this.SendPropertyChanging();
			entity.li_risks = this;
		}
		
		private void detach_li_projects(li_projects entity)
		{
			this.SendPropertyChanging();
			entity.li_risks = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_users")]
	public partial class dt_users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _group_id;
		
		private string _user_name;
		
		private string _password;
		
		private string _salt;
		
		private string _pay_password;
		
		private string _email;
		
		private string _nick_name;
		
		private string _avatar;
		
		private string _sex;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _telphone;
		
		private string _mobile;
		
		private string _qq;
		
		private string _address;
		
		private string _safe_question;
		
		private string _safe_answer;
		
		private System.Nullable<int> _point;
		
		private System.Nullable<int> _exp;
		
		private System.Nullable<byte> _status;
		
		private System.Nullable<System.DateTime> _reg_time;
		
		private string _reg_ip;
		
		private string _real_name;
		
		private string _id_card_number;
		
		private string _area;
		
		private string _openid;
		
		private string _token;
		
		private string _identity_id;
		
		private string _protocolCode;
		
		private string _autoRepay;
		
		private EntitySet<li_activity_transactions> _li_activity_transactions;
		
		private EntitySet<li_bank_accounts> _li_bank_accounts;
		
		private EntitySet<li_bank_transactions> _li_bank_transactions;
		
		private EntityRef<li_invitations> _li_invitations;
		
		private EntitySet<li_invitations> _li_invitations1;
		
		private EntitySet<li_wallet_histories> _li_wallet_histories;
		
		private EntitySet<dt_user_code> _dt_user_code;
		
		private EntityRef<li_user_group_servers> _li_user_group_servers;
		
		private EntityRef<li_wallets> _li_wallets;
		
		private EntitySet<dt_user_login_log> _dt_user_login_log;
		
		private EntitySet<li_albums> _li_albums;
		
		private EntityRef<li_creditors> _li_creditors;
		
		private EntitySet<li_notification_settings> _li_notification_settings;
		
		private EntitySet<dt_user_message> _dt_user_message;
		
		private EntitySet<li_company_inoutcome> _li_company_inoutcome;
		
		private EntitySet<li_repayment_tasks> _li_repayment_tasks;
		
		private EntitySet<li_project_transactions> _li_project_transactions;
		
		private EntitySet<li_loaners> _li_loaners;
		
		private EntitySet<li_pay_request_log> _li_pay_request_log;
		
		private EntitySet<li_pay_response_log> _li_pay_response_log;
		
		private EntityRef<dt_user_groups> _dt_user_groups;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ongroup_idChanging(int value);
    partial void Ongroup_idChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnsaltChanging(string value);
    partial void OnsaltChanged();
    partial void Onpay_passwordChanging(string value);
    partial void Onpay_passwordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onnick_nameChanging(string value);
    partial void Onnick_nameChanged();
    partial void OnavatarChanging(string value);
    partial void OnavatarChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OntelphoneChanging(string value);
    partial void OntelphoneChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnqqChanging(string value);
    partial void OnqqChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onsafe_questionChanging(string value);
    partial void Onsafe_questionChanged();
    partial void Onsafe_answerChanging(string value);
    partial void Onsafe_answerChanged();
    partial void OnpointChanging(System.Nullable<int> value);
    partial void OnpointChanged();
    partial void OnexpChanging(System.Nullable<int> value);
    partial void OnexpChanged();
    partial void OnstatusChanging(System.Nullable<byte> value);
    partial void OnstatusChanged();
    partial void Onreg_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onreg_timeChanged();
    partial void Onreg_ipChanging(string value);
    partial void Onreg_ipChanged();
    partial void Onreal_nameChanging(string value);
    partial void Onreal_nameChanged();
    partial void Onid_card_numberChanging(string value);
    partial void Onid_card_numberChanged();
    partial void OnareaChanging(string value);
    partial void OnareaChanged();
    partial void OnopenidChanging(string value);
    partial void OnopenidChanged();
    partial void OntokenChanging(string value);
    partial void OntokenChanged();
    partial void Onidentity_idChanging(string value);
    partial void Onidentity_idChanged();
    partial void OnprotocolCodeChanging(string value);
    partial void OnprotocolCodeChanged();
    partial void OnautoRepayChanging(string value);
    partial void OnautoRepayChanged();
    #endregion
		
		public dt_users()
		{
			this._li_activity_transactions = new EntitySet<li_activity_transactions>(new Action<li_activity_transactions>(this.attach_li_activity_transactions), new Action<li_activity_transactions>(this.detach_li_activity_transactions));
			this._li_bank_accounts = new EntitySet<li_bank_accounts>(new Action<li_bank_accounts>(this.attach_li_bank_accounts), new Action<li_bank_accounts>(this.detach_li_bank_accounts));
			this._li_bank_transactions = new EntitySet<li_bank_transactions>(new Action<li_bank_transactions>(this.attach_li_bank_transactions), new Action<li_bank_transactions>(this.detach_li_bank_transactions));
			this._li_invitations = default(EntityRef<li_invitations>);
			this._li_invitations1 = new EntitySet<li_invitations>(new Action<li_invitations>(this.attach_li_invitations1), new Action<li_invitations>(this.detach_li_invitations1));
			this._li_wallet_histories = new EntitySet<li_wallet_histories>(new Action<li_wallet_histories>(this.attach_li_wallet_histories), new Action<li_wallet_histories>(this.detach_li_wallet_histories));
			this._dt_user_code = new EntitySet<dt_user_code>(new Action<dt_user_code>(this.attach_dt_user_code), new Action<dt_user_code>(this.detach_dt_user_code));
			this._li_user_group_servers = default(EntityRef<li_user_group_servers>);
			this._li_wallets = default(EntityRef<li_wallets>);
			this._dt_user_login_log = new EntitySet<dt_user_login_log>(new Action<dt_user_login_log>(this.attach_dt_user_login_log), new Action<dt_user_login_log>(this.detach_dt_user_login_log));
			this._li_albums = new EntitySet<li_albums>(new Action<li_albums>(this.attach_li_albums), new Action<li_albums>(this.detach_li_albums));
			this._li_creditors = default(EntityRef<li_creditors>);
			this._li_notification_settings = new EntitySet<li_notification_settings>(new Action<li_notification_settings>(this.attach_li_notification_settings), new Action<li_notification_settings>(this.detach_li_notification_settings));
			this._dt_user_message = new EntitySet<dt_user_message>(new Action<dt_user_message>(this.attach_dt_user_message), new Action<dt_user_message>(this.detach_dt_user_message));
			this._li_company_inoutcome = new EntitySet<li_company_inoutcome>(new Action<li_company_inoutcome>(this.attach_li_company_inoutcome), new Action<li_company_inoutcome>(this.detach_li_company_inoutcome));
			this._li_repayment_tasks = new EntitySet<li_repayment_tasks>(new Action<li_repayment_tasks>(this.attach_li_repayment_tasks), new Action<li_repayment_tasks>(this.detach_li_repayment_tasks));
			this._li_project_transactions = new EntitySet<li_project_transactions>(new Action<li_project_transactions>(this.attach_li_project_transactions), new Action<li_project_transactions>(this.detach_li_project_transactions));
			this._li_loaners = new EntitySet<li_loaners>(new Action<li_loaners>(this.attach_li_loaners), new Action<li_loaners>(this.detach_li_loaners));
			this._li_pay_request_log = new EntitySet<li_pay_request_log>(new Action<li_pay_request_log>(this.attach_li_pay_request_log), new Action<li_pay_request_log>(this.detach_li_pay_request_log));
			this._li_pay_response_log = new EntitySet<li_pay_response_log>(new Action<li_pay_response_log>(this.attach_li_pay_response_log), new Action<li_pay_response_log>(this.detach_li_pay_response_log));
			this._dt_user_groups = default(EntityRef<dt_user_groups>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", DbType="Int NOT NULL")]
		public int group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					if (this._dt_user_groups.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salt", DbType="VarChar(50)")]
		public string salt
		{
			get
			{
				return this._salt;
			}
			set
			{
				if ((this._salt != value))
				{
					this.OnsaltChanging(value);
					this.SendPropertyChanging();
					this._salt = value;
					this.SendPropertyChanged("salt");
					this.OnsaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_password", DbType="VarChar(100)")]
		public string pay_password
		{
			get
			{
				return this._pay_password;
			}
			set
			{
				if ((this._pay_password != value))
				{
					this.Onpay_passwordChanging(value);
					this.SendPropertyChanging();
					this._pay_password = value;
					this.SendPropertyChanged("pay_password");
					this.Onpay_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nick_name", DbType="NVarChar(100)")]
		public string nick_name
		{
			get
			{
				return this._nick_name;
			}
			set
			{
				if ((this._nick_name != value))
				{
					this.Onnick_nameChanging(value);
					this.SendPropertyChanging();
					this._nick_name = value;
					this.SendPropertyChanged("nick_name");
					this.Onnick_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avatar", DbType="NVarChar(255)")]
		public string avatar
		{
			get
			{
				return this._avatar;
			}
			set
			{
				if ((this._avatar != value))
				{
					this.OnavatarChanging(value);
					this.SendPropertyChanging();
					this._avatar = value;
					this.SendPropertyChanged("avatar");
					this.OnavatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="NVarChar(20)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telphone", DbType="NVarChar(50)")]
		public string telphone
		{
			get
			{
				return this._telphone;
			}
			set
			{
				if ((this._telphone != value))
				{
					this.OntelphoneChanging(value);
					this.SendPropertyChanging();
					this._telphone = value;
					this.SendPropertyChanged("telphone");
					this.OntelphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="NVarChar(20)")]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qq", DbType="NVarChar(30)")]
		public string qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this.OnqqChanging(value);
					this.SendPropertyChanging();
					this._qq = value;
					this.SendPropertyChanged("qq");
					this.OnqqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(255)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_safe_question", DbType="NVarChar(255)")]
		public string safe_question
		{
			get
			{
				return this._safe_question;
			}
			set
			{
				if ((this._safe_question != value))
				{
					this.Onsafe_questionChanging(value);
					this.SendPropertyChanging();
					this._safe_question = value;
					this.SendPropertyChanged("safe_question");
					this.Onsafe_questionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_safe_answer", DbType="NVarChar(255)")]
		public string safe_answer
		{
			get
			{
				return this._safe_answer;
			}
			set
			{
				if ((this._safe_answer != value))
				{
					this.Onsafe_answerChanging(value);
					this.SendPropertyChanging();
					this._safe_answer = value;
					this.SendPropertyChanged("safe_answer");
					this.Onsafe_answerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_point", DbType="Int")]
		public System.Nullable<int> point
		{
			get
			{
				return this._point;
			}
			set
			{
				if ((this._point != value))
				{
					this.OnpointChanging(value);
					this.SendPropertyChanging();
					this._point = value;
					this.SendPropertyChanged("point");
					this.OnpointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exp", DbType="Int")]
		public System.Nullable<int> exp
		{
			get
			{
				return this._exp;
			}
			set
			{
				if ((this._exp != value))
				{
					this.OnexpChanging(value);
					this.SendPropertyChanging();
					this._exp = value;
					this.SendPropertyChanged("exp");
					this.OnexpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt")]
		public System.Nullable<byte> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> reg_time
		{
			get
			{
				return this._reg_time;
			}
			set
			{
				if ((this._reg_time != value))
				{
					this.Onreg_timeChanging(value);
					this.SendPropertyChanging();
					this._reg_time = value;
					this.SendPropertyChanged("reg_time");
					this.Onreg_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_ip", DbType="NVarChar(30)")]
		public string reg_ip
		{
			get
			{
				return this._reg_ip;
			}
			set
			{
				if ((this._reg_ip != value))
				{
					this.Onreg_ipChanging(value);
					this.SendPropertyChanging();
					this._reg_ip = value;
					this.SendPropertyChanged("reg_ip");
					this.Onreg_ipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_real_name", DbType="NVarChar(20)")]
		public string real_name
		{
			get
			{
				return this._real_name;
			}
			set
			{
				if ((this._real_name != value))
				{
					this.Onreal_nameChanging(value);
					this.SendPropertyChanging();
					this._real_name = value;
					this.SendPropertyChanged("real_name");
					this.Onreal_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_card_number", DbType="VarChar(20)")]
		public string id_card_number
		{
			get
			{
				return this._id_card_number;
			}
			set
			{
				if ((this._id_card_number != value))
				{
					this.Onid_card_numberChanging(value);
					this.SendPropertyChanging();
					this._id_card_number = value;
					this.SendPropertyChanged("id_card_number");
					this.Onid_card_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area", DbType="NVarChar(50)")]
		public string area
		{
			get
			{
				return this._area;
			}
			set
			{
				if ((this._area != value))
				{
					this.OnareaChanging(value);
					this.SendPropertyChanging();
					this._area = value;
					this.SendPropertyChanged("area");
					this.OnareaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openid", DbType="VarChar(50)")]
		public string openid
		{
			get
			{
				return this._openid;
			}
			set
			{
				if ((this._openid != value))
				{
					this.OnopenidChanging(value);
					this.SendPropertyChanging();
					this._openid = value;
					this.SendPropertyChanged("openid");
					this.OnopenidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token", DbType="VarChar(50)")]
		public string token
		{
			get
			{
				return this._token;
			}
			set
			{
				if ((this._token != value))
				{
					this.OntokenChanging(value);
					this.SendPropertyChanging();
					this._token = value;
					this.SendPropertyChanged("token");
					this.OntokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_identity_id", DbType="VarChar(18)")]
		public string identity_id
		{
			get
			{
				return this._identity_id;
			}
			set
			{
				if ((this._identity_id != value))
				{
					this.Onidentity_idChanging(value);
					this.SendPropertyChanging();
					this._identity_id = value;
					this.SendPropertyChanged("identity_id");
					this.Onidentity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_protocolCode", DbType="VarChar(64)")]
		public string protocolCode
		{
			get
			{
				return this._protocolCode;
			}
			set
			{
				if ((this._protocolCode != value))
				{
					this.OnprotocolCodeChanging(value);
					this.SendPropertyChanging();
					this._protocolCode = value;
					this.SendPropertyChanged("protocolCode");
					this.OnprotocolCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_autoRepay", DbType="NVarChar(50)")]
		public string autoRepay
		{
			get
			{
				return this._autoRepay;
			}
			set
			{
				if ((this._autoRepay != value))
				{
					this.OnautoRepayChanging(value);
					this.SendPropertyChanging();
					this._autoRepay = value;
					this.SendPropertyChanged("autoRepay");
					this.OnautoRepayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_activity_transactions", Storage="_li_activity_transactions", ThisKey="id", OtherKey="user_id")]
		public EntitySet<li_activity_transactions> li_activity_transactions
		{
			get
			{
				return this._li_activity_transactions;
			}
			set
			{
				this._li_activity_transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_bank_accounts", Storage="_li_bank_accounts", ThisKey="id", OtherKey="owner")]
		public EntitySet<li_bank_accounts> li_bank_accounts
		{
			get
			{
				return this._li_bank_accounts;
			}
			set
			{
				this._li_bank_accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_bank_transactions", Storage="_li_bank_transactions", ThisKey="id", OtherKey="charger")]
		public EntitySet<li_bank_transactions> li_bank_transactions
		{
			get
			{
				return this._li_bank_transactions;
			}
			set
			{
				this._li_bank_transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_invitations", Storage="_li_invitations", ThisKey="id", OtherKey="user_id", IsUnique=true, IsForeignKey=false)]
		public li_invitations li_invitations
		{
			get
			{
				return this._li_invitations.Entity;
			}
			set
			{
				li_invitations previousValue = this._li_invitations.Entity;
				if (((previousValue != value) 
							|| (this._li_invitations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_invitations.Entity = null;
						previousValue.dt_users = null;
					}
					this._li_invitations.Entity = value;
					if ((value != null))
					{
						value.dt_users = this;
					}
					this.SendPropertyChanged("li_invitations");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_invitations1", Storage="_li_invitations1", ThisKey="id", OtherKey="inviter")]
		public EntitySet<li_invitations> li_invitations1
		{
			get
			{
				return this._li_invitations1;
			}
			set
			{
				this._li_invitations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_wallet_histories", Storage="_li_wallet_histories", ThisKey="id", OtherKey="user_id")]
		public EntitySet<li_wallet_histories> li_wallet_histories
		{
			get
			{
				return this._li_wallet_histories;
			}
			set
			{
				this._li_wallet_histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_dt_user_code", Storage="_dt_user_code", ThisKey="id", OtherKey="user_id")]
		public EntitySet<dt_user_code> dt_user_code
		{
			get
			{
				return this._dt_user_code;
			}
			set
			{
				this._dt_user_code.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_user_group_servers", Storage="_li_user_group_servers", ThisKey="id", OtherKey="serving_user", IsUnique=true, IsForeignKey=false)]
		public li_user_group_servers li_user_group_servers
		{
			get
			{
				return this._li_user_group_servers.Entity;
			}
			set
			{
				li_user_group_servers previousValue = this._li_user_group_servers.Entity;
				if (((previousValue != value) 
							|| (this._li_user_group_servers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_user_group_servers.Entity = null;
						previousValue.dt_users = null;
					}
					this._li_user_group_servers.Entity = value;
					if ((value != null))
					{
						value.dt_users = this;
					}
					this.SendPropertyChanged("li_user_group_servers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_wallets", Storage="_li_wallets", ThisKey="id", OtherKey="user_id", IsUnique=true, IsForeignKey=false)]
		public li_wallets li_wallets
		{
			get
			{
				return this._li_wallets.Entity;
			}
			set
			{
				li_wallets previousValue = this._li_wallets.Entity;
				if (((previousValue != value) 
							|| (this._li_wallets.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_wallets.Entity = null;
						previousValue.dt_users = null;
					}
					this._li_wallets.Entity = value;
					if ((value != null))
					{
						value.dt_users = this;
					}
					this.SendPropertyChanged("li_wallets");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_dt_user_login_log", Storage="_dt_user_login_log", ThisKey="id", OtherKey="user_id")]
		public EntitySet<dt_user_login_log> dt_user_login_log
		{
			get
			{
				return this._dt_user_login_log;
			}
			set
			{
				this._dt_user_login_log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_albums", Storage="_li_albums", ThisKey="id", OtherKey="the_user")]
		public EntitySet<li_albums> li_albums
		{
			get
			{
				return this._li_albums;
			}
			set
			{
				this._li_albums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_creditors", Storage="_li_creditors", ThisKey="id", OtherKey="user_id", IsUnique=true, IsForeignKey=false)]
		public li_creditors li_creditors
		{
			get
			{
				return this._li_creditors.Entity;
			}
			set
			{
				li_creditors previousValue = this._li_creditors.Entity;
				if (((previousValue != value) 
							|| (this._li_creditors.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_creditors.Entity = null;
						previousValue.dt_users = null;
					}
					this._li_creditors.Entity = value;
					if ((value != null))
					{
						value.dt_users = this;
					}
					this.SendPropertyChanged("li_creditors");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_notification_settings", Storage="_li_notification_settings", ThisKey="id", OtherKey="user_id")]
		public EntitySet<li_notification_settings> li_notification_settings
		{
			get
			{
				return this._li_notification_settings;
			}
			set
			{
				this._li_notification_settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_dt_user_message", Storage="_dt_user_message", ThisKey="id", OtherKey="receiver")]
		public EntitySet<dt_user_message> dt_user_message
		{
			get
			{
				return this._dt_user_message;
			}
			set
			{
				this._dt_user_message.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_company_inoutcome", Storage="_li_company_inoutcome", ThisKey="id", OtherKey="user_id")]
		public EntitySet<li_company_inoutcome> li_company_inoutcome
		{
			get
			{
				return this._li_company_inoutcome;
			}
			set
			{
				this._li_company_inoutcome.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_repayment_tasks", Storage="_li_repayment_tasks", ThisKey="id", OtherKey="only_repay_to")]
		public EntitySet<li_repayment_tasks> li_repayment_tasks
		{
			get
			{
				return this._li_repayment_tasks;
			}
			set
			{
				this._li_repayment_tasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_project_transactions", Storage="_li_project_transactions", ThisKey="id", OtherKey="investor")]
		public EntitySet<li_project_transactions> li_project_transactions
		{
			get
			{
				return this._li_project_transactions;
			}
			set
			{
				this._li_project_transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_loaners", Storage="_li_loaners", ThisKey="id", OtherKey="user_id")]
		public EntitySet<li_loaners> li_loaners
		{
			get
			{
				return this._li_loaners;
			}
			set
			{
				this._li_loaners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_pay_request_log", Storage="_li_pay_request_log", ThisKey="id", OtherKey="user_id")]
		public EntitySet<li_pay_request_log> li_pay_request_log
		{
			get
			{
				return this._li_pay_request_log;
			}
			set
			{
				this._li_pay_request_log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_pay_response_log", Storage="_li_pay_response_log", ThisKey="id", OtherKey="user_id")]
		public EntitySet<li_pay_response_log> li_pay_response_log
		{
			get
			{
				return this._li_pay_response_log;
			}
			set
			{
				this._li_pay_response_log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_user_groups_dt_users", Storage="_dt_user_groups", ThisKey="group_id", OtherKey="id", IsForeignKey=true)]
		public dt_user_groups dt_user_groups
		{
			get
			{
				return this._dt_user_groups.Entity;
			}
			set
			{
				dt_user_groups previousValue = this._dt_user_groups.Entity;
				if (((previousValue != value) 
							|| (this._dt_user_groups.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_user_groups.Entity = null;
						previousValue.dt_users.Remove(this);
					}
					this._dt_user_groups.Entity = value;
					if ((value != null))
					{
						value.dt_users.Add(this);
						this._group_id = value.id;
					}
					else
					{
						this._group_id = default(int);
					}
					this.SendPropertyChanged("dt_user_groups");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_activity_transactions(li_activity_transactions entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_li_activity_transactions(li_activity_transactions entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_li_bank_accounts(li_bank_accounts entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_li_bank_accounts(li_bank_accounts entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_li_bank_transactions(li_bank_transactions entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_li_bank_transactions(li_bank_transactions entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_li_invitations1(li_invitations entity)
		{
			this.SendPropertyChanging();
			entity.dt_users1 = this;
		}
		
		private void detach_li_invitations1(li_invitations entity)
		{
			this.SendPropertyChanging();
			entity.dt_users1 = null;
		}
		
		private void attach_li_wallet_histories(li_wallet_histories entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_li_wallet_histories(li_wallet_histories entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_dt_user_code(dt_user_code entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_dt_user_code(dt_user_code entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_dt_user_login_log(dt_user_login_log entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_dt_user_login_log(dt_user_login_log entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_li_albums(li_albums entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_li_albums(li_albums entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_li_notification_settings(li_notification_settings entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_li_notification_settings(li_notification_settings entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_dt_user_message(dt_user_message entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_dt_user_message(dt_user_message entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_li_company_inoutcome(li_company_inoutcome entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_li_company_inoutcome(li_company_inoutcome entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_li_repayment_tasks(li_repayment_tasks entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_li_repayment_tasks(li_repayment_tasks entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_li_project_transactions(li_project_transactions entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_li_project_transactions(li_project_transactions entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_li_loaners(li_loaners entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_li_loaners(li_loaners entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_li_pay_request_log(li_pay_request_log entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_li_pay_request_log(li_pay_request_log entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
		
		private void attach_li_pay_response_log(li_pay_response_log entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = this;
		}
		
		private void detach_li_pay_response_log(li_pay_response_log entity)
		{
			this.SendPropertyChanging();
			entity.dt_users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_projects")]
	public partial class li_projects : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _category_id;
		
		private int _type;
		
		private string _title;
		
		private string _no;
		
		private string _user_name;
		
		private System.DateTime _add_time;
		
		private System.Nullable<System.DateTime> _audit_time;
		
		private System.Nullable<System.DateTime> _publish_time;
		
		private System.Nullable<System.DateTime> _invest_complete_time;
		
		private System.Nullable<System.DateTime> _make_loan_time;
		
		private System.Nullable<System.DateTime> _complete_time;
		
		private int _status;
		
		private System.Nullable<int> _tag;
		
		private decimal _profit_rate_year;
		
		private decimal _profit_rate;
		
		private int _repayment_term_span;
		
		private int _repayment_term_span_count;
		
		private System.Nullable<int> _repayment_type;
		
		private decimal _financing_amount;
		
		private decimal _investment_amount;
		
		private short _financing_day;
		
		private int _risk_id;
		
		private System.Nullable<int> _sort_id;
		
		private string _img_url;
		
		private System.Nullable<int> _click;
		
		private string _seo_title;
		
		private string _seo_keywords;
		
		private string _seo_description;
		
		private System.Nullable<decimal> _loan_fee_rate;
		
		private System.Nullable<decimal> _bond_fee_rate;
		
		private string _contract_no;
		
		private EntitySet<li_company_inoutcome> _li_company_inoutcome;
		
		private EntitySet<li_repayment_tasks> _li_repayment_tasks;
		
		private EntitySet<li_project_transactions> _li_project_transactions;
		
		private EntityRef<dt_article_category> _dt_article_category;
		
		private EntityRef<li_risks> _li_risks;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnnoChanging(string value);
    partial void OnnoChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onadd_timeChanging(System.DateTime value);
    partial void Onadd_timeChanged();
    partial void Onaudit_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onaudit_timeChanged();
    partial void Onpublish_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onpublish_timeChanged();
    partial void Oninvest_complete_timeChanging(System.Nullable<System.DateTime> value);
    partial void Oninvest_complete_timeChanged();
    partial void Onmake_loan_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onmake_loan_timeChanged();
    partial void Oncomplete_timeChanging(System.Nullable<System.DateTime> value);
    partial void Oncomplete_timeChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OntagChanging(System.Nullable<int> value);
    partial void OntagChanged();
    partial void Onprofit_rate_yearChanging(decimal value);
    partial void Onprofit_rate_yearChanged();
    partial void Onprofit_rateChanging(decimal value);
    partial void Onprofit_rateChanged();
    partial void Onrepayment_term_spanChanging(int value);
    partial void Onrepayment_term_spanChanged();
    partial void Onrepayment_term_span_countChanging(int value);
    partial void Onrepayment_term_span_countChanged();
    partial void Onrepayment_typeChanging(System.Nullable<int> value);
    partial void Onrepayment_typeChanged();
    partial void Onfinancing_amountChanging(decimal value);
    partial void Onfinancing_amountChanged();
    partial void Oninvestment_amountChanging(decimal value);
    partial void Oninvestment_amountChanged();
    partial void Onfinancing_dayChanging(short value);
    partial void Onfinancing_dayChanged();
    partial void Onrisk_idChanging(int value);
    partial void Onrisk_idChanged();
    partial void Onsort_idChanging(System.Nullable<int> value);
    partial void Onsort_idChanged();
    partial void Onimg_urlChanging(string value);
    partial void Onimg_urlChanged();
    partial void OnclickChanging(System.Nullable<int> value);
    partial void OnclickChanged();
    partial void Onseo_titleChanging(string value);
    partial void Onseo_titleChanged();
    partial void Onseo_keywordsChanging(string value);
    partial void Onseo_keywordsChanged();
    partial void Onseo_descriptionChanging(string value);
    partial void Onseo_descriptionChanged();
    partial void Onloan_fee_rateChanging(System.Nullable<decimal> value);
    partial void Onloan_fee_rateChanged();
    partial void Onbond_fee_rateChanging(System.Nullable<decimal> value);
    partial void Onbond_fee_rateChanged();
    partial void Oncontract_noChanging(string value);
    partial void Oncontract_noChanged();
    #endregion
		
		public li_projects()
		{
			this._li_company_inoutcome = new EntitySet<li_company_inoutcome>(new Action<li_company_inoutcome>(this.attach_li_company_inoutcome), new Action<li_company_inoutcome>(this.detach_li_company_inoutcome));
			this._li_repayment_tasks = new EntitySet<li_repayment_tasks>(new Action<li_repayment_tasks>(this.attach_li_repayment_tasks), new Action<li_repayment_tasks>(this.detach_li_repayment_tasks));
			this._li_project_transactions = new EntitySet<li_project_transactions>(new Action<li_project_transactions>(this.attach_li_project_transactions), new Action<li_project_transactions>(this.detach_li_project_transactions));
			this._dt_article_category = default(EntityRef<dt_article_category>);
			this._li_risks = default(EntityRef<li_risks>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._dt_article_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string no
		{
			get
			{
				return this._no;
			}
			set
			{
				if ((this._no != value))
				{
					this.OnnoChanging(value);
					this.SendPropertyChanging();
					this._no = value;
					this.SendPropertyChanged("no");
					this.OnnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_time", DbType="DateTime NOT NULL")]
		public System.DateTime add_time
		{
			get
			{
				return this._add_time;
			}
			set
			{
				if ((this._add_time != value))
				{
					this.Onadd_timeChanging(value);
					this.SendPropertyChanging();
					this._add_time = value;
					this.SendPropertyChanged("add_time");
					this.Onadd_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_audit_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> audit_time
		{
			get
			{
				return this._audit_time;
			}
			set
			{
				if ((this._audit_time != value))
				{
					this.Onaudit_timeChanging(value);
					this.SendPropertyChanging();
					this._audit_time = value;
					this.SendPropertyChanged("audit_time");
					this.Onaudit_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publish_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> publish_time
		{
			get
			{
				return this._publish_time;
			}
			set
			{
				if ((this._publish_time != value))
				{
					this.Onpublish_timeChanging(value);
					this.SendPropertyChanging();
					this._publish_time = value;
					this.SendPropertyChanged("publish_time");
					this.Onpublish_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invest_complete_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> invest_complete_time
		{
			get
			{
				return this._invest_complete_time;
			}
			set
			{
				if ((this._invest_complete_time != value))
				{
					this.Oninvest_complete_timeChanging(value);
					this.SendPropertyChanging();
					this._invest_complete_time = value;
					this.SendPropertyChanged("invest_complete_time");
					this.Oninvest_complete_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_make_loan_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> make_loan_time
		{
			get
			{
				return this._make_loan_time;
			}
			set
			{
				if ((this._make_loan_time != value))
				{
					this.Onmake_loan_timeChanging(value);
					this.SendPropertyChanging();
					this._make_loan_time = value;
					this.SendPropertyChanged("make_loan_time");
					this.Onmake_loan_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_complete_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> complete_time
		{
			get
			{
				return this._complete_time;
			}
			set
			{
				if ((this._complete_time != value))
				{
					this.Oncomplete_timeChanging(value);
					this.SendPropertyChanging();
					this._complete_time = value;
					this.SendPropertyChanged("complete_time");
					this.Oncomplete_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag", DbType="Int")]
		public System.Nullable<int> tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if ((this._tag != value))
				{
					this.OntagChanging(value);
					this.SendPropertyChanging();
					this._tag = value;
					this.SendPropertyChanged("tag");
					this.OntagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profit_rate_year", DbType="Decimal(5,2) NOT NULL")]
		public decimal profit_rate_year
		{
			get
			{
				return this._profit_rate_year;
			}
			set
			{
				if ((this._profit_rate_year != value))
				{
					this.Onprofit_rate_yearChanging(value);
					this.SendPropertyChanging();
					this._profit_rate_year = value;
					this.SendPropertyChanged("profit_rate_year");
					this.Onprofit_rate_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profit_rate", DbType="Decimal(9,9) NOT NULL")]
		public decimal profit_rate
		{
			get
			{
				return this._profit_rate;
			}
			set
			{
				if ((this._profit_rate != value))
				{
					this.Onprofit_rateChanging(value);
					this.SendPropertyChanging();
					this._profit_rate = value;
					this.SendPropertyChanged("profit_rate");
					this.Onprofit_rateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repayment_term_span", DbType="Int NOT NULL")]
		public int repayment_term_span
		{
			get
			{
				return this._repayment_term_span;
			}
			set
			{
				if ((this._repayment_term_span != value))
				{
					this.Onrepayment_term_spanChanging(value);
					this.SendPropertyChanging();
					this._repayment_term_span = value;
					this.SendPropertyChanged("repayment_term_span");
					this.Onrepayment_term_spanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repayment_term_span_count", DbType="Int NOT NULL")]
		public int repayment_term_span_count
		{
			get
			{
				return this._repayment_term_span_count;
			}
			set
			{
				if ((this._repayment_term_span_count != value))
				{
					this.Onrepayment_term_span_countChanging(value);
					this.SendPropertyChanging();
					this._repayment_term_span_count = value;
					this.SendPropertyChanged("repayment_term_span_count");
					this.Onrepayment_term_span_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repayment_type", DbType="Int")]
		public System.Nullable<int> repayment_type
		{
			get
			{
				return this._repayment_type;
			}
			set
			{
				if ((this._repayment_type != value))
				{
					this.Onrepayment_typeChanging(value);
					this.SendPropertyChanging();
					this._repayment_type = value;
					this.SendPropertyChanged("repayment_type");
					this.Onrepayment_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_financing_amount", DbType="Decimal(19,2) NOT NULL")]
		public decimal financing_amount
		{
			get
			{
				return this._financing_amount;
			}
			set
			{
				if ((this._financing_amount != value))
				{
					this.Onfinancing_amountChanging(value);
					this.SendPropertyChanging();
					this._financing_amount = value;
					this.SendPropertyChanged("financing_amount");
					this.Onfinancing_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investment_amount", DbType="Decimal(19,2) NOT NULL")]
		public decimal investment_amount
		{
			get
			{
				return this._investment_amount;
			}
			set
			{
				if ((this._investment_amount != value))
				{
					this.Oninvestment_amountChanging(value);
					this.SendPropertyChanging();
					this._investment_amount = value;
					this.SendPropertyChanged("investment_amount");
					this.Oninvestment_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_financing_day", DbType="SmallInt NOT NULL")]
		public short financing_day
		{
			get
			{
				return this._financing_day;
			}
			set
			{
				if ((this._financing_day != value))
				{
					this.Onfinancing_dayChanging(value);
					this.SendPropertyChanging();
					this._financing_day = value;
					this.SendPropertyChanged("financing_day");
					this.Onfinancing_dayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_risk_id", DbType="Int NOT NULL")]
		public int risk_id
		{
			get
			{
				return this._risk_id;
			}
			set
			{
				if ((this._risk_id != value))
				{
					if (this._li_risks.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrisk_idChanging(value);
					this.SendPropertyChanging();
					this._risk_id = value;
					this.SendPropertyChanged("risk_id");
					this.Onrisk_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_id", DbType="Int")]
		public System.Nullable<int> sort_id
		{
			get
			{
				return this._sort_id;
			}
			set
			{
				if ((this._sort_id != value))
				{
					this.Onsort_idChanging(value);
					this.SendPropertyChanging();
					this._sort_id = value;
					this.SendPropertyChanged("sort_id");
					this.Onsort_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_url", DbType="NVarChar(255)")]
		public string img_url
		{
			get
			{
				return this._img_url;
			}
			set
			{
				if ((this._img_url != value))
				{
					this.Onimg_urlChanging(value);
					this.SendPropertyChanging();
					this._img_url = value;
					this.SendPropertyChanged("img_url");
					this.Onimg_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_click", DbType="Int")]
		public System.Nullable<int> click
		{
			get
			{
				return this._click;
			}
			set
			{
				if ((this._click != value))
				{
					this.OnclickChanging(value);
					this.SendPropertyChanging();
					this._click = value;
					this.SendPropertyChanged("click");
					this.OnclickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seo_title", DbType="NVarChar(255)")]
		public string seo_title
		{
			get
			{
				return this._seo_title;
			}
			set
			{
				if ((this._seo_title != value))
				{
					this.Onseo_titleChanging(value);
					this.SendPropertyChanging();
					this._seo_title = value;
					this.SendPropertyChanged("seo_title");
					this.Onseo_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seo_keywords", DbType="NVarChar(255)")]
		public string seo_keywords
		{
			get
			{
				return this._seo_keywords;
			}
			set
			{
				if ((this._seo_keywords != value))
				{
					this.Onseo_keywordsChanging(value);
					this.SendPropertyChanging();
					this._seo_keywords = value;
					this.SendPropertyChanged("seo_keywords");
					this.Onseo_keywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seo_description", DbType="NVarChar(255)")]
		public string seo_description
		{
			get
			{
				return this._seo_description;
			}
			set
			{
				if ((this._seo_description != value))
				{
					this.Onseo_descriptionChanging(value);
					this.SendPropertyChanging();
					this._seo_description = value;
					this.SendPropertyChanged("seo_description");
					this.Onseo_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loan_fee_rate", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> loan_fee_rate
		{
			get
			{
				return this._loan_fee_rate;
			}
			set
			{
				if ((this._loan_fee_rate != value))
				{
					this.Onloan_fee_rateChanging(value);
					this.SendPropertyChanging();
					this._loan_fee_rate = value;
					this.SendPropertyChanged("loan_fee_rate");
					this.Onloan_fee_rateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bond_fee_rate", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> bond_fee_rate
		{
			get
			{
				return this._bond_fee_rate;
			}
			set
			{
				if ((this._bond_fee_rate != value))
				{
					this.Onbond_fee_rateChanging(value);
					this.SendPropertyChanging();
					this._bond_fee_rate = value;
					this.SendPropertyChanged("bond_fee_rate");
					this.Onbond_fee_rateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contract_no", DbType="NVarChar(50)")]
		public string contract_no
		{
			get
			{
				return this._contract_no;
			}
			set
			{
				if ((this._contract_no != value))
				{
					this.Oncontract_noChanging(value);
					this.SendPropertyChanging();
					this._contract_no = value;
					this.SendPropertyChanged("contract_no");
					this.Oncontract_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_projects_li_company_inoutcome", Storage="_li_company_inoutcome", ThisKey="id", OtherKey="project_id")]
		public EntitySet<li_company_inoutcome> li_company_inoutcome
		{
			get
			{
				return this._li_company_inoutcome;
			}
			set
			{
				this._li_company_inoutcome.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_projects_li_repayment_tasks", Storage="_li_repayment_tasks", ThisKey="id", OtherKey="project")]
		public EntitySet<li_repayment_tasks> li_repayment_tasks
		{
			get
			{
				return this._li_repayment_tasks;
			}
			set
			{
				this._li_repayment_tasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_projects_li_project_transactions", Storage="_li_project_transactions", ThisKey="id", OtherKey="project")]
		public EntitySet<li_project_transactions> li_project_transactions
		{
			get
			{
				return this._li_project_transactions;
			}
			set
			{
				this._li_project_transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_article_category_li_projects", Storage="_dt_article_category", ThisKey="category_id", OtherKey="id", IsForeignKey=true)]
		public dt_article_category dt_article_category
		{
			get
			{
				return this._dt_article_category.Entity;
			}
			set
			{
				dt_article_category previousValue = this._dt_article_category.Entity;
				if (((previousValue != value) 
							|| (this._dt_article_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_article_category.Entity = null;
						previousValue.li_projects.Remove(this);
					}
					this._dt_article_category.Entity = value;
					if ((value != null))
					{
						value.li_projects.Add(this);
						this._category_id = value.id;
					}
					else
					{
						this._category_id = default(int);
					}
					this.SendPropertyChanged("dt_article_category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_risks_li_projects", Storage="_li_risks", ThisKey="risk_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public li_risks li_risks
		{
			get
			{
				return this._li_risks.Entity;
			}
			set
			{
				li_risks previousValue = this._li_risks.Entity;
				if (((previousValue != value) 
							|| (this._li_risks.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_risks.Entity = null;
						previousValue.li_projects.Remove(this);
					}
					this._li_risks.Entity = value;
					if ((value != null))
					{
						value.li_projects.Add(this);
						this._risk_id = value.id;
					}
					else
					{
						this._risk_id = default(int);
					}
					this.SendPropertyChanged("li_risks");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_company_inoutcome(li_company_inoutcome entity)
		{
			this.SendPropertyChanging();
			entity.li_projects = this;
		}
		
		private void detach_li_company_inoutcome(li_company_inoutcome entity)
		{
			this.SendPropertyChanging();
			entity.li_projects = null;
		}
		
		private void attach_li_repayment_tasks(li_repayment_tasks entity)
		{
			this.SendPropertyChanging();
			entity.li_projects = this;
		}
		
		private void detach_li_repayment_tasks(li_repayment_tasks entity)
		{
			this.SendPropertyChanging();
			entity.li_projects = null;
		}
		
		private void attach_li_project_transactions(li_project_transactions entity)
		{
			this.SendPropertyChanging();
			entity.li_projects = this;
		}
		
		private void detach_li_project_transactions(li_project_transactions entity)
		{
			this.SendPropertyChanging();
			entity.li_projects = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_pay_request_log")]
	public partial class li_pay_request_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private System.Nullable<int> _user_id;
		
		private string _project_id;
		
		private int _api;
		
		private int _status;
		
		private string _request_content;
		
		private System.DateTime _request_time;
		
		private System.DateTime _complete_time;
		
		private EntitySet<li_pay_response_log> _li_pay_response_log;
		
		private EntityRef<dt_users> _dt_users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onproject_idChanging(string value);
    partial void Onproject_idChanged();
    partial void OnapiChanging(int value);
    partial void OnapiChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void Onrequest_contentChanging(string value);
    partial void Onrequest_contentChanged();
    partial void Onrequest_timeChanging(System.DateTime value);
    partial void Onrequest_timeChanged();
    partial void Oncomplete_timeChanging(System.DateTime value);
    partial void Oncomplete_timeChanged();
    #endregion
		
		public li_pay_request_log()
		{
			this._li_pay_response_log = new EntitySet<li_pay_response_log>(new Action<li_pay_response_log>(this.attach_li_pay_response_log), new Action<li_pay_response_log>(this.detach_li_pay_response_log));
			this._dt_users = default(EntityRef<dt_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="VarChar(50)")]
		public string project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_api", DbType="Int NOT NULL")]
		public int api
		{
			get
			{
				return this._api;
			}
			set
			{
				if ((this._api != value))
				{
					this.OnapiChanging(value);
					this.SendPropertyChanging();
					this._api = value;
					this.SendPropertyChanged("api");
					this.OnapiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string request_content
		{
			get
			{
				return this._request_content;
			}
			set
			{
				if ((this._request_content != value))
				{
					this.Onrequest_contentChanging(value);
					this.SendPropertyChanging();
					this._request_content = value;
					this.SendPropertyChanged("request_content");
					this.Onrequest_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_time", DbType="Date NOT NULL")]
		public System.DateTime request_time
		{
			get
			{
				return this._request_time;
			}
			set
			{
				if ((this._request_time != value))
				{
					this.Onrequest_timeChanging(value);
					this.SendPropertyChanging();
					this._request_time = value;
					this.SendPropertyChanged("request_time");
					this.Onrequest_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_complete_time", DbType="Date NOT NULL")]
		public System.DateTime complete_time
		{
			get
			{
				return this._complete_time;
			}
			set
			{
				if ((this._complete_time != value))
				{
					this.Oncomplete_timeChanging(value);
					this.SendPropertyChanging();
					this._complete_time = value;
					this.SendPropertyChanged("complete_time");
					this.Oncomplete_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_pay_request_log_li_pay_response_log", Storage="_li_pay_response_log", ThisKey="id", OtherKey="request_id")]
		public EntitySet<li_pay_response_log> li_pay_response_log
		{
			get
			{
				return this._li_pay_response_log;
			}
			set
			{
				this._li_pay_response_log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_pay_request_log", Storage="_dt_users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_pay_request_log.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_pay_request_log.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_li_pay_response_log(li_pay_response_log entity)
		{
			this.SendPropertyChanging();
			entity.li_pay_request_log = this;
		}
		
		private void detach_li_pay_response_log(li_pay_response_log entity)
		{
			this.SendPropertyChanging();
			entity.li_pay_request_log = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.li_pay_response_log")]
	public partial class li_pay_response_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _request_id;
		
		private System.Nullable<int> _user_id;
		
		private string _project_id;
		
		private int _status;
		
		private string _response_content;
		
		private System.DateTime _response_time;
		
		private string _result;
		
		private string _remarks;
		
		private EntityRef<dt_users> _dt_users;
		
		private EntityRef<li_pay_request_log> _li_pay_request_log;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onrequest_idChanging(string value);
    partial void Onrequest_idChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onproject_idChanging(string value);
    partial void Onproject_idChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void Onresponse_contentChanging(string value);
    partial void Onresponse_contentChanged();
    partial void Onresponse_timeChanging(System.DateTime value);
    partial void Onresponse_timeChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void OnremarksChanging(string value);
    partial void OnremarksChanged();
    #endregion
		
		public li_pay_response_log()
		{
			this._dt_users = default(EntityRef<dt_users>);
			this._li_pay_request_log = default(EntityRef<li_pay_request_log>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string request_id
		{
			get
			{
				return this._request_id;
			}
			set
			{
				if ((this._request_id != value))
				{
					if (this._li_pay_request_log.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrequest_idChanging(value);
					this.SendPropertyChanging();
					this._request_id = value;
					this.SendPropertyChanged("request_id");
					this.Onrequest_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._dt_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="VarChar(50)")]
		public string project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_response_content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string response_content
		{
			get
			{
				return this._response_content;
			}
			set
			{
				if ((this._response_content != value))
				{
					this.Onresponse_contentChanging(value);
					this.SendPropertyChanging();
					this._response_content = value;
					this.SendPropertyChanged("response_content");
					this.Onresponse_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_response_time", DbType="Date NOT NULL")]
		public System.DateTime response_time
		{
			get
			{
				return this._response_time;
			}
			set
			{
				if ((this._response_time != value))
				{
					this.Onresponse_timeChanging(value);
					this.SendPropertyChanging();
					this._response_time = value;
					this.SendPropertyChanged("response_time");
					this.Onresponse_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remarks", DbType="NVarChar(500)")]
		public string remarks
		{
			get
			{
				return this._remarks;
			}
			set
			{
				if ((this._remarks != value))
				{
					this.OnremarksChanging(value);
					this.SendPropertyChanging();
					this._remarks = value;
					this.SendPropertyChanged("remarks");
					this.OnremarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dt_users_li_pay_response_log", Storage="_dt_users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public dt_users dt_users
		{
			get
			{
				return this._dt_users.Entity;
			}
			set
			{
				dt_users previousValue = this._dt_users.Entity;
				if (((previousValue != value) 
							|| (this._dt_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dt_users.Entity = null;
						previousValue.li_pay_response_log.Remove(this);
					}
					this._dt_users.Entity = value;
					if ((value != null))
					{
						value.li_pay_response_log.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("dt_users");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="li_pay_request_log_li_pay_response_log", Storage="_li_pay_request_log", ThisKey="request_id", OtherKey="id", IsForeignKey=true)]
		public li_pay_request_log li_pay_request_log
		{
			get
			{
				return this._li_pay_request_log.Entity;
			}
			set
			{
				li_pay_request_log previousValue = this._li_pay_request_log.Entity;
				if (((previousValue != value) 
							|| (this._li_pay_request_log.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._li_pay_request_log.Entity = null;
						previousValue.li_pay_response_log.Remove(this);
					}
					this._li_pay_request_log.Entity = value;
					if ((value != null))
					{
						value.li_pay_response_log.Add(this);
						this._request_id = value.id;
					}
					else
					{
						this._request_id = default(string);
					}
					this.SendPropertyChanged("li_pay_request_log");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
